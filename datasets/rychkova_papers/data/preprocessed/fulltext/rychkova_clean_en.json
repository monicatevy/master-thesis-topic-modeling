{
  "2010-BATI": "introduction assessment business alignment subject continuous interest research industrial communities practitioners validation business alignment important part organisation government researchers approaches accurate alignment measurement pave way new theories field many approaches business alignment assessment addressed literature approaches divided three groups questionnaire based approaches framework based approaches approaches based alignment measurements many organisations metrics based alignment assessment beneficial provides quantitative results allow managers measure business value existing increase value work concentrated last type business alignment assessment approaches– metrics based ones validation business alignment approaches based metrics addressed research literature agree author order valid approaches grounded solid theory questionable whether worth showing measure measuring particular attribute attribute part theory briand argues proposed metrics way measure undergone empirical validation schneidewind advocates empirical validation process metric associated measure interest process specified software metrics remains valid metrics discipline particularly enterprise architecture experience shows practical validation criteria metrics based approach quite different theoretical ones follow author argues measure correct measurement theory perspective practical relevance problem hand hand measure entirely satisfactory theoretical perspective good enough approximation work fine practice paper discuss theoretical empirical practical validity metrics based approaches alignment assessment propose empirical fitness1 validation measurement approach business alignment developed first identify set practical validity criteria approach illustrate criteria example generalise criteria propose guidelines operationalisation approaches based alignment measurements research protocol literature five classes empirical research identified controlled experiments case studies survey research ethnographies action research work selected case studies research method type method offers deep understanding given phenomenon explains phenomenon occurs work use abc supermarket case study justify case critical case test fitness measurement approach proceed case study follows first identify criteria theoretical validity fitness measurement approach justify criteria make analysis related works show criteria considered important many approaches implement approach industrial project information systems evolution abc supermarket implementing observe whether theoretical criteria validity met ii check theoretical criteriaare recognised important practitioners iii identify validity criteria important practitioners omitted identified theoretical criteria list call criteria empirical vriteria validity study shows theoretical criteria refuted factors related fitness metrics validity elicited fitness relationship definition used degree needs demands goals objectives structure one component consistent needs demands goals objectives structure another component paper organised follows section introduce fitness measurement approach define theoretical empirical criteria validity approach section present case study introducing industrial project scope research describe fitness measurement approach implemented report measurements results section summarise lessons learned discuss gap understanding measurements validity perception industrial partners section present conclusions future work validation fitness measurement approach section present fitness measurement approach developed define list theoretical criteria respected valid fitness metrics criteria correspond perception fitness metrics approach validity researchers point view introduction fitness measurement approach authors propose approach evaluate fitness relationship business system supporting fitness relationship established components business system models approach proposes fitness measurement according four points view called factors intentional informational functional dynamic approach also identifies ten fitness criteria associated factors defines specific metric example goal satisfaction criterion characterises intentional alignment factor describes business goals specified within organisation supported systems existing organisation metric defined criterion goal count goal count measured calculating ratio business goals explicitly represented corresponding states systems total amount business goals see details ≤ measurement result goal count analysed goal count goals taken account please note approach address cost human social factors rather concentrated evaluating information supposed included table fitness measurement framework fitness criterion fitness metric alignment factor intentional support ratio activity count alignment goal satisfaction goal count actor presence actor count resource presence resource count informa information completeness business object system class mapping count tional informational accuracy business system state mapping count alignment functional activity completeness business object system class mapping count alignment activity accuracy business system state mapping count dynamic system reliability law mapping count alignment dynamic realism path mapping count fitness measurement approach based set concepts important alignment assessment business goal set stable states business objects seek achieve business object bo object represents entities business domain business state bo state state bo time defined values attributes bo business actor defined someone something interacts business system using interface participates business process triggers external events result state transition bo business resource bo neither initiates actions causes state change case product specification example business resource system class system object object represents entities system analogy business object system event associated system state change analogy business activities changing business objects states consider system events changing states system objects system goals describe purposes system say system goal maps business goal states business objects associated business goal represented states corresponding system objects system state system object state state system object class instance time defined values attributes object paths sequences business system states business laws represent legal rules principles adopted business organisations fitness measurement approach addresses problem business alignment organisations strongly relies detailed information organisation processes data models etc case information available one build discussed evaluation hypothesis section define evaluation hypotheses fitness measurement approach hypotheses consist set theoretical criteria validity fitness measurements based research experience related literature analysis retain following validity criteria measurements based verifiable observations models specifications interviews etc measurements results non ambiguous – one interpretation measurements effective correspond problem complexity help practitioners decide course improvement actions measurements results accurate precisely localise misalignment organisation many works metrics based approaches validity confirm validity criteria verifiable observations research works argue metric valid measures purports measure need clarify attribute measuring proceed measure precision underlined data measured thus important valid measurement non ambiguity authors discuss validity metric structure order valid metric requires validity attributes measures unit uses instrument underlies measurement protocol defines argue non ambiguity elements guarantees metric validity effectiveness fenton discusses metric validity view based identification usefulness metric stakeholder purpose authors argue metrics constitute crucial source information decision making indeed metrics localise malfunctions hold resources needed give accurate information managers order help make decisions accuracy bodhuin emphasises purpose metrics check alignment detect misalignment business processes information system supporting defines two metrics technological coverage indicating percentage activities supported system activity supported system second metric technological adequacy brings precise information measures adequately support set system components activity practical test evaluation hypotheses order widely accepted research method approach prove usefulness practice previous section defined theoretical criteria validity fitness measurement approach following test criteria remain valid practice argue proving empirical validity research approach guarantees entire validity practical validity addresses ability research approach meet practitioners needs tells practitioners benefit approach added value validate fitness measurement approach answer question results approach considered users satisfactory apply fitness measurement approach real project appreciation results practitioners informs us practical validity approach case study alignment validation abc supermarket abc supermarket mass retail company one leaders french market abc supermarket groups approximately independent operators thousands outlets france internationally company specialises different sectors retail business well known food non food retail markets initial specialisation abc supermarket food household products seven years ago abc supermarket integrated new product category – textile – portfolio defined new trade name abc fashion provide support purchase upstream retail downstream activities textile products company decided use existing information system – one used support business activities food products initially reuse existing abc fashion seemed justified retail business defines similar processes food textile products master data food textile products also lot common products characterised type price etc however years textile trade name turnover decreases survival trade name threatened existing showed limits managing textile business solution numerous manual fixes workarounds developed years result existing got overloaded patches became efficient company decided make evolve information systems challenge becomes trade name survival main objective evolution precisely define existing fails supporting textile business requirements improvement made correct misalignment answer questions apply fitness measurement approach fitness measurements results set values process acquiring values leads deep understanding gap existing textile business requirements scope fitness approach application upstream activities abc fashion include marketing products referencing providers referencing outlets billing etc activities supported existing upstream information system uis company downstream activities abc fashion address product management outlet stores e g stock replenishment activities supported existing downstream information system dis cited uis dis affected evolution requirements among listed product referencing one critical tasks maintains link upstream downstream information systems outlets use dis order products available uis see fig product referenced uis available ordering support product referencing represents main concern abc fashion management mismanaging product referencing activity affects whole business process stock management upstream outlet level ordering process marketing campaigns reason concentrate study textile product referencing activity existing food one supports fig product referencing application link uis dis constraints research work researcher one researcher working partial time months abc supermarket applied fitness measurement approach experimental objects availability less business system models available organisation indeed ten metrics two applied without building corresponding input models unavailable artefacts built otherwise fitness measurements applied implementation fitness measurement approach cited fitness measurement approach relies business models models exist organisation built based available information sources result able implement nine fitness metrics ten data collection construct missing business models collected data describe business view abc fashion textile product referencing interviewed following business actors head department textile trade name order understand textile business requirements ii responsible product referencing department order apprehend product referencing problem iii users order understand functioning used available business process landscape process specifications also analysed construct required artefacts collected data describe support textile product referencing provided existing information systems uis dis order apprehend detail system architecture functioning interviews conducted following actors referencing system administrator ii referencing system designers iii referencing system developers following documentations also analysed user manuals product referencing system ii short descriptions application functionalities available intranet iii software applications data dictionaries containing information product master data iv screenshots also studied product referencing system testing toy examples conducting interviews mentioned specialists examination existing documentation two problems highlighted compared food products assortment either permanent always shelf non permanent subject commercial operation textile products subdivided three planning categories permanent products collection products e g summer winter short cycle products e g fashionable articles brand promotions etc ii apart master data operations textile products also require textile specific data e g colour range size range business system artefacts reflecting two problems built order localise precisely problem sources identify accordingly potential solutions b consolidation collected data interesting highlighting existing adapted support business requirements extent fits conduct study use map formalism build business goal models describing • respectively referencing process seen abc fashion supported referencing application uml modelling build business system class diagrams • specifying respectively data model product referencing seen required abc fashion implementation existing information system artefacts business goal models business data models highlight enough problems cited lack space models presented paper problem detected map modelling map process model non deterministic ordering intentions strategies defined intentions goals achieve strategies represent ways achieve goals map diagram labelled directed graph intentions nodes strategies edges intentions section map triplet source intention target intention j ij j ij strategy connecting source target intentions section turn refined map comparison business maps shows business goals different level abstraction correspond goal business strategies also supported product referencing application fact shown fig business goal plan commercial operations supported product referencing application shown dashed grey arrows fig b system implements one strategy achieving goal reference products scratch entering data product sheet directly means system distinguish collection permanent short cycle products thus processes product types way explains partial satisfaction business goal reference products ssttaarrtt ssttaarrtt bbyy rreeaalliizziinngg tthhee ppllaann bbyy rreeaalliizziinngg tthhee bbyy rreeaalliizziinngg tthhee ppllaann bbyy rreeaalliizziinngg ooff ccoommmmeerrcciiaall aacc tt iioonnss bb uu ddggeett ooff ppuurrcchhaassee ooff ccoommmmeerrcciiaall aacc tt iioonnss hh ee bb uu dd gg ee tt ooff b e n te r g cc cc cc p p uu rr cc hh aa ss ee da fr cc product sheet cc ppllaann ccoommmmeerrcciiaall ppllaann ccoommmmeerrcciiaall ooppeerraattiioonnss ooppeerraattiioonnss bbyy mmaakkiinngg sshhoorrtt bbyy bbuuiillddiinngg bbyy sseelleeccttiinngg bbyy mmaakkiinngg sshhoorrtt bbyy bbuuiillddiinngg bbyy sseelleeccttiinngg ccyyccllee ooffffeerr ccoo llll eeccttiioonnss ppee rrmm aanneenntt pprroodduuccttss cciirrccuuiitt ooffffeerr ccooll llee ccttiioonnss pp ee rrmmaanneenntt pprroodduuccttss cc33 cc33 cc cc cc cc bbyy cchhaannggiinngg cc b b yy pp rrii ccee r r ee ff ee rree nn cc ee cc66 rreeffeerreennccee pprroodduuccttss b b yy pp rrii ccee rreeffeerreennccee pprroodduuccttss cc77 cc77 aa nn aa gg ee mm ee nntt ff aa nn ee xx ii ssttiinngg aa nn aa gg eemm eenntt pprroodduucctt p p aa rr pp rr oodduuccttss p p aa rr pp rr oodduuccttss cc99 cc99 cc88 u upp dd aa tt ee cc88 bbyy bbyy u upp dd aa tt ee ccoommpplleetteenneessss ccoommpplleetteenneessss ssttoopp ssttoopp b f ig business map product referencing process b uis map product referencing application sections c3 c4 c5 refined sub maps sub goals strategies business goals total important part sub goals supported product referencing application lack space sub maps presented paper problem detected uml modeling reference food products business object logistic unit required logistic unit product type specifies container pack box x items given product inside represents minimal amount product type ordered delivered stored warehouse e g box six bottles soda speaking food products products logistic unit identical – e soda bottles need reference product item within logistic unit separately entire logistic unit x items inside referenced level logistic unit represented product file package concept contains package description logistic tariff data conceived food products used textile product applying simplified referencing method textile product following considered textile products much variations within type exist multiple sizes colours making analogy soda bottles logistic unit contain product variation e g box jeans size colour navy practical therefore logistic units textile products contain multiple variations product type box jeans navy black navy black l navy l black textile business requires sizes colors referencing existing system support need several workarounds manual fixes added instance package content file describing content logistic unit added inform points sale quantity products terms sizes colors contained logistic unit indicative information provided referencing system exploited points sale order specifc product specific size color business constrained system limitations causing emergence gaps business requirements gaps explain several problems mainly points sales order one variation product replenish • stock – order least one complete logistic unit leads unsold stock discounting regular company loss result marketing department make forecasting based logistic units • known product demanded brought company maximum profit sold caused loss application fitness measurements constructed data result analysis section present fitness measurements results propose guidelines help abc fashion improve fit business existing note problems detected business models building indeed activity knowledge intentsive allowed us first qualitative aligment evaluation fitness measurements confirm detail qualitative evaluation capturing malfunctions detail terms models concepts allow us detect act add concept absent extend states present mismanaged system improve alignment table fitness measurement results criteria description measures support ratio number activities represented system events number activities goal number business goals represented system satisfaction goals number business goals actor presence number business actors represented system user interfaces number business actors resource number business resources represented system presence classes interfaces number business resources information number business objects represented system completeness classes number business objects information number business states represented system accuracy states number business states activity number business objects given activity represented values different completeness activities system classes number business objects given activity activity number business states given activity represented values different accuracy system states number business states given activities activity system number business laws business state reliability represented system state transitions business states represented transitions study revealed significant differences referencing activity defined food textile products reason referencing textile products using existing information system problematic past misfit business confirmed measurements results shown table support ratio goal satisfaction business activities supported system less business goals satisfied system fact significant part upstream activities related planning commercial operations textile products collection short cycle operations supported product referencing application actor presence product referencing activity involves five actors two actors interact system others marketing buyers head point sale involved planning phase supported system resource presence business resources required product referencing e g specifications product sheet containing information product… created using microsoft excel software integrated referencing system information completeness third information managed system analysis revealed following reasons justify low value information completeness need referencing different textile product categories referencing product category referencing process processes manual semi automatic indeed part planning activity supported system ii specific requirement referencing related textile products taking account colour size one hand concept product absent system indeed present system concept package containing n products product see section hand size colour business concept missing system reason product referenced corresponding size color generated problems cited explain business goals satisfied system information accuracy although third business objects represented system classes business states mapped system states explained fact system objects consistent business objects case product package concepts forced treated manner activity completeness half business transitions implemented system activity accuracy activities even business object bo represented certain system object states latter might represent states bo practice means system counterpart bo processed expected business – accurate explains completeness activity higher accuracy activities accuracy higher completeness fact bos implicitly supported system e object system represents given bo nevertheless system supports behaviour bo example system object package map product bo textile business explained information completeness however substitutes bo certain operations – say package mimics behaviour product system system reliability half business transitions implemented system explained fact activities supported system note fitness metrics organised around four alignment factors inter reliated complement others indeed source mismatch detected goal level intentional alignment explained detail metrics operational levels functional informational alignment observe huge differences gaps detected fitness metrics part covered workaounds manual fixes several treatments done manually several add ons made workarounds detected fitness metrics indeed workarounds correspond managing information differently system business levels whereas presented table metrics based correspondance business system concepts concern beyond scope paper metrics used detect gaps help us localising main differences business system domains propose set corrective actions would improve business alignment indeed shown existing support demonstrates serious lacks flexibility stock replenishment pos supported logistic unit level recommended abc supermarket support textile product referencing product level rather logistic unit level ii colour size management functionality essential textile products advised added existing iii many business activities supported system consequently corresponding actors interact system handled objects required business resources present system advocated organization prioritize business activities revise existing order extend functionalities support critical business activities organisation also verify whether interaction actors product referencing application would beneficial product referencing processes case new user interfaces developed business process may redesigned taking account new actors organisation also consider support identified business resources indeed integration business resources increase interoperability facilitate information exchanges business partners lessons learned section four theoretical criteria validity defined evaluate results presented section criteria according two points view researchers point view practitioners point view first one allows us establish measure values obtained fitness metrics hundred percent accurate effective verifiable non ambiguous point view allows us evaluate practitioners set criteria relevant measurements validity point view researchers measurements based verifiable observations models required • measurements application built validated specialists within organisation measurements results non ambiguous project stakeholders • understood results way measurements effective results compared study • made project team requested ceo textile trade name results confirmed discussions project stakeholders measurements results accurate results helped us localise • misalignments confirmed causes non fits point view fitness measurements valid fulfilled theoretical criteria validity measurements validity point view practitioners fitness measurement approach applied one researcher restricted perimeter project showed section practitioners confirm usefulness approach effectiveness corresponding results nevertheless concerning reusability approach projects following criteria related issues bring measurements based verifiable observations building models • requires much time new skills resources managers aware data weaknesses argue priority company build maintain data measurement results non ambiguous managers aware input • data weakness argue even ambiguous results would satisfied measurements effective concerning effectiveness • measurements managers satisfied confirmed found problems indeed exist localised misalignments nevertheless deprecate fact results indicate severity identified gaps asserted prioritisation gaps severity important decision making measurements results accurate accuracy results • important practitioners interested getting results precision done within short period time otherwise much value managers detailed reports take time done understood simpler results preferred least first step sometimes intuition enough practical standpoint fitness measurements useful models required application available organisation majority organisations priority measurement validity perception industrial partners revealed criteria important ii criteria appeared important consider work overall practitioners aim perfect alignment especially requires much time resources time interested aspects problem important practitioners things –approximately– right fast besides effectiveness efficiency criterion crucial table summarises importance measurement validity criteria viewed theory practice standpoints table measurement validity perceptions theory practice measurement based verifiable observations non ambiguity effectiveness accuracy efficiency discussion obtained results several factors may limit generalisation results applicability fitness measurement approach depends • enterprise models availability organisation models required metrics application exist organisation approach application technical task otherwise required models need built application approach may become complex resource demanding task interpretation validity criteria practitioners depends • organisation data maturity level indeed data maturity level high practitioners adhere validity criteria confirm evaluation hypothesis fitness metrics results depend quality validity built models • big companies knowledge spread among many individuals understanding part business different individuals may vary may even contradictory extensive cross checking thus mandatory conclusions future work study revealed researchers practitioners understanding validity metrics based approaches fact hypotheses refuted case study new validity criteria emerged main requirement practitioners alignment measurements give effective results – even approximately – regard time budget constraints project experience allowed us identify practical guidelines help successful application metrics based approaches precisely enhancement applicability industrial projects definitions guidelines based observation industrial context ii practitioners requirements introduced fitness measurements organise practical guidelines three directions guidance building models maturity organisations sei capability maturity model impact metrics applicability indeed metrics rely models verified data constitute inputs metrics driven approaches availability data depends maturity level organisation many organisations required models often available build necessary assess business alignment building models trivial task project scope well defined allow collection relevant data guidance thus needed assist engineers building business models required performing measurements proposed build process consisting four phases identification input data required fitness measurement approach constructed ii initial data collection iii data consolidation iv validation consolidated data used input data fitness measurement approach customisation approach time market requirement business alignment assessment sort internal audit performed organisation order undertake corrective actions enhance performance evolving environment important react rapidly change takes long time produce communicate results measurements results become meaningless constructing required artefacts applying metrics based approaches takes long time data collection consolidation models validation order address issue observed important find way get interpret present results shorter time reason argue measurement approaches require agility e results delivered intermediate results lead ways measure needed intermediate results discussed deeper analysis undertaken needed measurement cycle thus shortened customisation approach time boxing design cost main constraints project time cost quality resulting product time boxing design cost strategy used practice indicate quantity information delivered constraint limited time x months fixed budget k euros argue approach gain usability composed fine grained method chunks applied according convenience resources involved project e time budget actors future work explore three first directions order improve usefulness approach",
  "2010-BPM": "introduction case management adaptive case management emerging topic extensively discussed last months bpm community legislative system health care notion case known many years case understand set circumstances facts related criminal act patient condition requires decision making treatment respect norms regulations whereas norms well defined case related conditions vary widely evolve time preventing agent responsible case treatment applying standard predefined template model similar notion case recognized business process management case management process modeling cmpm rfp released omg september expresses particular demand practitioners case management solutions omg defines case management coordinative goal oriented discipline handle cases opening closure interactively persons involved subject case case manager case team systematic improvement process based user experience one main objectives adaptive case management approaches objective achieved following social production principle defined social software social production creation artifacts combining input independent contributors without predetermining way case management example knowledge intensive process fully determined design time mechanisms process evolution actors contributing evolution specified advance either example manager longer passive process user aggregation analysis mining case stories associated user designer manager customer experience case management process improved therefore mechanism integrate innovative contributions identified planned advance provided order benefit social software principles business process management case management particular possibility communicate negotiate change process definition based aggregated knowledge provided levels process lifecycle starting design thus appropriate formalism business process modeling selected traditional formalisms accepted industry bpmn epc represents real challenge almost systematically imperative activity driven formalisms encourage early specification explicit order activities process executed hand formalisms often implicit specifying data circulating throughout process therefore presenting powerful techniques modeling control prescriptive business processes formalisms fail specifying knowledge intensive processes case management processes particular mean address adaptive case management brand new formalism needed argue research methodologies techniques developed past decade successfully tuned applied case management modeling paper discuss use declarative specifications variability modeling fol based formal semantics modeling descriptive processes particular case management processes assemble theoretical concepts form modeling approach call deco – declarative configurable process specifications deco process specifications extend bpmn notation de facto standard process modeling providing mechanism descriptive process modeling formal analysis step wise evolution reminder paper organized follows section provide business process models taxonomy position case management taxonomy discuss existing business process modeling formalisms section consider mortgage approval process attempt model process bpmn bizagi www bizagi com based encountered challenges formulate issues addressed case management process modeling technique section introduce deco process specification illustrate aforementioned issues handled deco section presents conclusions business process case management process model taxonomy business processes models roughly divided two categories prescriptive descriptive whereas prescriptive process models specify things must done descriptive process model aims recording providing trace happens business process practice prescriptive models used specify processes predictable sequences simple tasks well defined coordination rules e g repetitive highly automated production processes process fully specified design time prescriptive modeling style though inappropriate knowledge intensive processes based actor collaboration information exchange processes characterized weak predictability task sequences partially defined coordination rules sketched design time descriptive models fig shows examples processes specified using one another modeling styles global economy growing interest organizations explore new markets observed however even simple business process adapted new execution context depending among aspects cultural legal considerations thus distinguish another two categories business processes models context specific configurable highly specialized processes defined given execution environment e g research experiment chemistry physics captured context specific model processes hardly reusable new environment context new process corresponding model toes defined today organizations interested consolidate processes keeping customizable order reflect context specific parameters processes requiring customization role task assignment task ordering rule selection upon deployment specified using configurable process models case management glossary rfp cmpm defines case situation set circumstances initiative requires set actions achieve acceptable outcome objective … case management process addressed knowledge driven process activities occur predefined order addition case management processes supposed anticipate change business context deployment also react consistent organized manner emerging case related knowledge run time thus claim case management processes shell specified using descriptive configurable models top right quadrant diagram fig specification configured negotiation deployment evitpircsed specification oriental run time criminal fixed marketplace investigation design time medical treatment supposed specification international evolve commercial evitpircserp automated customized transaction manufacturing deployment research experiment internet sales physics context specific configurable fig business process taxonomy case management considered descriptive configurable process modeling formalisms literature provides various process modeling formalisms classify four categories activity oriented product oriented decision oriented conversation oriented models business process modeling formalisms defined unified modeling language event driven process chain epc business process modeling notation bpmn gain wide recognition among practitioners today formalisms based activity oriented product oriented paradigm business process modeling recent type process models based decision oriented paradigm according successive transformations product looked upon consequences decisions conversation models based speech act theory principle sentence expressed someone represents intention commitment bpmn beta specification published august omg supports increasing demand modeling collaborations communication human actors involvement though incorporates elements decision oriented conversational paradigms possibility customize business process taking account environment business process instantiated part general problem flexibility problem identified general context wfms respectively knoll jarvenpaa introduce term flexibility form alignment organizations systems turbulent environments authors recognize three types flexibility context flexibility functionality use modification heinl et al illustrate necessity flexibility workflow management applications identify two classes flexibilities selection adaption another steam research e g favors refer declarative business process modeling representation business process trajectory state space introduced authors attempt declaratively describe dynamics business process defining notion valid state planning rules make state valid van der aalst presents case handling paradigm cope business process flexibility contrast workflow management case handling aims describe done achieve business goal done example mortgage approval process mortgage approval process typical example case management process section provide generic mortgage approval process description defined different financial institutions usa information provided results study multiple information sources e g http www homebuyinginstitute com http www mortgage resource center com http homebuyereducation bankofamerica com http www homeloancenter com etc represents compilation guidelines recommendations descriptions mortgage approval process provided different loan consulting firms financial advisors banks available web process description mortgage loan buying house terms length mortgages negotiable adapted applicant situation mortgage approval process divided following steps pre qualification formal application document review pre approval property appraisal final approval closing goal pre qualification step determine potential mortgage amount applicant eligible purpose formal application provide lender documents characterizing details current financial situation applicant well employment credit history document review follows formal application may include pre approval step pre approval letter issued result step indicates applicant pre approved lender specific loan amount property selected applicant mortgage lender initiates property appraisal appraisal step defines amount mortgage corresponding payment lender makes approve approve approve conditions final decisions based document review appraisal results loan approved commitment letter issued applicant closing date set closing also called settlement final step mortgage closing mortgage lenders need purchase house hold title applicant makes payments specification mortgage case management process using bpmn considering complexity complete process paper focus formal application process step text describes step details mortgage approval formal application applicant request application package e mail post alternatively forms accessed web mortgage application submitted electronically personal meeting mortgage lender exact set documents may vary depending financial institution particular situation applicant documents may include social security card record past two years residence address employer name address w tax forms federal income tax returns recent pay stubs etc application lender provides applicant good faith estimate gfe costs loan closing applicant asked make final decision type mortgage loan also interest rate loan locked phase lenders give applicant access website applicant check approval status package usually application fee appraisal fee paid applicant mortgage application submission main purpose description illustrate diversity activities actors information involved stress unpredictable nature variability process – characteristics make modeling challenging task figure presents model mortgage approval process specified using bizagi modeling tool tnacilppa need specify impact need specify data different tasks multiple flow possibilities task flow need specify role hierarchy alternatives possible replacements synonyms rednel egagtrom l n r ti f c li p p need specify inputs outputs need specify distinguishing obligatory optional data optional obligatory alternatives possible replacements alternative tasks synonyms identical artifacts called differently fig bmpn specification formal application mortgage approval process discussion modeling mortgage approval process bpmn encountered following challenges optional tasks modeling optional tasks represents one major challenges example send forms task needed applicant already downloaded forms web fills application line task ordering many tasks obligatory process preordered design time based norms policies concrete place institution order may specified deployment e g get access approval status info get application fee however actions e g lock interest rate get appraisal fee ordered run time executed based data availability within traditional bmpn formalism task ordering expressed using gateway mechanism however considering large number ordering options mechanism efficient explicit specification conditions one another ordering applied also challenging bpmn diagram appropriate solution found leave tasks could explicitly ordered design time outside process flow optional alternative data objects synonyms mortgage approval process consumes produces vast amount data artifacts artifacts may obligatory whereas others emerge requested specific situations example mortgage loan applicant asked provide mortgage lender one multiple different tax forms form w wage tax statement typically requested applicants usa obligatory form entitled foreign earned income provided taxpayers earned income sources outside united states order adapt different applicant situations alternative data artifacts also specified example form commonly accepted tax return form whereas form 1040ez simplified version form single joint filers dependents form 1040ez replace form source wikipedia artifacts also called differently one organization country another tax forms irs forms defined usa corresponds another tax forms uk mortgage lender working countries synonyms explicit beneficial explicit modeling data impact decision making task ordering data artifacts impact task ordering decision making run time example purchase contract provided application mortgage lender may want immediately initiate appraisal process used bpmn artifacts specify relations data tasks data required way data used general indicated using annotations however neither one another mechanism formalized bpmn implicit impact data decision making stays process modeling scope within existing formalism role assignment whereas abstract process participants – mortgage lender applicant – easily recognizable concrete role assignment may depend financial institution small banks several roles associated process whereas big agencies application processing decision making likely assigned number different roles different responsibilities roles assigned upon deployment study shows task also performed several roles – postpones role assignment run time section listed several challenges related case management process modeling modeling negotiation communication internal decision making modeling data actor task ranges problems addressed future conclude discussion formulate five requirements descriptive process modeling approach traditional formalisms hardly meet going address sections need specify inputs outputs distinguishing obligatory optional data alternatives possible replacements synonyms identical artifacts called differently need specify role hierarchy alternative roles synonyms need specify optional obligatory alternative task need specify multiple flow possibilities need specify impact data different tasks task flow declarative configurable process modeling notation deco work present process modeling approach based declarative configurable deco process specifications extend bpmn notation widely adopted standard process modeling current implementations theoretical foundations theoretical foundations deco grounded declarative modeling variability modeling refinement theory formal methods paradigms proven research community work largely based authors research reported inspired results presented declarative specifications modeling business processes presented approach based systematic modeling process related data allows us introduce notion state process task associated set pre states states task necessary executed set post states – states resulting task execution respectively consequently process specification represents set activities tasks done predefined execution scenario declarative modeling principles allow one postpone decision making process control flow deployment even execution soon declarative process specification evolves mechanism validate control evolution required work presented evolution declarative nondeterministic process specification design time towards precise imperative process specification deployment represented set refinement steps notion refinement graphical specifications adopted software engineering presented work formal semantics graphical specifications defined based first order logic set theory semantics allows us reduce problem refinement verification validation first order logic formula provides means automated process analysis control using tools automated analysis program specifications defined software engineering technique presented allows one demonstrate different control flow configurations process valid respect high level declarative design specification however deal descriptive processes case management particular process configurability limited control flow literature several major perspectives process models specified control flow perspective captures temporal ordering process tasks events decision points data perspective captures lifecycle data objects creation usage modification deletion within process resource perspective describes process carried within organization deals roles resource assignments operational perspective addresses technical aspects process execution specifies elementary process tasks assignment concrete applications application components organizations context perspective describes attributes related process execution context performance perspective addressing process cost effectiveness concept configurable process presented modeling formalism deal process configurability multiple perspectives defined namely authors present configurable integrated epc c iepc modeling notation extends well known event process chain epc notation addresses process configurability along control flow data resource perspectives according approach given configurable process model analysts able define configuration model assigning values variation points based set requirements configuration defined model individualized automatically individualization process considered automated synchronization process model perspectives respond configuration decision guarantees correctness individualized process models construction introduce notion correctness reason individualized configurable models authors define formal semantics c iepc based fol multi perspective configurability inspired approach presented propose address requirements defined previous section using multi perspective configurability follows need specify inputs outputs distinguishing obligatory optional data alternatives possible replacements synonyms identical artifacts called differently requirement addressed providing configurability along data perspective need specify role hierarchy alternatives possible replacements synonyms requirement addressed providing configurability along resource perspective need specify optional obligatory alternative tasks requirement addressed providing configurability along operational perspective due space limitations consider details deco implementation data configurability figure illustrates data object hierarchy models tax forms tax return forms required formal mortgage application usa vast amount data artifacts consumed produced process represents challenge modeling hierarchy model data objects describes generalization specialization relations data objects • alternatives – data objects replace data object originally required • task example form 1040ez considered alternative obligatory form rule specifies condition alternative applicable rule described text formalized fol • synonyms – different terms referred data object example usa tax forms tax return forms called internal revenue service irs forms source wikipedia fig data object hierarchy model formal application declarative specification tasks last two requirements need specify multiple flow possibilities need specify impact data different tasks task flow addressed applying declarative modeling principles explained formal semantics permits express action contracts terms pre condition post condition invariants define formal semantics deco specifications based first order logic fol similarly results presented used mapping deco specification alloy specification language validation run time moment process enactment characterized state case x p p p state define case state deco vector n p p p components values data objects related case given n σ moment time state space set possible states case every process task define precondition postcondition postcondition condition case meets task termination precondition post pre specifies condition must hold upon task invocation started state post satisfying guaranteed terminate state satisfying pre σ precondition postcondition modeled predicates state space true false σ → pre true false σ × σ → post addition pre postcondition invariants process tasks specified invariant condition holds task execution inv x x task defines transition case state state pre post states respectively define task deco binary fol formula true false σ × σ → specify task using logical implication precondition postcondition def x x x x x → pre post x given state precondition apre task holds case transited x state postcondition holds post preconditions postconditions invariants explicitly relate tasks data objects within case example specify contract send forms task fig define supplementory predicates ∃ ∧ isreceived datatype applicant receivedmessage content src ∃ ∧ issent datatype applicant sentmessage content dst former predicate evaluates true process exists message received applicant contains data object along lines second predicate evaluates true message content sent applicant define precondition postcondition send forms task pre isreceived formrequest applicant post issent appforms applicant follows invariants specified task task denoted follows ∀ apl applicant isreceived formrequest apl issent appforms apl whenever process receives form request applicant apl execution tasks move process state application forms sent applicant conclusion future work omg rfp demonstrates increasing interest particular needs practitioners methodologies tool support case management process according omg rfp objectives case management methodologies tools accommodate structure knowledge participants current case ii provide information previous similar cases help practitioners learn best practices iii progressively improve case management processes make evolve toward prescribed processes deco defines concepts systematic gathering structuring information data consumed produced roles tasks process namely based configurability modeling along multiple process perspectives specify generalization specialization synonym alternative relations compared traditional business process modeling formalisms deco provides means support prescriptive nature case management process declarative modeling principles allow designer specify set activities could necessary executed process invocation together conditions execution possible pre post inv though extending deco based bpmn graphical notation main objective deco provide yet another set concepts shapes representing reuse much possible notation already known used practitioners years b significant developers support help us get useful feedback bpm practitioners community conceptualizing deco social software software supports interaction human beings thus largely dependent interactions case management process benefit supporting tools based social software principles following three important missions successfully fulfilled social software collection process requirements incorporation process design model ii collection information related process context process model customization deployment iii collection content case subject – related information process run time process model analysis evolution e g implementing process mining",
  "2010-GRN": "innovative enterprise architecture ea approaches developed researchers focused evaluation analysis organizations usually require extensive set measurable input parameters practice organizations often provide required data makes implementation approaches difficult possible work specify build process represents systematic identification gathering consolidation data required target ea approach illustrate build process example present case study implement research approach business fitness measurement context real industrial project mass retail company initially poor quality input data presented serious threat business alignment assessment using fitness measurements input parameters built applicability fitness measurements significantly improved alignment assessment accomplished successfully believe using build process possible increase applicability research approach ea spite initial absence input measurable parameters deliver meaningful results practitioners design science introduction nowadays numerous approaches aiming validation measurement improvement business alignment developed research community bleistein bodhuin kearns ledere campbell avison luftman rychkova simonin wegman wieringa however many approaches difficulties adopted industrial organizations whose needs addressing identify eliminate malfunction car mechanic needs know vehicle technical characteristics car registration book current state accident history car maintenance book condition exploitation information represents important input diagnostics repair along similar lines approaches diagnostics assessment business alignment strongly rely input data models specifications documents describe organization quality input data one main factors affecting applicability ea approaches research approaches ea particularly sensitive input data quality practice problem organizations meet high requirements researchers define input data e g data models business process models documentation etc often data incomplete exist prevents innovative research approaches adopted practitioners fig work encourage organizations improve process documentation order benefit innovative research contrast claim researchers significantly improve applicability approaches article discuss guided implementation allows researcher group researchers build necessary input data based documentation information sources available organization believe using build process possible increase hypothesis applicability research approach spite initial absence input measurable parameters deliver meaningful results practitioners approach measure fitness relationship business organizations presented etien rolland example ea approach developed academia approach addresses problem business alignment defines metrics quantify fit business organization systems support metrics application process called fitness measurement allows organizations identify precisely aspects business business goals activities supported ill supported existing ii specify strategies improve business alignment work present case study validates hypothesis practical method example subject study fitness measurement approach proposed etien rolland apply approach project business alignment assessment mass retailer company abc supermarket agreement company real name disclosed increase applicability define process builds required measurable parameters based available documentation information sources experience shows small companies people case evaluation processes applications typically difficulties providing information required business alignment assessment among reasons highlight following process information system landscapes companies complex kept control roles data process owners well defined serve trustworthy information sources always case big organizations hundreds applications processes place organizations problem inconsistent missing data becomes serious threat business alignment assessment thus bigger organization worse applicability fitness measurement approach expected figure traditional implementation research approach business alignment assessment abc supermarket mass retail company one leaders french market today abc supermarket counts approximately independent operators thousands outlets france internationally company encounters employees including specialists working runs business processes supported applications thus study abc supermarket represents critical case claim hypothesis valid abc supermarket case likely valid many cases work define build process consists three main phases identification parameters build ii data collection iii data consolidation phases followed validation also specify techniques used phase implement build process fitness measurement approach illustrate abc supermarket case results study confirm hypothesis show build process increases applicability fitness measurement approach solely based data available abc supermarket one metric ten specified etien rolland applied implementing build process retrieve input data eight metrics article following structure section present state art section define generic build process customized arbitrary research approach ea section introduce fitness measurement approach identify input parameters required approach second part section introduce case study application fitness measurement approach abc supermarket gap required input parameters available data prevents complete application fitness metrics section show build process used fill gap improve applicability section present summary abc supermarket fitness measurement project section discuss lessons learned present conclusions state art validation assessment business‐it alignment subject continuous interest research industrial communities practitioners validation business‐it alignment important part organization government ea researchers approaches accurate alignment measurement pave way new theories field e chan reich approaches strongly rely quality input data represents domain­specific knowledge organization collection domain‐specific knowledge trivial task depends organization problem scope complexity ea approach section discuss several approaches validation assessment business‐it alignment investigate awareness approaches domain‐specific knowledge collection ii instruments domain‐specific knowledge collection used approaches many approaches business‐it alignment validation assessment addressed literature section discuss three different groups questionnaire‐based approaches framework‐based approaches approaches based metrics questionnaire­based approaches approaches defined renner kefi beeson cited etien specify questionnaires instruments domain‐specific knowledge collection implemented follows specialist charge business‐it alignment validation conducts interviews business actors organization issues addressed questionnaires include successes failures communication business actors successes failures understanding domain business actors successes failures understanding business domain actors etc kefi example addresses problem alignment asking interviewees answer following question scale – rate alignment organization goal interviews reveal mutual understanding business strategies organization actors approaches discussed result single indicator characterizing alignment approaches listed provide detailed analysis alignment organizations bergeron authors define approach assess alignment structure strategy specify questionnaire addresses four issues environment perception strategic use planning control acquisition implementation result four alignment indicators produced kearns ledere kearns ledere propose another questionnaire‐based approach evaluates different aspects business‐it alignment organizations aspects related alignment organization business plan plan aspects related alignment plan business plan common characteristic questionnaire‐based approaches solely based analysis personal experience understanding situation actors organization make alignment assessment results objective various techniques used one proposed burn publication author defines organizational culture audit oca oca considered instrument alignment assessment addresses following issues external strategy vs strategy internal infrastructure models business etc author claims business‐it alignment ongoing process ii order provide accurate objective assessment results oca applied regularly e g per year different managers framework­based approaches capability maturity model integration cmmi framework assessment processes organizations http www sei cmu edu cmmi originates cmm – capability maturity model software development processes mature processes characterized transparent reliable flexible agile e able efficiently support change organization strategy cmmi appraises current maturity level processes organization offers guidelines improve processes bring next maturity level scampi ‐ standard cmmi appraisal method process improvement – appraisal process defined cmmi http www sei cmu edu cmmi scampi specifies three levels formality appraisals class b c scampi appraisal processes conducted sei‐authorized lead appraisers based well‐defined process specification scampi upgrade team scampi considered instrument domain‐specific knowledge collection cmmi luftman strategic alignment maturity assessment framework defined framework inspired cmm used assessing alignment business strategies framework defines five maturity levels processes based industrial best practices initial ad hoc committed established focused improved managed optimized similar cmmi maturity level framework offers guidelines improve processes bring next maturity level appraisal process framework specified luftman brier process plays similar role scampi cmmi – defines consolidates domain‐specific knowledge helps prepare organization actual assessment approaches based metrics approaches address multiple aspects alignment organizations using various metrics approach presented bodhuin defines two metrics alignment assessment technical coverage stands percentage process activities adequately supported software system technical adequacy refers quality support simonin proposes approach based model driven engineering mde measure static dynamic alignment knowledge instrument technique domain‐specific knowledge collection defined approaches except questionnaire‐based approaches approaches alignment validation assessment often rely domain‐specific knowledge presented concrete form – form models data models business process models etc specifications requirements specifications specifications etc models specifications represent objective accurate sources information however development models expensive time‐consuming task many organizations willing reich benbasat study alignment organizations based written business plans plans self‐reports etc reich benbasat authors report low applicability approach two four alignment metrics applicable among reasons identify following business plans often exist self‐ reports accurate beats reports measurement business‐it alignment banking industry beats author states alignment hindered lack domain‐specific knowledge among banking managers according reich benbasat baets corporate strategy often unknown unclear campbell argues formal business strategies often ambiguous business managers understand experience shows research approaches ea particularly sensitive lack mature data process documentation industrial organizations approaches often require complete set specifications business hand based assumption specifications available research approaches obviously serious applicability problems soon exposed realistic environments e chan reich argues alignment research mechanistic fails capture real life ciborra claims scientific literature addressing alignment theoretical recommends mintzberg‐like approach researchers go field get insights practitioners mintzberg build­up process specification traditional process implementation research approach ea illustrated fig includes application approach researcher using input data provided organization interpretation validation results organization reality part data required approach available organization rest input parameters either incomplete missing makes implementation approach difficult possible practice shows majority researchers addressing domain specific knowledge collection works argue explicit specification activity given research approach significantly improve applicability approach section define build process process constructing measurable parameters required given research approach research approach ea requires measurable parameters provided input potentially benefit build process build­up process build process takes roots design science design science focuses problems characterized unstable requirements constraints based upon ill defined environmental contexts … critical dependence upon human cognitive social abilities etc hevner et al work investigate problem exhibits similar characteristics propose build process solution design science addresses research building evaluation artifacts designed meet identified business need march smith hevner et al take reference scampi scampi upgrade team follow principles agile development methodology http agilemethodology org order define building evaluation activities build process artifacts case understand models represent problem domain organization scampi standard cmmi appraisal method process improvement defines appraisal process capability maturity model integration cmmi scampi adopt following phases build process identification parameters build data collection data consolidation definition build process represents systematic identification gathering interpretation consolidation data required target ea approach agile development methodology attempts provide many opportunities assess direction project throughout development lifecycle http agilemethodology org following agile methodology principles extensive communication researcher domain experts organization – core build therefore phase specified performed researcher complemented specific validation inspection phase main role played domain experts inspection required data validation collected data interpretation validation consolidated built data figure illustrates phases build process phase discussed detail figure guided implementation research approach business alignment assessment identification parameters build data collection data consolidation corresponding validation phases introduced requirements effective design science research formulated form seven guidelines design artifact problem relevance design evaluation research contributions research rigor design search process communication research hevner et al vlidation build process guidelines outside scope paper addressed future work main phases build­up process phase identification parameters build­up goal phase identify input data built phase researcher study objectives constraints target approach order derive − required input parameters identify available data relevant problem scope − evaluate available data required input parameters − phase inspection required parameters phase teams researcher domain experts organization goal phase familiarize domain experts target approach terminology − familiarize researcher vocabulary used accepted − organization express approach requirements domain‐specific terms − identify parameters built ignored − focus last point detail identify parameters ignored team inspect required parameter x answering following question parameter x validated approve disapprove x organization means validate x – ignored application scenario target approach modified e g reduced accordingly result phases ‐1a researcher able identify input parameters available organization built ignored phase data collection phase based observations gathering trustworthy evidence organization as‐is phase researcher identify relevant data sources documents knowledgeable individuals − use systematically techniques data collection − document sources mean available documentation e business documentation technical documentation intranet resources related problem area knowledgeable individuals people organization project leaders managers end users whose knowledge understanding problem context contribute alignment assessment data collection techniques may include limited interviews questionnaires surveys reverse engineering documentation studying role playing workshops mind mapping etc phase validation collected data guarantee result build‐up process accurate collected data validated researcher domain experts organization collected data valid accurate corroborated consistent validation process specified scampi provides definitions accuracy corroboration adopt definitions build‐up process collected data accurate explicitly associated one several required input parameters target approach ii derived trustworthy evidence seen heard data collection sessions iii clearly worded expressed terms used organizational unit collected data corroborated derived least two different sources individuals document sources ii collected least two different data gathering sessions interviews meetings iii cross‐checked observation results collected data must consistent validated observations collected data researcher assure accuracy corroboration consistency collected data setting collection process using data collection techniques according indications phase data consolidation phase aims processing restructuring formalizing collected data result phase researcher develops set models specifications directly used target approach alignment assessment data consolidation techniques may include limited model engineering e business process modeling goal modeling data modeling modeling techniques requirements engineering requirements identification formalization process mining data mining extreme programming rapid prototyping better understanding processes applications required examples consolidated data business process models uml diagrams business rules requirements models code etc phase interpretation validation consolidated built data domain experts play main role phase goal phase familiarize domain experts models specifications obtained − consolidation confirm correctness unambiguity consolidation results − validate consolidation results collected data prove − contradictory conclusions made guarantee correctness built parameters consolidated data must consistent valid observations aggregate collected consolidated artifacts constitute set truths organization case study measuring fitness relationship abc­supermarket fitness measurement approach etien rolland authors specify ten criteria corresponding metrics evaluate fitness relationship business system supporting authors use wand weber ww ontology wand weber represent components system level soffer wand sw ontology soffer wand represent business concepts two ontologies adaptations bunge ontology cited etien rolland largely recognized theoretical foundations fitness relationship expressed terms relations ww sw ontologies table shows list fitness criteria corresponding metrics way measure example fitness criterion called goal satisfaction describes strategic business goals specified within organization supported systems existing organization metric defined criterion goal count goal count measured calculating ratio business goals explicitly represented corresponding states systems total amount business goals measured value goal count ≤ analyzed goal count goals taken account definitions business goal soffer wand set stable states business objects seek achieve business object object represents entities business domain business state business object state state business object time defined values attributes business object business actor defined someone something interacts business system using interface participates business process triggers external events result state transition business object business resource soffer wand considered business object passive – e neither initiates actions causes state change case product specification example business resource system class system object object represents entities system analogy business object system objects often identified classes uml class diagram system reason terms class object used system event soffer wand associated system state change analogy business activities changing business objects states consider system events changing states system objects classes system event e described triple state g initial state system resulting state system g e state transition caused event e system goals describe purposes system etien say system goal maps business goal states business objects associated business goal represented states corresponding system objects classes system system state system object state state system object class instance time defined values attributes object paths sequences business system states business laws represent legal rules principles adopted business organizations business processes organization implemented according laws therefore respect business laws paths states considered legal others – illegal table fitness measurement framework etien rolland fitness criteria fitness metrics measurement details number activities represented system support ratio activity count events number activities goal number business goals represented system goal count satisfaction goals number business goals number business actors represented system actor presence actor count user interfaces number business actors resource number business resources represented resource count presence system classes number business resources business number business objects represented system information object system class classes number business objects completeness mapping count informational business system number business states represented system accuracy state mapping count states number business states business information completeness one activity object system class given activity completeness mapping count business system information accuracy one given activity state activity accuracy mapping count number business laws business state system law mapping count represented system state transitions reliability business states represented transitions corresponding system states number business laws number paths sequence business dynamic states connecting initial final state represented path mapping count realism corresponding sequence system states number possible paths business states case product referencing abc­supermarket abc supermarket mass retail company one leaders french market counts approximately independent operators thousands outlets company specialises different sectors retail business well known food non food retail markets initial specialization abc supermarket food household products seven years ago abc supermarket integrated new product category – textile – portfolio defined new trade name abc fashion provide support purchase upstream retail downstream activities textile products company decided use already existing information system supports food products upstream activities abc fashion include marketing product referencing provider referencing outlet billing etc activities supported existing upstream information system uis company downstream activities abc fashion address product management outlet stores e g stock replenishment activities supported existing downstream information system dis among tasks listed critical one product referencing task performed product referencing application task maintains link upstream downstream information systems outlets using dis order products available uis product referenced uis available ordering initially reuse existing product referencing application abc fashion seemed justified retail business defines similar processes master data food textile products master data also lot common food textile products characterized type price etc however differences still addressed focus two planning perspective food products divided two categories permanent always shelf non permanent textile products three planning categories specified permanent products collection products e g summer winter short cycle products e g fashionable articles brand promotions etc product category requires referencing process ii food products referenced logistic units logistic unit product p specifies container pack box contains x identical items x kilograms p e g 10kg box tomatoes also represents minimum amount p ordered delivered stored warehouse items box need reference product item separately textile products hold logistic unit may multiple product variations e g jeans different sizes colors thus item textile products referenced separately based size color figure illustrates difference food textile logistic unit contents figure logistic unit food products left application textile product right neither additional planning categories specific data attributes textile products supported existing uis dis solution numerous manual fixes workarounds developed several years result existing information system got overloaded patches became efficient company decided make revision information systems uis dis main objective revision understand whether existing information system considered whole sustain textile product category general product referencing particular – improvement made answer questions apply fitness measurement approach application build­up process case study case study using fitness measurement approach evaluate well existing product referencing application abc supermarket handles following issues referencing three textile product categories permanent collection short cycle ‐ referencing textile products taking account information product size ‐ color identification parameters build­up table illustrates situation encountered researcher abc supermarket beginning project column presents parameters required fitness metrics implementation derived table part lists parameters related business specify viewpoint abc fashion product referencing activities part b lists related parameters characterize existing information system support product referencing column indicates availability parameters organization available parameters source information also specified table input parameters required fitness measurement approach availability beginning project required measurable parameters recognized available organization n business artifacts related product referencing list business activities business process models list business goals n list business actors n list business resources business process model list business objects n list business states n list business state transitions n list business laws ignored b artifacts related product referencing list system events user manual product referencing application list system goals n list system user interfaces system classes n representing actors list system classes representing resources n list system classes representing business n objects list system states n list transitions system states n list allowed system state sequences paths ignored fitness measurement approach requires input parameters researcher group domain experts inspected parameters received following results parameters available abc supermarket allows researcher apply one fitness metric ten presented table support ratio metric improve applicability fitness metrics implement build process construct many required parameters possible parameters identified candidates build process due lack related data sources parameters namely list business laws list allowed system state sequences excluded consideration therefore parameters built challenges main challenge met phase related identification problem scope problem well formulated even help domain experts difficult identify relevant exclude irrelevant data contribute alignment assessment proceed build process follows data collection collect three parameters available organization list business activities table list business resources list system events b gather business artifacts parameters b table studying document data sources conducting interviews business actors organization validate collected data conducting interviews domain specialists organization data consolidation consolidate collected data e g developing necessary models specifications build missing parameters validate built parameters conducting interviews domain specialists organization illustrate collection consolidation phases several examples complete summary build process implementation presented table data collection collecting business artifacts build­up process list business goals sources business process models ‐ business actors head marketing department abc fashion head referencing ‐ department users techniques studied process specifications identifying keywords based keywords formulated business goals conducted interviews business actors order complete process specifications adding missing activities ii develop non existing business process specifications ii validate definitions business goals result business goals obtained collected data examples create permanent products create collection products plan commercial operations manage product prices etc list business objects sources business process models ‐ business actors head referencing department users ‐ techniques initial information collected business process documentation complete study conducted interviews business actors result business objects collected collected data examples commercial operation collection product short cycle product permanent product logistic unit etc list business objects states business states sources business process models ‐ business actors head referencing department users ‐ techniques initial information collected business processes documentation validated derived list states conducting interviews head referencing department users result business object states collected collected data examples states collection product referenced selected selection validated selection rejected price updated reference changed renewed new season discounted collecting artifacts build­up process list system goals b sources application documentation short description application functionality available intranet techniques special technique result one system goal relevant study reference products goal list system objects classes representing business objects b sources application documentation data dictionaries screen shots user manuals ‐ actors application administrator application designers developers ‐ techniques testing analysis available documentation complete collection validate initial findings also conducted interviews actors result system objects identified collected data examples subsidiary management category purchase code season product file package content file etc list system object states system states b sources user manual product referencing application ‐ actors application administrator ‐ techniques testing analysis available documentation validated derived list states conducting interviews referencing application administrator result system states collected collected data examples states logistic unit object created extended rejected deleted duplicated updated waiting technical validation waiting effective validation challenges data collection faced following problems identification data sources documentation knowledgeable individuals extremely difficult data process owner roles explicitly defined organization information collected various data sources specialists involved data gathering process often provided contradictory information available documentation often outdated incomplete ii challenging validate collected data due absence single truth difficult cross check data show corroborated data consolidation phase analyze consolidate row data collected previous phase create missing measurable parameters table case study use two consolidation techniques intentional modelling called map rolland uml modelling map process model specifies non deterministic ordering intentions strategies intentions mean goals achieved strategies represent ways achieve goals rolland map diagram represents labeled directed graph intentions nodes strategies edges intentions two special intentions called start stop indicate respectively beginning end navigation map section map triplet j ij source intention target intention strategy connecting j ij source target intentions section refined map project produce two types map diagrams product referencing process business map describing product referencing seen abc fashion management figure b system map describing product referencing process implemented existing information systems abc supermarket figure b developed uml business class diagram specifies data model product referencing defined abc fashion using reverse engineering developed uml class diagram specifies data model product referencing application business artifacts consolidation list business goals techniques consolidation process using business map fig permitted us identify new business goals captured data collection add ‐ list identify relations subgoal supergoal goals place goals different ‐ levels abstraction within map diagrams identify redundant goals remove list ‐ figure business map product referencing map contains two goals plan commercial operations reference products goals connected arrows representing business strategies achieve reference products business goal three strategies identified making short cycle offer c3 building collections c4 selecting permanent products c5 b business map collection products referencing map presents refinement section c4 product referencing plan commercial operations reference products building collections similar way sections c3 c5 refined result business goals different hierarchical levels defined examples plan commercial operations reference products collection product make collection plan select collection products create collection products etc figure fragment uml business class diagram product referencing abc fashion product represented corresponding class specializations collection product permanent product short cycle product product associated corresponding specialization product management product exist several sizes colors reflected color size class different products aggregated logistic units represented diagram class logistic unit list business objects techniques uml class diagram business object represented classes illustrated figure diagram describes abc fashion business terms required data uml modeling allowed us identify relations business objects also new objects identified result new business objects consolidated artifacts consolidation list system goals b techniques map result system goals hierarchical levels reference products create products fig figure map product referencing application map contains one goal – reference products goal achieved entering data product sheet product sheet file product information b map product creation map presents refinement section c1 product referencing map create products sub goal reference products goal two strategies product creation identified arc labelled xor specifies strategies exclusive e either one another used read map fig b follows order reference products products must created either attaching product commercial operation management attaching product permanent product management list system objects classes uml diagram b table techniques identify system objects product referencing application develop uml class diagram based available application documentation data dictionaries class diagram specifies product data defined abc supermarket fragment diagram shown figure left side product file figure middle – another system object generated product database used upstream information system uis contains administrative logistic pricing information product package also identified two system add ons developed specifically support referencing textile products abc fashion package content file associated product file describes content • package quantity product items per size color short cycle envelope file defines list products referenced short cycle • products used replenishment agents preparing outlets short cycle orders result system objects identified total figure overview product referencing application data model fragment challenges order familiarize domain specialists produced models set several rounds meetings workshops required lot time validate built parameters conducted several rounds interviews different domain specialists organization examples business goal models maps validated project managers process • administrator uml class diagram presenting business data model validated abc • fashion manager uml class diagram presenting system data model validated head • product referencing department correspondences business system activities validated process • administrator validation revealed built data mutually consistent summary case study implemented three phases build process built input parameters fitness measurement approach table summarizes results build process table build process summary parameter result consolidation technique result collection consolidation list business activities list business goals business map list business actors uml sequence diagram list business resources list business objects uml class diagram business objects list business states uml business object state diagram list business state uml business object state transitions diagram ignored b list system events b list system goals map b list system user uml sequence diagram interfaces system classes referencing application representing actors b list system objects uml class diagram classes referencing application b list system states uml system object state diagram b list transitions uml system object state system states diagram b ignored project summary results project summary project conducted researcher working months part time abc supermarket approximate time distribution build phase metrics application analysis results interviews conducted head marketing department abc fashion head product referencing department uis dis users product referencing application administrator developers actors application administrator application designers developers following documents disposal researcher business process models application documentation short description application functionality available intranet application data dictionaries screen shots user manuals product referencing application following documents produced result build process business maps describing product referencing process seen abc fashion ‐ management system maps describing product referencing process implemented existing product ‐ referencing application uml business class diagram specifies data model product referencing ‐ seen abc fashion uml class diagram specifies data model product referencing application ‐ uml entity relationship diagram specifies actors involvement ‐ product referencing process multiple object state diagrams created identify behavior lifecycles ‐ business system objects project results application fitness metrics table reveals significant misfit product referencing process defined abc fashion information system abc supermarket supports process results summarized table table fitness measurement results criterion measurement result support ratio goal satisfaction actor presence resource presence information completeness information accuracy activity completeness various values different activities range calculated create reference system activity accuracy various values different activities range system reliability dynamic realism build process implemented product reference application abc supermarket permitted us apply fitness metrics assess fitness relationship measurement results presented table pinpoint sources misfit two problematic areas referencing three textile product categories permanent collection short cycle ‐ referencing textile products taking account information product size color ‐ based results detailed guidelines alignment improvement formulated work focused inputs fitness measurement approach way deliver inputs measurement leave detailed discussion results table present outputs fitness measurement approach future work domain specialists abc supermarket verified fitness measurement results another study conducted internal analysts abc supermarket completely confirmed results obtained using fitness measurement approach demonstrates build process resulted meaningful correct input data conclusion lessons learned observed many research approaches ea difficulties adopted industrial organizations one reasons high expectations input data availability completeness organizations meet article discussed researchers act real world environments order increase applicability approaches make hypothesis using build process possible increase applicability research approach despite initial absence input measurable parameters deliver meaningful results practitioners build process introduced article considered instrument domain specific knowledge collection guides researchers creating input parameters necessary target research approach implementation build process takes roots design science hevner et al specified based agile methodology principles http agilemanifesto org represents set iterations activity performed researcher followed validation performed domain specialists organization presented case study fitness measurement approach defined etien rolland implemented part industrial project launched abc supermarket applicability fitness measurements solely based data available abc supermarket one metric ten could applied implementing build process able construct input parameters apply nine fitness metrics total demonstrates significant improvement applicability fitness measurement approach confirms hypothesis correctness built data also verified measurement results based data confirmed another study conducted abc supermarket independently study lessons learned whereas fitness measurement results received positive feedback organization confirmed build process effectiveness project performance evaluated abc supermarket unsatisfactory reason build process taken much time approximately six months practical standpoint serious drawback industrial projects always run conditions time resources limited therefore even finally able assess alignment organization done late could affect strategic decision considering existing identify following problems made build process time consuming definition problem scope identification relevant information sources big companies like abc supermarket collecting problem specific data trivial task researcher reduce problem scope capture relevant data without drowning many irrelevant details thus make build efficient researcher knowledgeable specialist domain team closely collaborate specialists organization ii data validity big companies problem related knowledge often spread among individuals understanding part business different individuals may vary may even contradictory verify collected consolidated data mutually consistent researcher extensive cross checking involves setting environment scheduling interviews organizing workshops discussing results many different specialists organization thus increase build process efficiency project gain visibility organization receive support different team leaders senior managers also identify following questions answered ea researchers developing industry oriented approaches much time need deliver results estimate time estimated time market important characteristic ea project business alignment assessment results example great impact business strategy entire organization thus important give realistic estimation project time based available resources taking account build process strongly affects overall project time consider time market estimation build process main priority future research ii kind intermediate results delivered organizations try protect possible risk related project delays insufficient results changed requirements intermediate reporting decision launch next project stage based results previous stage improves approach agility also high value manager research approaches means specification independent phases identification intermediate results could communicated organization project build process means construction required input parameters one one instead collecting consolidating data one batch unfortunately implementation build process always possible fitness metrics approach shows required input parameters often based models specifications highly related therefore lot efforts usually required beginning build process researcher obliged collect consolidate huge amount data order build first parameter models reused build time subsequent parameter drops moment work found evidence similar problems affecting applicability efficiency innovative ea research addressed literature find subject important plan address problems mentioned future work",
  "2011-RDN": "abstract— business process modeling valuable technique helping organizations specify processes analyze structure improve performance conventional process modeling techniques proven inefficient dealing non repetitive knowledge intensive processes case management processes work use map notation model mortgage approval process defined banking increase navigability practical value map models extend map notation concepts roles relations roles role configuration rules keywords role process model map introduction modern economy companies interested expanding businesses exploring new markets proliferation information communication technologies ict fosters collaboration makes people across globe work together sitting one office working cultures local policies regulations however remain specific country region forcing companies customize processes particular case take account conditions process executed business process modeling valuable technique helping organizations specify processes analyze structure improve performance conventional techniques business process modeling imperative encourage early specification control flow using techniques specification numerous options variations process model related context execution becomes tedious possible similar problem statements identified studied area process engineering ten years process engineering remains key issue information system communities instance show improved development process leads improved productivity software systems industry improves systems quality similarly business process development process traditionally organized sequences activities e g analysis design coding testing rigid control flow later activity sequences replaced values practices however highlights practice engineers faced countless methodical choices choose execute one activity completely partially combine aspects two different activities ignore activity thus decisions made development process reflect situation hand help engineer specify enact unique process adapted situation response problem several methodologies supporting intentions developed intention oriented process modeling focuses process intended achieve e reason behind process execution instead going achieve nevertheless many methodologies employ concept intention goal integral part process model process models focus process performed externalize process intended accomplish – intention map process models contrast intentional level used guide engineers processes dynamic choices executable service sequences time intention realized model suggests executable service several alternative services invoked next step resulting development process adaptive flexible constructed dynamically following situation paper use map methodology model mortgage approval process defined banking providing flexible mechanism flexible customizable process specification original map notation nevertheless remains restrictive allow us specify roles process concept role key concept process modeling roles present nearly process models help modeler structure process model grouping responsibilities answering question designer developer stakeholder decision maker client clerk – examples roles according role definition organizational intention shared collection users privileges obligations set work processes organization role also main concept representation cooperative processes words role basic block organization perspective reflects information organizational structure actors business process intended roles represented used differently process models depending notation original map meta model presented include concept role however roles implicitly participate decision making levels organizational process expressed map example specific role responsible making choice several alternatives map notion role useful explicitly define take navigation decisions roles also present description executable service e g activities may performed specific roles therefore order improve guidance maps important include concept role map metamodel work extend map notation concepts roles relations roles role configuration rules modeling concepts introduced part deco declarative configurable process specification approach mechanism allows us anticipate abundant variations context even within bank different agencies may different stuffing thus different distribution responsibilities employees result different actors may required available execute mortgage approval process demonstrate variations incorporated within map reminder paper following structure section discuss related works identify advantages map applied modeling case management processes also explain limitations existing map notation provide rationale extension section present example mortgage approval process explain map meta model example section extend map notation mechanism explicit role variability modeling section present conclusions discuss future work ii related work process flexibility business process modeling valuable technique helping organizations specify business processes analyze structure improve performance conventional techniques business process modeling imperative encourage early specification control flow however certain forms business processes control flow identified design time one examples case management process case management process characterized follows descriptive nature ii varies largely depending execution context iii involves lot often implicit decision making resulted communication negotiation among human actors iv based available emerging case related knowledge processes early specification control flow challenging also unnecessary even harmful advocated unstructured e without predefined control flow process represented terms flow tasks activities operations model proposed allows represent black box associated set resources uses produces set participating roles key concept kind unstructured processes information knowledge sharing work group e among actors playing roles another paradigm deal non prescriptive non imperative processes provided conversation models latter based speech act theory principle sentence expressed someone represents intention commitment instance action model defines structure represent conversation relationship two participants customer performer type process models addressed based decision oriented paradigm according successive transformations product considered consequences decisions underlying paradigm process model specify linking activities product states also intention behind execution activities ordering run time decision oriented models guide decision making process shapes business thus help reasoning rationale decisions paradigm seems particularly appropriate representing processes requiring flexibility paradigm require modeling process control flow advance allows alternative strategies considered b variability concept configurable process presented modeling formalism deal process configurability multiple perspectives defined namely authors present configurable integrated epc c iepc modeling notation extends well known event process chain epc notation addresses process configurability along control flow data resource perspectives according approach given configurable process model analysts able define configuration model assigning values variation points based set requirements configuration defined model individualized automatically method declarative configurable process specifications deco presented method defines extension bpmn graphical notation identifies three types relations roles synonym alternative specialization c roles actors concept role closely related concept actor modeling methodologies various definitions actors roles found literature common definition states actor specifies role played user system interacts subject actors considered active entities carry actions achieve goals exercising know could composed agents roles positions actor specialized sense opf gives another definition actor producer core abstract method component models someone something performs work units produces work products provides services several attempts made introduce concept role map notation map metamodel extended concept indicator indicators used help decision making navigation process map typology indicators defined based well known project characteristics instance cost duration formality degree indicator typology includes particular indicator represents expert role indicator used define roles linked executable services map however information even helps guidance map give user enough information variability inherent role concept instance used know specific expert role related expert roles project concept role added map meta model order support operationalization map process models namely concept provides explicit relation intentional process perspective captured map process model organizational perspectives described business process enhancing map notation using role concept also allowed us explicitly link navigation guidelines associated map roles executing namely intention selection strategy selection guidelines role taking navigation decisions specified intention achievement guidelines role executing corresponding section map specified third capability added map notation thanks role possibility deal non structured processes suggested previously improving traceability different process perspectives extended map process model presented provides little guidance process users enable process customizations purpose work enhance concept role map provide mechanisms expressing role variability ii role configuration mechanisms improve guidance maps taking account role relationships present project iii applying map case management process modeling example mortgage approval process paper consider example processing mortgage claim defined different financial institutions usa information provided results study multiple information sources e g http www homebuyinginstitute com http www mortgage resourcecenter com http homebuyereducation bankofamerica com http www homeloancenter com etc represents compilation guidelines recommendations descriptions mortgage approval process provided different loan consulting firms financial advisors banks available web mortgage loan buying house usa market exist various mortgages appropriate special situations bad credit loans first time homebuyer etc terms length mortgages negotiable adapted applicant situation mortgage approval process divided following steps pre qualification formal application document review pre approval property appraisal final approval closing goal pre qualification step determine potential mortgage amount applicant eligible purpose formal application provide lender package documents characterizing details current financial situation assets applicant well employment credit history document review follows formal application may include preapproval step pre approval letter issued result pre approval indicates thorough analysis applicant credit income assets completed applicant pre approved lender specific loan amount optional letter however may represent valuable negotiation instrument applicant searching property applicant selects property potential mortgage lender initiates property appraisal result appraisal defines amount mortgage corresponding payment paid applicant lender makes approve approve approve conditions final decisions based document review appraisal results loan approved commitment letter issued applicant closing date set closing also called settlement final step mortgage closing mortgage lenders purchase house hold title applicant makes payments pre qualification pre approval compulsory steps pre approval property appraisal considered parts document review serve baasis final approval illustrate processs modeled using map meta model b map meta model goal modeling effective wayy identifying requirements software systems focusing understanding intentions involvedd stakeholders process model map exammple goal model conceived meet challenge map expression provides synthetic view thhe variability process relatively easy understand wway variations revealed two ways gradual movement different levels top map byy alternative strategies paths available given mapp level intentional map meta model intrroduced engineering domain validated iin several fields requirement engineering method eengineering enterprise knowledge development andd process modeling map corresponding mortgage aappraisal process presented fig figure high level map mortgage approval prrocess refinement map section map map diagram composed nodes edges nodes intentions realize edges strateggies reach intentions edge enters noode associated strategy used achieve target inntention given node since multiple edges enntering node map able represent multiple ways achieve intention fig represents higgh level map mortgage approval process defined thee previous section two intensions specified leveel define mortgage application approve mortgage appliccation former intention realized formal application completed validated steps thhe example latter realized final approval decision made step example final intention stop corresponds process termination realizedd either closing mortgage case positive approval ddecision step rejection mortgage claim otherwise fig shows map model using uml formalism key element map aa section section represents triplet source intention ttarget intention strategy linking source target intentions section corresponds process achhieving target intention specific situation following aa particular strategy fig triplet define mortgage appplication complete revision pre approval approve moortgage application represents section interrpreted follows application completedd validated process continue final approval ffollowing complete revision pre approval intermediatte step linked target source path thread bundle refers follows figure maap meta model three kinds relationships defined sections thread path bundle thread relationship represents possibility achieve target intention source intention following several different paths defined different strategy paths seen section map multiple strategies leading intension describe multiple ways realize intension high level map shown fig approve mortgage application intention realized either complete document revision include document review step property appraisal step complete revision pre approval steps path relationship represents precedence order sections say one section succeeds precedes another source target intention former target source intention latter absolutely path predefined engineer constructs path following situation hand given thread path relationships intention achieved several combinations sections example mortgage lender navigate map presented fig order approve mortgage several paths possible e g application submitted directly following prequalification procedure first approval granted without pre approval step latter etc bundle relationship shows possibility several sections source target intentions mutually exclusive mutual exclusion depicted dashed lines map fig strategy closing linking approve mortgage application intention terminal intention stop represents bundle relationship combines two sections mutually exclusive either closing done escrow face face section map may refined another map using refinement relationship refinement abstraction mechanism complex assembly sections level viewed unique section level relationship introduces levels process representation map may represented hierarchy maps fig b represents refinement section high level map illustrated fig provides details final approval process mortgage application section refined executable service fulfills intention may operationalize implies transformation product development execution service guideline workflow algorithm business process model etc map specifies one intention selection guideline isg per intention except stop intention given intention isg identifies set intentions j achieved next step proposes arguments select one also one strategy selection guideline ssg per intentions pair j given two intentions j set possible strategies ij1 ij2 ijn applicable j associated ssg guides selection ijk say isgs ssgs describe know domain socalled decision process chunks iv extending map role role variability modeling enabling multiple strategic choices map specification provide enough information realization choices one recurrent problems role assignment specified deco synonyms alternatives optional obligatory process elements hierarchies elements defined generalization specialization relations provide mechanism modeling process variability configuration rules hand support configuration variants based situation work apply mechanisms model variability roles maps example roles associated mortgage approval process vary country country one bank another following internal policies also one agency another within one bank e g based size agency whereas sections abstract mortgage process illustrated fig assigned abstract actors e g mortgage lender concrete role assignments refined mortgage approval process fig b may depend financial institution small banks several roles associated process whereas big agencies application processing decision making likely assigned number different roles different responsibilities study shows responsibility also performed several roles delegated one role another according internal rules result different actors may required available execute mortgage approval process thus provide efficient guidance administration personnel bank explicit specification roles relations e g hierarchy alternatives possible replacements synonyms required enhanced map concepts role variability important real life process descriptions organizations responsibilities often associated multiple roles time role names double meaning depending project process thus process gets overloaded exceptions becomes extremely complex providing little support guidance get practical value explicit specification roles relations rules role configuration assignment required figure represents extended meta model map includes following concepts role relations roles role configuration rule concepts enable mechanism modeling role variability map process models variability roles business process models mechanism address organizational complexity discussed start uses linked uses target source map refine bundle refers follows executable service made executed relation apply figure enhanced map meta model role definition organizational intention shared number actors role identified set responsibilities fulfilled one several actors organization loan consultant loan officer appraisal agent – examples roles enhanced map meta model concept role specialized individual role group role example loan consultant individual role whereas loan processor group role group role contains several individual roles define three types relations roles synonym alternative configuration role configuration expresses possible instantiation generic role configured roles instance mortgage lender may configured several roles loan consultant loan processor closing agent within configuration different roles related via synonym alternative relations synonym relation expresses fact specific role found different organizations processes different names still encapsulating set responsibilities e role synonyms example mortgage approval process loan consultant role synonym loan broker role thus process instantiation roles assigned actor alternative relation expresses fact specific conditions responsibilities associated one role fulfilled another role delegated example local agency appraisal agent external appraisal agent recruited perform property appraisal task along lines role loan processor performs application revision decision making fulfilled loan broker smaller agencies associate executable service supporting map section one several roles captures knowledge tasks taken role offers better guidance map execution executable service e business process chunk method chunk encapsulates process knowledge specified organizational layer answering questions b modeling role hierarchy mortgage approval process figure role hierarchy relations roles mortgage approval process figure illustrates hierarchy roles defined mortgage approval process roles modeled rectangles following uml notation name upper compartment rectangle thick outline c right corner compact notation refers role configured process model based situation context envisage integrating role element map notation using compact representation convenience configuration details shown separate diagram represented fig example abstract role mortgage lender combines set complementary possibly overlapping responsibilitie responsibilities fulfilled single actor shared group actors giving rise specific roles loan consultant loan processor underwriter etc diagram representing details role configuration define another two types relations roles synonym relation depicted dashed line tag syn alternative relation ddepicted solid line tag alt relations refleect policies organization used explicitly deescribe based concrete context namely synonym relation refers tthe fact context given process two roles abbsolutely responsibilities thus defined innterchangeably different organizations example ouur example loan broker loan officer roles synonnyms loan consultant role within mortgage apprroval process fulfill responsibilities alternative relation refers sittuations responsibilities one role delegateed another role otherwise responsibilities example fig loan processor role alternative loan officer role alternative bounded condiition r1 depicted shaded circle meaning whenevver number agents local agency less thenn persons responsibilities mortgage approval process normally fulfilled loan processor ffulfilled loan officer along lines external appraisal agent state attorney alternative roles bank aappraisal agent attorney respectively alternatives activated whenever corresponding roles insidde bank unavailable emphasize considereed relations defined given process e g whereas one process two roles considered synonyms ffoor another process necessarily case sets responsibilities fulfilled rolee within different processes might different specify configuration rules rolle diagram rules define conditions synonnym alternative relation roles activated theyy expressed form predicate evaluating truue condition satisfied given context false otherwisse example depicted fig rule r1 describess condition activating alternative relation states thaat number agency employees less orrder activate alternative relation loan proocessor loan officer roles otherwise bigger agenccy documents revision delegated loan offficer fig illustrates examples rules tthat used configure roles availability givven role real environment geographical location aggency – many factors affect configurattion process model particular imposing role acttors configuration r1 agents figure role configuration rule exammples configuration rules bbe defined level company country divisioon local branch agency extended map thee role specifications illustrated fig figure mortgage approoval process enhanced maps upper part figuree depicts high level view mortgage approval processs section represents process interest – moortgage approval executed bank section asssigned abstract role mortgage lender bottom part fig rrepresents refinement section interpreted aas follows mortgage application ccan made either following pre qualification process directly making appointment bank caall personal contact loan consultant role ressponsible guiding client processess formal application completed document reviiew process initiated mortgage lender process cconsists several steps accomplished following diffferent paths pre approval mortgage assigned ssingle role loan processor final approval caarried loan processor accompanied byy property appraisal process carried appraisall agent three roles assigned closing processs grateful v conclusion future work paper proposes mechanism model roles role variability intentional meta model map namely extended map notation concepts roles relations roles introduced role configuration rules formalization concepts addressed future publications proposed mechanism enables better guidance navigation maps process step defined specific roles number proposed alternatives navigate map reduced steps compatibles user role illustrated modeling process example mortgage approval process defined usa banks simplified specification considered mortgage approval process example case management process shown modeling process using traditional imperative modeling style difficult possible paper demonstrated advantages intentional modeling using map enriched role modeling mechanism first advantage main user mortgage lender example perfect view stakeholders involved processes second advantage resulting model allows us anticipate variations context e g different bank agencies different distribution responsibilities employees managing model complexity proposed notation modeling role variability limited map proposed deco used extend another process modeling notations bpmn future plan extend notation proposed work adding cardinality constraints",
  "2011-RN": "introduction recent publications illustrate increasing interest bpm practitioners methodology tools unstructured knowledge intensive processes case management processes cmp report november gartner inc published business process management predictions beyond reflect challenges emerging bpm trends namely acknowledge need support unstructured dynamic knowledgeintensive processes according gartner dynamic bpm imperative companies seeking process efficiencies increasingly chaotic environments another prediction highlights importance developing business process modeling culture organizations business managers knowledge workers global enterprises use comprehensive business process models support daily work six percent janelle hills vice president gartner research comments prediction comprehensive graphical rather textual explicit process models capture represent organizational knowledge create lingua franca business roles case management process modeling cmpm request proposal released omg september expresses particular demand practitioners case management solutions omg defines case management coordinative goaloriented discipline handle cases opening closure interactively persons involved subject case case manager case team case management processes multiple applications including licensing permitting government insurance application claim processing insurance patient care medical diagnosis healthcare mortgage processing banking main resource cmp knowledge obtained result communication multiple actors users stored case file two types knowledge cmp deals explicit knowledge case subject e g patient body temperature tacit knowledge required manage case e g experience medical team whereas explicit knowledge stored managed shared easily actors tacit knowledge hard represent transfer – exists form experience intuition largely based tacit knowledge cmps hardly analyzed improved replicated organizations problematic extensively explored researchers knowledge management discipline nonaka takeuchi describe conversion different types knowledge within organizations iterative spiral process includes four phases socialization externalization combination internalization seci process explains individuals tacit knowledge getting transformed first tacit explicit knowledge organization according seci stimulates new knowledge creation application resulting improved processes along lines experience one main objectives adaptive case management approaches dominant business process workflow supporting formalisms almost systematically activity oriented main advantage formalisms possibility generate executable process specifications also simulate validate specifications prior process deployment technique guarantees better control processes helps avoid costly errors however providing high degree control aforementioned formalisms suffer lack adaptability process designed becomes difficult possible adjust respect changing execution context emerging knowledge thus well suited prescriptive context specific business processes modeling formalisms appropriate knowledge intensive processes case management process modeling cmpm particular inspired omg request proposal formulate following question provide formalism would support process run time adaptability providing control ensuring process correctness last decade process adaptability evolution support remains central area interest many researchers among others numerous contributions groups university ulm dadam reichert et al eindhoven university technology van der aalst et al emphasized work introduce modeling approach cmp based declarative configurable deco specifications originality approach attempt distill different ideas explored different periods time different research groups bpm software engineering declarative modeling model verification variability modeling compared traditional modeling approaches deco explicitly defines three modeling levels capture knowledge intensive processes design result configurable non deterministic design specification focuses process goals ii deployment result customized design specification reflects process deployment environment iii execution result fully deterministic process trace reflects post factum single process enactment enable process control formalize relationships process specifications three levels refinement relationships using formal methods refinement validation ensure process customizations made deployment level process execution aligned process goals specified design systematic improvement cmp based user paper focus deco modeling levels definition formalization refinement relations specifications levels refinement validation addressed future publications illustrate deco specifications example mortgage approval process reminder paper organized follows section discuss business process taxonomy position cmps within taxonomy also discuss existing trends process modeling highlighting challenges perspectives modeling knowledge intensive processes cmps section introduces mortgage approval process – cmp example section present deco process specifications discuss theoretical foundations define three modeling levels specifications introduce deco process lifecycle section illustrate graphical notation deco example mortgage approval process notation extends bpmn notation providing concepts declarative process modeling formal analysis step wise evolution section present conclusions case management process modeling new challenge bpm process taxonomy business processes roughly divided two categories prescriptive processes processes predictable sequences simple tasks well defined coordination rules process fully specified design time descriptive processes knowledge intensive processes strongly based actor collaboration information exchange also characterized weak predictability task sequences partially defined coordination rules process sketched designtime run time process reflect emerging knowledge adapt accordingly global economy growing interest organizations explore new markets observed however even simple business process adapted new execution context depending among aspects cultural legal considerations distinguish another two categories business processes context specific processes highly specialized processes defined given execution context e g research experiment chemistry physics configurable processes processes requiring customization e g role task assignment task ordering rule selection upon deployment order reflect context specific parameters processes deployment time adaptability required figure illustrates process taxonomy provides reader several examples case management glossary rfp cmpm defines case situation set circumstances initiative requires set actions achieve acceptable outcome objective … case management processes cmp characterized following driven emergent knowledge case subject environment largely based tacit knowledge e g human expertise highly unpredictable difficult replicate hard analyze improve howtos available according definition provided cmps considered knowledge intensive business processes according classification fig cmp supposed anticipate change business context deployment also react consistent organized manner emerging case related knowledge run time therefore identify cmp descriptive configurable processes position topright quadrant diagram fig figure business process taxonomy cmps considered descriptive configurable processes modeling formalisms business process modeling formalisms defined unified modeling language event driven process chain epc business process modeling notation bpmn gain wide recognition among practitioners today according classification provided formalisms based activity oriented product oriented paradigm business process modeling bpmn beta specification extends bpmn distinguishing private internal business processes abstract public processes collaboration global processes enables model orchestrations choreographies stand alone integrated models therefore provides better support modeling collaborations communication human actors involvement process models presented based decision oriented paradigm according successive transformations product looked upon consequences decisions van der aalst presents case handling paradigm cope business process flexibility contrast workflow management case handling aims describe done achieve business goal done approach mining change logs adaptive process management systems presented since adaptive processes provide information process changes – changes used organizational learning process improvement taxonomy flexible adaptive workflow approaches presented approaches providing flexibility selection priori adaptation posteriory distinguished flexibility adaptation allows evolution adaptation process definitions design models well process instances execution modeling formalisms supporting flexibility selection offer capacity deal change process deployment environment instance level result evolution process definitions design models authors distinguish three classes business processes operational practice oriented case handling use term organizational practices address result externalization tacit knowledge organizations question develop use practices order provide systematic analysis improvement cmp one main objectives adaptive case management work present process modeling approach based declarative configurable deco process specifications extend bpmn notation constructs declarative variability modeling support approach explores flexibility adaptation assumes eventual evolution initial descriptive process definition via enactment analysis process mining example mortgage approval process mortgage approval process typical example case management process paper provide generic mortgage approval process description defined different financial institutions usa information provided results study multiple information sources e g http www homebuyinginstitute com http www mortgage resource center com http homebuyereducation bankofamerica com http www homeloancenter com etc represents compilation guidelines recommendations descriptions mortgage approval process provided different loan consulting firms financial advisors banks available web mortgage loan buying house mortgage approval process divided following steps pre qualification formal application document review pre approval property appraisal final approval closing whereas order main steps varies rarely documents required sequences tasks participants length step different depending place financial institution policies applicant situation requirements paper focus formal application process step mortgage approval formal application applicant request application package e mail post alternatively forms accessed web mortgage application submitted electronically personal meeting mortgage lender exact set documents may vary depending financial institution particular situation applicant documents may include social security card record past two years residence address employer name address w tax forms federal income tax returns recent pay stubs etc formal application mortgage lender provides applicant good faith estimate gfe costs loan closing applicant asked make final decision type mortgage loan also interest rate loan locked phase lenders give applicant access website applicant check approval status package usually application fee appraisal fee paid applicant mortgage application submission main purpose description illustrate variability activities actors information involved emphasize unpredictability diversity process scenarios – characteristics make modeling challenging task declarative configurable process specifications deco theoretical foundations designing deco modeling approach following guiding principles considered fixed constraint often means lost opportunities deco formalism limit guide modeler encouraging think terms possibilities alternatives variations instead rules constraints little certain design time deco specifications separate process goals achieved process means done achieve process realizations proper time address aspects necessary design time controlled anarchy deco formalism support mechanisms assembling meaningful process specifications predefined process parts variants controlling meaningfulness order follow guidelines deco formalism grounded cid declarative modeling paradigm supports nondeterminism thus releases designer obligation determine exact process scenarios upfront cid variability modeling provides mechanism specify multiple variants different process components tasks data objects actors etc hiding complexity keeping model reasonably readable cid refinement theory formal methods paradigms defined software engineering providing methodology tool support program specifications analysis validation context use methodology tools ensure correctness process customization process realization respect design specification work largely based research reported inspired results presented deco approach enhance results presented providing explicit notion modeling levels extending graphical notation declarative modeling principles allow one postpone decision making process control flow deployment even execution declarative specifications modeling business processes presented approach based systematic modeling process related data allows us introduce notion process state case state vector x p p p n components p p p n values data objects related case given moment time every process task define precondition postcondition postcondition post condition case meets upon task termination specifies possible case states task completion including success failure precondition pre specifies condition must hold upon task invocation specifies possible case states task necessary executed specify task using logical implication precondition postcondition follows x x def x → x x pre post expression interpreted follows given state x precondition pre task holds case transited state x postcondition post holds process specification deco represents set tasks explicit execution scenario run time task dynamically selected list tasks enabled given case state refinement theory formal methods soon process specification evolves based user experience emerging knowledge mechanism validate control evolution required work presented evolution declarative non deterministic process specification design time towards precise imperative process specification instantiation represented set refinement steps notion refinement graphical specifications adopted software engineering presented work formal semantics graphical specifications defined based first order logic set theory semantics allows us reduce problem refinement verification validation firstorder logic formula provides means automated process analysis control using tools automated analysis program specifications defined software engineering variability modeling technique presented allows one demonstrate different control flow configurations process valid respect high level declarative design specification however deal descriptive processes case management particular process configurability limited control flow literature several major perspectives process models specified control flow perspective data perspective resource perspective operational perspective context perspective performance perspective concept configurable process presented modeling formalism deal process configurability multiple perspectives defined work authors address process configurability along control flow data resource perspectives according approach given configurable process model analysts able define configuration model assigning values variation points based set requirements configuration defined model individualized automatically individualization process considered automated synchronization process model perspectives respond configuration decision introduce notion correctness reason individualized configurable models authors define formal semantics c iepc based fol multi level process specifications deco according process definition obtained design time includes network activities relationships information individual activities including participants data etc modeling knowledge intensive descriptive processes major challenge related fact multiple process aspects identified design time thus included process definition deco identify three modeling levels descriptive processes accordingly define following process specification types configurable design specification customized design specification realization specification process trace explain reasoning behind three levels design vs deployment example deployment environment mortgage approval process strongly affect way process constructed defined us financial organizations process still adjusted taking account legislative norms regulation different states example western part us mortgage closing done escrow rest country closing done face face thus organization specialized mortgage business entire us market interested consolidate processes instead keeping different process definition different states anticipate variations upfront one option organization specify possible execution paths alternative branches within single process model however often results tangled processes containing many exceptions moreover organization decides enter example european market integration new process scenarios require lot efforts second possibility identify support several modeling abstraction levels process maintaining relations levels deco discussed make distinction configurable process definition called configurable reference process model resulted process design customized process design specification according model configuration individualization reflecting concrete environment process enactment supposed observed deployment vs execution descriptive processes multiple process details often specified customization either emerging case related knowledge customerorganization communication patterns vary widely within predefined deployment environment affecting concrete process scenario hand identified execution example mortgage approval process concrete applicant situation may affect list required documents consequently required revision activities form w wage tax statement typically requested applicants usa whereas form foreign earned income provided taxpayers earned income sources outside united states applicant may prefer communicate loan consultant e mail setting personal meetings – also affect whole process scenario along lines current situation market property appraisal report emerging data may require special treatment result various courses actions decisions therefore case customized design specification remain configurable allow fine tuning execution thus make distinction customized design specification process occurred realization reflects decision making dynamic process configuration single invocation document process realizations define third type deco specifications – process realization trace main purpose process traces construct knowledge base contribute process improvement e g using process mining deco process life cycle define process lifecycle phases deco design customization execution analysis figure illustrates lifecycle phases design phase phase process goal set activities tasks supposed lead goal contracts individual activity pre post inv data required fulfill contracts identified following questions characterize design phase characterize process success failure tasks must could done achieve desired result data artifacts required mandatory task alternatives available solution patterns make decision alternatives design phase terminated non deterministic design specification defines process invariants focuses done accomplish process needed deployment customization phase deployment process environment selected therefore initial design specification customized reflecting emerging information customization involve specification set available roles role tasks assignments partial ordering tasks definition business rules etc order respect emerging constraints new tasks added whereas activities tasks defined design removed contracts precised following questions characterize customization phase constraints norms comply nature e g organizational geo political physical temporal cultural etc tasks must could done ensure compliance data artifacts required data artifacts available carry process accepted recommended solution patterns alternatives make decision alternatives customized design specification focuses organization accomplish process given environment available execution phase properly defined customized design specification enables configuration process enactment run time supporting decision making process handling based emerging data decisions may include triggering canceling execution delegation tasks restricting relaxing decision rules initiating supplementary investigations information requests assigning actors etc decisions driven business rules explicit regulations well actor experience process history best practices etc aspects specified design time figure deco process lifecycle explained process specification deco represents set tasks explicit execution scenario run time task dynamically selected list tasks enabled given case state soon task triggered becomes part process enactment trace analysis phase upon process enactment termination one possible process path trace explored stored history record case history studied order generalize repetitive scenarios derive business rules guidelines guidelines rules incorporated initial customized design specifications making process deterministic deco modeling notation deco process specifications extend bpmn notation de facto standard process modeling providing mechanism descriptive process modeling formal analysis step wise refinement notation infancy deco introduce following features bpmn graphical notation action contracts including preconditions postconditions invariants denoted pre post inv respectively distinction cross boundary data objects denoted local data objects optional vs obligatory tasks data conditions depicted dashed solid lines respectively configurable vs fixed tasks data actors depicted bold standard lines respectively configuration rules explicit task role data object specialization denoted task role data object alternatives denoted configurable design specification figure illustrates configurable design specification formal application phase mortgage approval process sendforms task fig specified precondition request received postcondition forms sent conditions formalized predicates first order logic formalization beyond scope paper condition depicted link task data object link annotated condition expression text fol paystubs ccbills confirmation examples cross boundary data objects taxforms taxreturn configurable data objects r1 r3 corresponding configuration rules balancesheet optional configurable data object form demanded applicant applicant selfemployed fact documented rule r2 getapplicationfee optional task decided upon particular case sendforms optional configurable task e selected specialized sendformsbypost sendformsbyfax sendformsbye mail similarly one configure lockinaninterestrate task apart sendforms registerapplication tasks preordered mortgagelender role configurable role specialized splited multiple roles depending organization customized design specification deployment design specification customized respect process deployment environment figure illustrates customized design specification formal mortgage application obtained initial design specification fig concrete financial institution bank x sendforms task removed bankx provides mortgage application forms line registerapplication task configured follows taxforms data object pre specialized w form must provided applicant taxreturn data object specialized replaced form top right corner object denotes object alternatives e possible replacements run time form replaced simplified version form – 1040ez generic actor mortgagelender design specification specialized represented two actors processor loancunsultant tasks distributed figure configurable design specification customized design specification actors lockinaniinterestrrate task specialized fax however task alternatives e g possible lock interest rate phone realization specification trace customization design specification reduces nondeterminizm latter provides concrete details process execution defined bankx however rests configurable nondeterministic tasks preordered trace execution process configured fly figure illustrates process trace reflects single invocation mortgage approval formal application process customized previous section specification depicts data objects received selected task ordering collection process traces used process analysis improvement order prove trace aligned corresponding design specifications relations specifications formalized refinement relations refinement validated formalization process beyond scope paper conclusion academic classification case management processes related descriptive knowledgeintensive unstructured processes recently process types recognized part bpm partially explains majority modeling formalisms presented bpm market today fail providing appropriate level adaptability ensuring process validation control descriptive knowledge intensive processes traditional activity driven formalisms business process modeling bpmn encourage early specification process details design time whereas knowledge intensive processes case management possible thus multiple modeling levels corresponding specifications knowledge intensive processes needed work presented modeling formalism based declarative configurable specifications deco includes three types specifications configurable design specification focuses process goals independently process deployment environment design specification non deterministic configured various environments upon process deployment customized design specification reflects knowledge process deployment environment e g governmental norms regulations customer behavior patterns etc obtained refinement design specification general case specification non deterministic supports run time adaptability driven emerging knowledge deco realization specification process trace reflects one actual process invocation aggregated history process traces beneficial process analysis improvement proposed approach allows bpm specialists separate process goals process means finally concrete process realization details improving adaptability exposing process complex environment important ensure constraints imposed environment feasible process goal eventually achieved problem addressed future works focused alignment deco specifications",
  "2012-R": "introduction last decades business process management bpm became imperative efficient functioning evolution organizations gave rise third wave research interest business process modeling analysis since main efforts researchers focused development process modeling languages would easy understand technical business users would provide better control processes result majority process modeling methodologies widely used today e g bpmn uml epc characterized powerful graphical notation rich design environment imperative style models imperative modeling largely contributes process control modeling approaches based example coupling graphical language bpmn operational language bpel infinitely attract bpm practitioners giving toolbox design execute test eventually instantiate deploy process models la rosa p soffer eds bpm workshops lnbip pp 65–76 © springer verlag berlin heidelberg rychkova requiring large upfront investments process scenario definition approaches still pay well deterministic repetitive processes automated production lines assuming execution scenarios changing rarely process automated organization quickly benefit economy scales latest publications show increasing interest bpm practitioners unstructured knowledge driven processes term knowledge driven knowledge intensive refers fact process execution scenario significantly depends knowledge human expert rather predefined process model process vary one execution another demonstrating large unpredictability one examples knowledge driven processes case coordinative goal management cmp omg defines case management oriented discipline handle cases opening closure interactively persons involved subject case case manager case team seeking increase efficiency process automation organizations also admit knowledge driven processes cmp ability adapt process scenario according situation call post design adaptability essential makes automation case management processes following imperative approach expensive number modifications initial process model quickly outweigh automation benefits cmpm request proposal released november omg formulates detail problem case management process modeling support illustrating need another paradigm declarative configurable specification language deco first introduced deco exploit idea activity scenario definition business process limited process design time imperative bpm requires makes integrated part process deployment even execution paper define configurable process elements namely configurable data objects context based configuration rules deco modeling concepts allow one continuously adapt process along lifecycle consequently pave road automated decision making support knowledge workers illustrate ideas example mortgage approval process reminder article organized follows section discuss related works section introduce mortgage approval process cmp example present motivations creating deco relate work previous research section discuss modeling principles deco introduce configurable data object context based configuration rules concepts section present conclusions discuss future work related works today majority de facto modeling standards including uml epc bpmn imperative exploit modeling style imperative process models suitable simulation thus highly advantageous practitioners helping control process exclude incorrect undesirable scenarios already design bpel standard executable language process models documented towards automated support case management processes bpmn operational semantics process model execution based petri nets pi calculus considered research reported proposes formal semantics bpmn defined using petri nets technique simulation analysis process specified demo presented yet providing means simulation control imperative process models proven restrictive specification numerous options variations sake process adaptability becomes difficult possible models declaratively alternatively process specified modeling style supports non determinism allows modeler postpone decision making process execution scenario deployment even execution detailed comparison imperative declarative modeling styles provided seam systemic enterprise architecture methodology presented seam joint actions processes organization modeled implicit nondeterministic execution scenarios modeler refines seam models selecting appropriate level details thus detailed specification process flow postponed similar way map methodology addresses process intentions strategies specifications using notions intention map realized following one multiple alternative strategies leaving process execution largely nondeterministic therefore adaptable given context map notation used address process variability model process lines whereas researchers decide develop modeling notations scratch others extend existing standards providing desired properties epc event process chain bpmn metamodels extended elements modeling process goals process performance measures bpmn notation extended provide concepts querying business process definitions extracting business process patterns imperative epc notation extended concepts process configurability along control flow data resource perspectives supporting process adaptability declarative models encompass significant ambiguity consequence suitable simulation numerous efforts achieve adaptability control roof process modeling approaches reported literature underlying semantics ranged ltl linear temporal logic fol first order logic petri nets enabling automated modelchecking theorem proving techniques model validation analysis known software engineering decserflow language declarative modeling service flows presented authors present declare system models supporting declarative loosely structured process formal semantics declare decserflow based ltl formal semantics configurable integrated epc c iepc modeling notation presented based fol serves validate process model correctness deco motivation relation previous research declarative semantics graphical modeling notation enterprise modeling called seam discussed consider variability aspects rychkova business process modeling propose declarative modeling approach semantics based alloy alloy specification language allows one validate conformance high level declarative design specification process low level imperative implementation specification put research previous years together order develop approach offering modeler extensive configurability opportunities implementing principles declarative modeling supporting automated model analysis step wise refinement called approach deco – declarative configurable process specifications introduce configurable roles add concept map notation work introduces another two modeling concepts deco configurable data objects contextual configuration rules illustrate use concepts example mortgage approval process motivating example mortgage approval process mortgage approval process typical example case management process paper provide generic mortgage approval process description defined different financial institutions usa information provided represents compilation guidelines descriptions mortgage approval process provided different loan consulting firms financial advisors banks available web e g http www homebuyinginstitute com http www mortgage resource center com http homebuyereducation bankofamerica com etc mortgage loan buying house mortgage approval process divided following sub processes pre qualification formal application document review pre approval property appraisal final approval closing whereas order main sub processes varies rarely documents required sequences tasks participants sub process different depending place financial institution policies applicant situation requirements paper focus formal application sub process formal application applicant request application package e mail post alternatively forms downloaded web site prospective lender mortgage application submitted electronically personal meeting mortgage lender exact set documents may vary depending financial institution particular situation applicant documents may include social security card record past two years residence address employer data various internal revenue service irs forms recent pay stubs etc formal application states mortgage lender provides applicant good faith estimate gfe costs loan closing applicant also asked make final decision type mortgage loan lock interest rate towards automated support case management processes formal application submission applicant pay usually application fee appraisal fee agencies however appraisal charged later whereas application procedure free charge though substantially simplified description illustrates variability activities actors information involved process process scenario also differ substantially depending execution context e g country state agency financial organization operating globally dealing multiple environments definition single process model becomes challenging task previous work reported modeled formal application sub five process using bpmn formulated modeling challenges common imperative modeling approaches general need specify task inputs outputs distinguishing obligatory optional data objects alternatives possible replacements synonyms identical artifacts called differently need specify role hierarchy alternative roles synonyms need specify optional obligatory alternative task synonyms need specify multiple control flow possibilities need specify impact data different tasks task flow improving adaptability mortgage approval process model deco replacing imperative scenario declarative specification graphical notation deco based bpmn whose modeling concepts widely used recognized practitioners similarities terminate since compared bpmn deco implements declarative modeling principles principles allow one postpone decision making eventual process scenario deployment even execution declarative approach process modeling represents alternative continuous exception definition use else switch constructions within traditional workflow based process model instead modeling flow process activities deco focus modeling individual activities clusters contract activities activity associated specifies conditions situation activity executed ii situation result execution result instead flow preordered tasks deco specification describes set tasks explicit ordering must could executed process set rules allowing dynamic task selection given process state list tasks enabled state general case resulting process scenario highly nondeterministic enabled task selected result different case development strictly speaking rychkova concrete scenario given case managed known upon process termination call execution trace role context information used characterize dey defines context situation entity entity person place object considered relevant interaction user application including user applications example shows mortgage approval process vary strongly country country agency agency even one mortgage application another entities make part process context taken consideration configuring concrete process scenario specifically context relevant process encompass characteristics mortgage lender applicant mortgage lender financial institution characterized internal policies adopted standards customer services risk management etc concrete agency also resources available process execution taken consideration number employees roles expertise responsibilities moreover financial institution comply external regulations e g federal law etc defined country state residence thus geographical situation mortgage lender also context mortgage approval process information mortgage applicant explicitly handled process – mortgage application file design time usually little known process context cmp comply industry standard external regulations known internal policies organization implementing deployment context getting explicit agency type location local resources specific facts process context allow designer configure process accordingly final specific part process context case context application file – appears fills mortgage approval execution allows configuring process scenario details according deco modeling approach emerging context information constantly transformed process configuration rules design deployment used check task compliance rules deployment execution thus deco specification mortgage approval process seen repository tasks task instantiated given country agency even application case answering following questions resources data people etc required task execution produced modified upon termination task constraints e g functional temporary legacy etc must fulfilled task execution deco provide means modeling process context rely strongly availability context information coupling deco context modeling approach explored future research towards automated support case management processes configurability multiple perspectives literature several major perspectives process models specified control flow perspective captures temporal ordering process tasks events data perspective decision points captures lifecycle data objects creation resource perspective usage modification deletion within process describes process carried within organization deals roles resource operational perspective assignments addresses technical aspects process execution specifies elementary process tasks assignment concrete context perspective applications application components organizations performance describes attributes related process execution context perspective addressing process cost effectiveness deco defines concepts semantics addressing process model configurability control flow declarative style perspective supporting allowing non data operational resource deterministic execution scenarios ii perspectives configurable data objects tasks roles providing modeling notation context contextual configuration rules respectively iii perspective providing configurable roles deco already addressed paper introduce notation semantics configurable data objects context based configuration rules deco concepts addressed detail future publications configurable data objects semantics case foreign applicant recently arrived us following new job assignment become extremely difficult potential mortgage lender main problem required case applicant provide documents standard process instead submitting documents issued bank employer authority previous country residence matching standards application launch long investigation process simply rejected optional deco defines configuration mechanisms data objects include obligatory consumed produced data objects specifies certain data artifact modified synonym alternative given task defines relations data objects illustrated fig mechanisms help knowledge worker anticipate situation never met process data artifacts previewed standard process scenario one exists use efficient decision making data object configuration deco corresponds configurability along data perspective according taxonomy defined tax forms tax figure illustrates data object configuration diagram return forms required formal mortgage application usa rectangle c thick outline right corner refers data object configured process model based situation context alternatives specify data objects replace data object synonyms originally required task completely identical data objects used different names organizations departments one organization dashed rychkova line tag syn depicts synonym relation solid line tag alt deppicts alternative relation morre formally relations specified follows let taskk data objects consumed producedd n modified fig data object configuration deco definition x synonym π data object given process iff replacce π impact fig tax forms annd tax return forms called internal revenue servvice irs forms source wikipeedia expressed using synonym relation definition fact thatt given process aanndd ttaasskk data object iss alternative ccertain condition r implies r holds cann accepted instead fig form 1040ezz simplified form applicable single joint filers depenndents source wikipedia considered alternative obligatoory form rule diagram expliccitly specifies condition wheree alternative applicable optionnal data object given task omitted contract oof example gfe certiificate optional countries omittedd register application task deco optional data objects depicted dasshed borders using data object cconfiguration separate management ddata objects process sceenario management let us come back foreign applicant example considering bannk willing satisfy foreiggn applicant request main trouble loan offficer would identify relaations standard forms provided appliccant towards automated support case management processes unknown current bank standard forms required mortgage approval process bank investigation terminates conclusions like following form x provided applicant analogy form required process form x provided applicant accepted place form required process certain condition c form x provided applicant irrelevant process information expressed terms synonym alternative relations optional obligatory property deco form x provided applicant analogy form required x synonym within process  process form x provided applicant accepted place form condition c met  required process certain condition c x alternative within process x  form x provided applicant irrelevant process optional within process synonym alternative relations determined process model evolves better decision making support loan officer provided modeling contextual configuration rules one process often needs customized order meet requirements deployment environment e g country state corporate division anticipate concrete case circumstances therefore possibility enable disable synonym alternative relations optional obligatory properties element provided process design also customization instantiation purpose context rules deco defines context configuration rules short deco diagrams context rules depicted dark circles labeled name rule current version deco rules formulated predicate true expressions based context predicate evaluates corresponding configuration mechanism enabled concept illustrated following example according banking regulations us certain cases mortgage applicant may asked provide lender one several supplementary tax forms tax return forms diagram fig illustrates context rules implementing regulations form w2 wage tax statement obligatory data object mortgage application form foreign earned income provided taxpayers earned income sources outside united states context rule form 1040a limited taxpayers taxable income expressed rule form 1040ez simplified form applicable single joint filers dependents source wikipedia condition expressed contextual rule form considered alternative obligatory form rychkova context configuration rules defined based external regulations imposed concrete location country state city organization implementing process b internal policies specified company level country division local branch agency c particular case conditions e g foreign applicant sub prime first time buyer etc context rules mortgage approval process may include isavailable internalappraisalagent true agencylocation north carolina etc context rules specified process design refined deployment controlled execution conclusion future work work declarative configurable process specification language presented graphical notation deco based bpmn similarities terminate since compared bpmn deco implements declarative modeling principles deco language infancy validation modeling concepts development modeling tool main milestones future research paper specified configurable data objects contextual configuration rules concepts integrated deco process models concepts defined deco presented next publications using mortgage approval process example illustrated declarative modeling principles configurability mechanisms used order improve post design process model adaptability characteristic utterly desired knowledge driven processes since execution scenario processes predefined non deterministic design declarative specifications become natural solution though encompassing significant ambiguity suitable simulation declarative process specifications may serve useful tool process validation verification – techniques known software engineering soon new context information emerges declarative process specification evolves ideally step wise becomes deterministic evolution compared refinement software specifications notion refinement graphical specifications presented step wise process refinement validation deco addressed future publications context rules play important role process configuration providing organization exposed various sources regulations thousand context rules emerge process model increases risk conflicting rules leading process model inconsistency deco provides fol based semantics context rules next step research focused modeling validation verification context rules modeling method presented work infancy modeling notation still requires major improvement order adopted practitioners however important issue us scalability validity deco process specifications modeling elaborated real life case management process deco validation results critical milestone research towards automated support case management processes",
  "2013-BBRWa": "introduction business rules everywhere every enterprise process task activity func tion governed rules however rules implicit thus poorly enforced others written enforced still others per haps poorly written obscurely enforced work propose teractive simulation driven approach business rules discovery approach provide domain specialist instant feedback helping reason existing business rules discover new implicit business rules eventually improve enforcement addition capturing logic entire business would require probably many thousands rules smaller subsystem perhaps several hundreds often made different people different time driven different business ideas mind rules consistency need validate new rule con cid ict existing rules real problem approach use formal based rule modeling simulation alloy analyzer simulation driven approach business rules discovery speci cid cations model checking techniques allows us discover new rules also preserve validate consistency illustrate approach example order processing g cid en cid erale ressorts sa formalize existing business rules alloy simulate alloy model analyze generated instances discover cluster instances derived alloy model explicitly covered existing business rules generalize property cluster speci cid c business case fact must documented restricted corresponding business rule show new rule added model makes model inconsistent thus requires adjustments provide solution cid rst alloy explain meaning business terms reminder paper organized follows section discuss motivation present related works section introduce example order processing speci cid ed g cid en cid erale ressorts sa formalize example alloy illustrate br discovery alloy analyzer section generalize approach formulate cid ndings xx steps interactive br discovery based formal model checking section present conclusions motivation related work according business rule compact statement aspect business constraint sense business rule lays must must case particular point possible determine condition implied constraint true logical sense remedial action needed many research industrial publications focused challenges associ ated business rules br industry vendors ilog currently part ibm fico blaze advisor pega systems inc developing business rule engines bre since late 1980s leaders emerg ing bre segment academia computer sciences engineering outlets active business rule research extensive studies rule programming meta modeling rule mining rules engines business user interfaces role services orientated architectures soa furthermore joint academic industry developed object management groups omg se mantics business vocabulary business rules sbvr standards released september intended provide standards surrounding br structure terminology classi cid cations meaning br authoring reposi tories different approaches propose different phases business rules management main phases discovery de cid nition review life cycle brmlc maintenance main phases discovery analysis design authoring phases plan capture organize author validation deployment distribute test apply paper focus discovery e capturing phase simulation driven approach business rules discovery brmlc goal discovery phase identify potential business rules impacting domain segment development see effect introduced business rules designer must go number phases analysis design authorizing validation deployment would much effective designer could get instant visual feedback new business rules cid uence behavior process examples company behavior could help realize constraints missing model propose approach based alloy simulation helps discover new br interactive way ensuring consistency validity overall set br although br traditionally expressed natural language works presented report forms br formalization diagramatic language used rules speci cid ed formulas modal logic work use alloy speci cid cation language based cid rst order logic propose technique br discovery based model simulation analysis alloy analyzer tool business rules discovery alloy analyzer section present process interactive discovery business rules based formal model checking implemented using alloy alyzer tool start introducing example order processing speci cid ed g cid en cid erale ressorts sa first specify order processing associated business rules natural language introduce alloy spec cid cation language model example alloy finally demonstrate alloy analyzer tool assist interactive discovery validation business rules missing omitted implicit initial business speci cid cation order processing case study order processing g cid en cid erale ressorts g cid en cid erale ressorts sa market leader watch barrel springs cid rst class manufacturer tension springs coil springs shaped springs industry components g cid en cid erale ressorts sa works thousands customers strives ensure highest quality products customer services order processing one strategic activities g cid en cid erale ressorts sa covers complete order life cycle order creation payment delivery whereas company constantly improves technological processes order shorten production cycle payment may take months product delivered1 therefore cid exible business rules order processing customer transactions management essential gr g cid en cid erale ressorts shipping payment con cid rmation policy acceptable industry general g cid en cid erale ressorts sa particular simulation driven approach business rules discovery order processing includes following processes order creation order preparation shipping accounting also closely related customer management processes company whole process moment customer makes order delivery accounting known order cash cycle fig paper de cid ne simpli cid ed order processing activity focuses order creation delivery payment customer submits order request manufacturing watch component part con cid rmed order prepared delivered customer stated payment con cid rmed customer orders necessary condition cid nalize overall order processing transaction given order though required order delivery present list business rules related order processing order creation br1 customer order created con cid rmed customers regis tered enterprise information system br1 customer order created con cid rmed parts existing product catalog br1 order request new customer received customer registered enterprise system br1 order delivery br2 every con cid rmed customer order must eventually delivered customer br2 accounting br3 every con cid rmed customer order must eventually paid customer br3 customer management br4 every customer record must contain one customer name br4 every customer record must contain least one valid billing address br4 every customer record must contain least one valid shipping address br4 every customer record must associated previous orders history br4 customer whose transactions gr equal superior xx xxx euro per year receives status strategic customer gr br4 customer whose transactions gr inferior xx xxx euro per year receives status regular customer gr br4 strategic customers must always able submit order gr br4 alloy alloy declarative speci cid cation language developed software de sign group mit alloy language expressing complex structural con straints behaviour based cid rst order logic tool automated analysis models written alloy analyzer alloy speci cid cation language given logical formula data struc ture de cid nes value domain formula alloy analyzer decides simulation driven approach business rules discovery fig order cash cycle adapted whether formula satis cid able mechanically alloy analyzer attempts cid nd model instance binding variables values makes formula true syntax alloy similar syntax ocl object constraint language uml data structures represented signatures la belled keyword sig cid elds alloy reusable expressions e functions constraints e facts predi cates assertions used reason data structures de cid ne relationships previous work de cid ned iterative process service designe alloy signatures facts predicates used service speci cid ca tion work extend use alloy constructs particular use alloy constraints modeling validation business rules de cid nition business rules intended assert business structure control cid uence behavior business structural rules de cid ne business information model behavioral rule hand business reacts business events speci cid ed something happens boundaries system approach deal kind business rules fact model constraint permanently holds use alloy facts specify must hold entire model e structural business rules havioral rules system invariants example every customer record must contain least one valid billing address structural business rule modeled alloy fact associated corresponding data structure specifying customer predicate constraint holds speci cid c context speci cid c part model use alloy predicates model business rules clear scope context example order request simulation driven approach business rules discovery new customer received customer registered enter prise system rule clear scope must applicable modeled alloy predicate whereas business rules seen restrictions prohibitions thus modeled alloy facts predicates business rules different nature example strategic customers must always able submit order gr business rule restriction necessity property ensured provided de spite conditions model type business rules using alloy assertions assertion property designer believes implied model check deduced permanent contextual constraints alloy speci cid cation order processing order processing alloy data structure order processing modeled using alloy signatures illustrated fig signature gr b signatures orderrequest fig design alloy signatures alloy signatures sig abstract concrete explicit cardi nalities e g one orderrequest object treated service time contain one multiple cid elds cid eld indicates relation corresponding object type considered analogy attributes object oriented oo languages example indicates name one name orderrequest object attribute name type name use one set cardinalities cid elds distinguish one one one many relations order processing example specify system gr alloy signature illustrated fig 2a characterized following cid elds partset set representing parts watch components ordered customerset set customers registered gr information system ordercon cid rmedset set orderes created con cid rmed gr distinction already proposed two modal operators de cid ned necessity negation possibility obligation negation prohibition simulation driven approach business rules discovery orderdeliveredset set orders subset created con cid rmed orders delivered customers orderpaidset set orders subset created con cid rmed orders paid customers similarly adapt state oriented perspective specify execution order processing terms state transition de cid ne pre state gr pre describes state system gr order processing performed post state gr post describes condition must hold system upon activity termination objective model assist business analyst discovery implicit missing business rules associated order processing going investigate status customer orders changing order processing activity given order status identi cid ed analyzing ordercon cid rmedset orderdeliveredset orderpaidset gr note order one multiple sets time example order orderpaidset paid consequently order orderpaidset pre state added orderpaidset post state upon termination given activity means paid statuses canceled e order paid unpaid etc data structure de cid ned specify order processing executed behavior following description section represent concurrent3 order processing activity execution order creation order payment order delivery processes order processing three component processes modeled alloy predicates predicates show transition gr pre gr post states proposed speci cid cations black box show corresponding processes executed cid nal result execution visible gr e gr attributesordercon cid rmedset orderpaidset orderdeliveredset look like upon process termination predicates specify conditions must hold gr upon order cre ation delivery payment order creation condition considering order creation business rules respected ordercreationbr new order must created added corresponding order set ordercon cid rmedset post state order delivery considering customer unde livered order order history e order system orderdeliveredset pre state order must delivered added corresponding set post state order payment considering customer paid order order history e order sys tem orderpaidset pre state order must paid added corresponding set post state along lines orderprocessing predicate fig 3d speci cid es upon order processing termination three processes order creation order delivery exploit declarative approach activity modeling avoid preordering processes within order processing simulation driven approach business rules discovery order payment must accomplished alloy corresponds logical conjunction ordercreation orderpayment orderdelivery predicates ordercreation process b orderpayment process c orderdelivery process orderprocessing activity fig order processing activity combination order creation order de livery order payment processes business rules illustrate approach use subset business rules given section business rules select br1 br1 br2 br3 br4 business rules shown fig business rules br1 br1 modeled predicates explicit scope order creation process alloy br1 states customer registered customerset pre state start creating order predicate customerexists called predicate order creation via ordercreationbr predicate fig 3a predicate customerexists together call ordercreation claims order created customer registered customerset br1 states order cre ation requested part exist partset order creation pre state whenever run ordercreation rule automatically respected simulation driven approach business rules discovery new order created customer exists system otherwise ordercon cid rmedset remain fig 3a br2 modeled fact fact claims delivery order existing orders eventually delivered post state similarly br3 represented fact claims order payment rules global scope finally br4 modeled assertion ensure strategic customer always create new order despite conditions necessity rule want always hold write assertion checked model assertion claims whenever order request strategic customer existing part new order created eis assertion valid means business rule respected system case get counterexamples rule respected need revise business rules br1 customer order b br1 customer order created con cid rmed created con cid rmed customers registered eis parts existing product catalog c br2 every con cid rmed customer br3 every con cid rmed customer der must eventually delivered order must eventually paid cus customer tomer e br4 strategic customers must always able submit order gr fig initial business rules simulation driven approach business rules discovery business rules discovery order processing discovering new business rules approach br discovery based simulation idea simulate alloy model representing subset system interest structure behavior initial business rules modeled alloy constraints analyze instances generated alloy analyzer tool instances case represent scenarios order processing enabled created model objective model simulation twofold cid rst check model consistency absence contradictory constraints business rules second test random set model instances generated alloy analyzer discovering possibly missing brs call phase business rule discovery simulating order creation process cid nd instances customer make new order even pay previous orders already delivered scenario illustrated fig scenario shows regular customer grey parallelogram top creating order customer associated orders order0 order1 history black rectangles order already delivered unpaid despite able create new order order0 know new order see pre state view system ordercon cid rmedset pre state appeared post state fig could potentially bring company lot unpaid orders short long term loses domain specialist decides weather needs de cid ne new br restrict behavior make sure interest company protected case designer translates business rule alloy fig order accepted unpaid orders history business rules consistency checking provide domain specialist instant feedback helping reason existing business rules simulation driven approach business rules discovery interactively discover new implicit business rules eventually improve enforcement missing rule con cid rmed business domain specialist added alloy model new business rule covering business case br1 new order created customer order deliv ered unpaid orders customer order history business rule represented alloy fig business rule explicit context order creation model thus predicate predicate customermustpaydeliveredordersbeforeneworder claim orders customer history delivered paid predicate called ordercreation predicate via ordercreationbr combination three predicates claim creation new order customer past orders already delivered paid fig br1 new order created customer order delivered unpaid orders customer order history result simulating model observe cases order created unpaid delivered orders exist given customer however check validity business rule strategic customer running assertion fig 4e receive result valid counterexamples show cases rule respected fig example br4 see new order created strategic customer meaning fig 4e valid strategic customers crucial importance gr pass new rule able order even unpaid orders thus introducing new rule created con cid ict existing rules overspeci cid ed model therefore need relax rules order resolve current con cid ict gr de cid nes separate rules regular strategic customers br7 regular customers new order accepted unpaid orders order history simulation driven approach business rules discovery fig example new order created strategic customers unpaid past orders replace rules br4 br6 two new rules rules alloy shown fig br7 claims order created regular customer past orders must paid br8 claims order created strategic customer maximum unpaid orders customer fig br7 regular customers must pay past orders placing new order check assertion fig 4e get counterexamples showing rule valid run order creation process obtain instances showing strategic customer order even unpaid orders history fig option br1 regular customers con cid rmed order must delivered upon payment received br2 large accounts con cid rmed order must delivered br3 large accounts con cid rmed order must even tually payed br1000045 large accounts must always able submit order simulation driven approach business rules discovery fig strategic customer make new order unpaid orders interactive discovery validation business rules section explain general process interactive automated discovery business rules alloy analyzer basic steps simulation driven business rule discovery approach br speci cid cation natural language business analyst speci cid es rules natural language initial business rules elicited different roles company often set rules covering implicit rules following steps help detect new business rules speci cid cation formal language designer translates business rules natural language alloy declara tive language also specify whole model alloy including data structure behavior detect business rule cid uence com pany behavior business rules alloy represented alloy facts predicates assertions depending type business rule explained section way designer power express different scope business rules useful simulation analysis designer simulate model initial business rules using alloy alyzer tool objective model simulation twofold cid rst check model consistency absence contradictory constraints business rules simulation driven approach business rules discovery second test random set model instances generated alloy alyzer different kind anomalies underspeci cid cation anomaly appears unwanted unexpected behavior identi cid ed analyst con cid rm correct instances detect problem second case explicit rule need speci cid ed cluster unwanted unexpected instances adding new br business analyst speci cid es new business rule natural language designer translates business rule alloy language simulate model new rule potentially con cid ict existing one add unnecessary constraints model overspecify model business analyst con cid rm case business rules adapted adjusting model new br case overspeci cid cation appears rule replaced considering different cases apply business analyst gives proposition changes business rules designer translates relaxed business rules alloy simulate model con cid rm business analyst everything correct steps repeated anomalies detected business analyst con cid rms system behaves expectations conclusion presented interactive approach business rule discovery based simulations alloy analyzer tool business rules represented al loy facts predicates assertions depending type business rule ne cessity possibility obligation restriction maybe put categories al lowance obligation restriction possibility maybe necessity allowance enables de cid ne precise scope busi ness rule apply whole model given context always implied model business analyst de cid nes initial business rules natural language designer translates alloy formal language designer also speci cid es model company model initial business rules simulated using alloy analyzer tool simulation designer checks business rules consistent checks together business alyst anomalies appear behavior case appear business analyst suggest new rules natural language designer translates formal language finally model adjusted new rule since inconsistencies could appear existing new business rule simulation driven approach business rules discovery way business analyst interactively analyze existing business rules discover new implicit business rules next step approach make language business rules speci cid cation closer business analyst one way use attempto controlled english ace controlled natural language e rich subset standard english designed serve knowledge representation language way could allow analyst express texts precisely terms respective application domain perhaps avoid designer intermediate step business rule discovery",
  "2013-BBRWb": "introduction considerable gap business technical worlds often referred business alignment problem represents serious issue imple menting co evolution business technical specification service service design development therefore explore invariants linking mechanism business technical service perspectives propose method agile service specification extends systemic enterprise architecture method seam seam models used business technical specialists visually describe enterprise system structure services provides propose method allows us sim ulate validate visual service specifications defined seam defines five design activities design simulation simulation based testing analysis anomaly resolution validation refinement performed sequentially biljana baji cid c bizumi cid c irina rychkova alain wegmann iteratively forming design spiral similarly within spiral ini tial service model evolves response changing business requirements also makes requirements evolve revealing flaws inconsistencies way partial specification validated verified improved illustrate method example order creation service specified g´en´erale ressorts sa swiss manufacturer watch springs example based consulting project conducted company seam model order creation transformation model alloy remains beyond scope article paper explores power alloy beyond technical domain b investigates invariants used linking mechanism business technical service perspectives improved business alignment remainder paper organized follows section explain motivation discuss related works section present alloy language discusses role invariants service design section introduce method service design section illustrate method case study section present conclusions motivation related work since first methods dealing enterprise modeling em emerged 1970s multitude enterprise modeling approaches developed e3value provides ontology conceptualize visualize ebusiness idea able analysis profitability assessment ebusiness model parties involved framework focuses modeling prop erties goals beliefs abilities commitments modeling strategic relationships enterprise knowledge development ekd multi model participatory em approach involves model conceptual structures interlinked sub models goals actors business rules business processes requirements stated business motivation model bmm models several concepts goals processes technologies methodology focuses business processes dynamic essential modeling organiza tions demo models designs engineers organizations seam integrates main principles well known em methods proposing three different types models sar business value different stakeholders similar e3value goal belief goals beliefs stakeholders relation similar behavior model services processes implement similar demo work extend seam spiral design process allows simulation validation seam models early stage design way examples partial specification could help designer realize constraints missing model uses similar approach formal tropos model checking models defined however focuses agent properties goals beliefs abilities role invariants invariants used business technical world repre sent check constraints model business rules process invariants related beliefs etc requirements engineering kaos methodology uses invariants object specification domain properties specification indirectly goal specification work use invariants pivotal concept improving business alignment supporting co evolution technical business specifications method based alloy lightweight formal specification language large1 area alloy application best knowledge cur rent alloy applications domain em target technical specialists paper present agile em method alloy diagrams serve means communicating evaluating business technical design decisions within approach role alloy diagrams two fold provide instant visual feedback designer suggest new constraints added represent design artifacts validation drive improvements technical business specifications like uml bpmn foundations alloy alloy declarative specification language expressing complex structural constraints behavior based first order logic alloy analyzer tool automated analysis models writ ten alloy language given logical formula data structure defines value domain formula alloy analyzer decides whether formula satisfiable mechanically alloy analyzer tries find model instance binding variables values making formula true alloy reusable expressions e functions constraints e facts predi cates assertions used reason data structures fact model invariant constraint holds permanently predicate constraint holds specific context specific part model seen contextual invariant assertion property designer believes implied model check deduced permanent contextual constraints design process use signatures facts predicates first partial refined service specification use assertions order validate desired properties model role invariants computer science invariant condition must hold execu tion program along lines design process invariant defines http alloy mit edu alloy applications html biljana baji cid c bizumi cid c irina rychkova alain wegmann condition must hold model instances result simulation define role invariants design process follows first imple ment constraints required business specification example order placed existing parts second enable designer efficiently manage model complexity assuming proper ties always hold execution example simplify model let consider part id provided customer always correct e exists database roles correspond business technical perspective therefore approach use linking mechanism two worlds restrict model prohibiting invalid instances identified simulation necessarily covered explicit business specification service design spiral introduce five activities design approach performed sequentially iteratively forming loops spiral shown fig 1a model design define partial model service alloy specify data structures initial predicate make initial assumptions model defining model invariants invariants replace properties required business specification used control model complexity model simulation simulate partial model using alloy analyzer tool technically partial model written alloy represents logical formula model simulation means searching model instance satisfies formula exists indicates formula consistent e contradictory constraints specified design process first check model consistency test corresponds requirements anomalies studying random set model instances generated alloy analyzer model analysis anomaly resolution two types anomalies observed anomalies due specification anomalies due overspecification underspeci cid cation means model instances prohibited specification still appear simulation case restrict model adding new invariants overspeci cid cation means opposite expected model instances observed simulation modeler relax invariant e replace alloy fact x always holds alloy predicate x holds activated specific parts model role invariants model validation make assertions model order test desirable properties business rules alloy analyzer validates assertion searching counterexample model instance assertion hold counterexample found assertion valid within given value domain opposite case model revised model cid nement activity implement new business requirements extend par tial model introduce new elements data structure specify new constraints refinement increases model complexity level de tails bringing closer business specification complete design process illustrated fig 1a service design process spiral b design process order creation service fig spiral design process order creation design case study section present example using method enterprise design involves technical business expert working together define complete service specification maintaining business alignment implement service design process spiral step step figure 1b case study g cid en cid erale ressorts g´en´erale ressorts sa market leader watch barrel springs first class manufacturer tension springs coil springs shaped springs industry biljana baji cid c bizumi cid c irina rychkova alain wegmann components illustrate process applying design order creation service g´en´erale ressorts sa gr order creation part order processing followed order delivery account ing order cash cycle overview order creation service company gets request customer orderrequest customer name address partid part info2 manufacturing specific watch component identified id par tid company agent orderentryperson identifies customer part manufactured entering customer name partid enterprise information system eis process terminates creation confirmation customer order ordercon cid rmed eis specify following business rules process – br1 created order must include complete part specification used order fulfillment complete customer details used product delivery – br2 order confirmed customer exists system – br3 order placed existing parts – br4 company guarantee faulty delivery order creation model design data structure order creation service modeled using alloy signatures f abstract sig gr f orderconfirmedset set order one sig gr pre extends gr orderdeliveredset set order orderrequest one orderrequest g orderpaidset set order fg partset set part one sig gr post extends gr customerset set customer g alloy signatures sig abstract concrete explicit cardi nalities e g one orderrequest object treated service time contain one multiple fields classes attributes object oriented oo languages also define additional constraints initial data structure invariants express behavior terms state transition define pre state describes state system service performed post state describes condition must hold system upon service termination service result note following declarative modeling paradigm specify service change system state model order creation service corresponding predicate alloy put italic names appear alloy models role invariants gr post f pred ordercreation agr pre one gr pre agr post one one acustomer customer one apart part one aorderconfirmed orderconfirmed apart findpartbypartid agr pre orderrequest requestedpartid agr pre partset acustomer findcustomerbyname agr pre orderrequest name agr pre customerset aorderconfirmed createorderconfirmed apart acustomer agr post orderconfirmed agr post orderconfirmedset aorderconfirmed agr pre orderconfirmedsetg aorderconfirmed predicate shows transition gr pre gr post states states indicated predicate parameters line predicate vari ables declared line customer part found set lines order created line added set line described case study order creation model simulation anomaly resolution attempt simulate model alloy analyzer check model consistency test random set model instances check overspec ification underspecification anomalies example missing customer anomaly fig illustrates anomaly model behavior pre state customer0 post state customer1 show exactly one execution service order creation expect customerset partset remain pre post state however generated instance suggests opposite note inputs outputs diagrams e g orderrequest dercon cid rmed fig depicted black rectangles customer data cus tomer name address part data part partid partinfo depicted parallelograms diamonds respectively depict pre state prior order creation service execution post state upon service termination gr company houses corresponding labels gr pre gr post fig anomaly due underspecification missing customer anomaly indicates constraints prevent cus tomer set part set changing service execution specified thus anomaly due underspeci cid ed model biljana baji cid c bizumi cid c irina rychkova alain wegmann fact declarative specification principles oblige us explicitly state elements must remain unchanged state transition therefore need add invariant states customerset post state customerset pre state applies part set customersetsamef gr pre customersetg fact gr post customerset order validate resolved missing customer anomaly create alloy assertion claims order creation executions e model instances customer set remain pre post states gr checkf customerprepostsame agr pre gr pre agr post gr post agr post customerset agr pre customersetg ordercreation agr pre agr post checking assertion find counterexamples executing check customerprepostsame solver sat4j bitwidth maxseq skolemdepth symmetry vars primary vars clauses 32ms counterexample found assertion may valid 12ms confirms assertion validity given model scope repeat simulation anomalies resolved design loop fig order creation model validation anomaly resolution check validity business rules section using alloy assertions show example br4 validation faulty delivery example delivery wrong address anomaly ordercon cid rmed used delivery ensure faulty deliveries br4 check customer part data confirmed order exactly requested order assertion orderconfirmedcorrect defined validate br f orderconfirmedcorrect check agr pre gr pre agr post gr post oreq orderrequest ocurrent currentorderconfirmed ordercreation agr pre agr post ocurrent occustomer name oreq name ocurrent occustomer address oreq address ocurrent ocpart partinfo oreq partinfo g ocurrent ocpart partid oreq requestedpartid run assertion obtain counterexamples fig shows example incorrect delivery order created correct customer name delivery address associated name correspond address provided orderrequest therefore part delivered wrong address anomaly observed due model underspeci cid cation order resolve detected anomaly add new invariant nooldad dress states customer system name given requested order old invalid address vice versa nooldaddressfall c address orderrequest address c name orderrequest nameg fact c customer check assertion orderconfirmedcorrect get result counterexample found assertion may valid meaning assertion holds given domain orders delivered correct customers correct address role invariants fig anomaly due underspecification delivery wrong address continue debugging model running simulations checking introduced new unwilling behavior repeat process brs validating brs finding anomalies conclude designed model meets business requirements given level details order creation model cid nement refinement add new data structures behavior model resolve added anomalies design loop next step check brs still hold repeating br validation loop brs hold refinement specifies new iteration spiral fig designer continue refining model desired level detail achieved design process propose ensure upon iteration model remains consistent anomalies refinement order creation service considered paper resulting design process order creation fig 1b represents instance spiral process illustrated fig 1a conclusion presented lightweight interactive visual method service design supports co evolution technical business service specifications enterprise particular explored power alloy formal method beyond technical domain used toolbox technical business specialists evolution service model alloy seen iterative introduc tion modification logical invariants invariants represent assumptions business technical properties modeled service consequently play role linking mechanism business technical perspectives biljana baji cid c bizumi cid c irina rychkova alain wegmann work illustrated alloy used design environment technical business specialists expect alloy diagrams interpreted analyzed designers business analysts specialists trace observed scenarios back specification improve ment automated interpretation traceability scenarios generated alloy specifications business requirements business rules etc subject future research",
  "2013-KPR": "introduction davenport defines case management process process predefined repeatable instead depends evolving circumstances decisions case regarding particular situation case management processes scenarios form dynamically run time modeled managed analyzed following traditional bpm approaches idea paper builds recent work define two forms 1st agility leading dynamic context aware business process form process agility defined capacity handle unpredictable sequences system events results dynamically defined order process activity invocations 2nd selecting right action right moment form process agility consists respect current situation define ability monitor process context manage dynamically select alter execution scenario accordingly argue second form process agility essential efficient case management agility depends heavily capability supporting systems deal systematically dynamic process context unfortunately current approaches lack appropriate formalism mechanisms context management paper explore role context information agile case management propose extensible meta model architecture representing capturing exploring information dynamic systematic way illustrate findings example crisis management process defined emergency plan specialized floods epsf hauts de seine demey h panetto eds otm workshops lncs pp 144–154 © springer verlag berlin heidelberg dynamic context modeling agile case management paper organized follows section discuss adaptive case management paradigm opposed traditional bpm introduce example section define dynamic context model illustrate model instantiated crisis management process process agility particular focus dynamic aspect context modeling discuss added value context model case management section compare proposals related works concluding section case management process adaptive case management case management process modeling cmpm request proposal released omg expresses practitioners demand case management solutions coordinative goal oriented discipline omg defines case management handle cases opening closure interactively persons involved subject case case manager case team case management processes licensing permitting cmp multiple applications including government insurance application claim processing insurance patient care medical diagnosis health care main resource cmp knowledge obtained result communication multiple actors users knowledge used making decisions case handling business process management bpm adaptive case management acm demonstrate conceptually different views system design process centered view adapted bpm implies data emerges evolves within process according predefined control flow fig similarly product evolving conveyor belt bpm – activity centered view b acm – data – centered view processes processes fig bpm vs acm systems one major challenges identified practitioners researchers acm field attempts deal case management process industry way regular business process e applying process centered view work implement data centered view fig b proposed kirsch pinheiro rychkova adaptive case management acm practitioners view implies process shall adapted run time according evolution case circumstances case related data view suits nondeterministic knowledge intensive processes like case management processes case management process example crisis management case floods crisis management process typical example case management demands interaction multiple otherwise independent actors e g government fire brigades police public transport healthcare electricity water supplying services road maintenance etc process driven evolved information case rather predefined sequence activities thus suitable data centered paradigm fig b example consider crisis management process triggered case flood flood hauts de seine department france overflow water submerges land normally dry happening example due increase flow river provoked significant rainfalls risk major flood main natural risk ile de france region particularly paris1 winter period november march cities like confronted risk case flood important damages expected affecting thousand people hauts de seine department risk flood considered particularly important since epsf emergency plan specialized floods triggered immediately water level rises 5m austerlitz bridge keep rising according forecasts due high dynamic nature process handled workflow based approach indeed activities crisis management necessarily predictable depend numerous factors dynamically change list factors watercourse levels weather conditions forecasts electrical outages traffic conditions actors location equipment availability etc example depending water level crisis management process may require specific traffic control deviation partial complete disabling public transport lines sncf paris rive gauche rer c ratp blocking highways principal roads a86 a14 n14 etc towns affected flood may require regular external drinking water supply severe cases evacuation temporary accommodation people healthcare childcare facilities moreover crisis management shall assured condition possible overload instabilities telecommunication network inaccessible blocked due heavy traffic roads etc example traffic jam put risk evacuation people deployment emergency services situations require alternative scenarios traffic deviation preparation evacuation air etc context dynamically changing information defines crisis management process see http cartorisque prim net dpt ip html dynamic context modeling agile case management formally context defined information used characterize situation entity person place object considered relevant interaction user application claim capacity timely observe measure context information systematic way order select assemble process activities run time indispensible adaptive case management example crisis management particular thus adapt data centered paradigm fig b contextual data including core next section introduce concept dynamic context modeling illustrate concept example crisis management process presented dynamic context modeling context meta model way context information exploited business process flexibility depends information observed represented according najar et al formalism chosen representing context model determines reasoning methods used perform system adaptation observed context context model ensures definition independent adaptation processes ii isolates process context acquiring techniques applies context aware business process case management claim process context information acquired modeled formally analyzed run time order adapt process execution ensure flexibility several context models proposed literature even vary adopted formalism key values object oriented ontologies etc represented elements generalize common terms first context models consider given subject observed typically user et al et al instance reichle najar consider given entity user device etc observed models subject implicit since user considered main observed thing subject plays central role context modeling pointed since precisely context subject currently observed everything observe et al related subject around several elements considered reichle et al call observed elements scope kirsch pinheiro call context elements cases corresponds really observe subject location user available memory device etc values observing context elements obtain corresponding status given moment probably evolve time instance observing context element subject values location user may obtain latitude longitude corresponding current user location besides models et al associate meta data describing values instance reichle propose e g describe representation used observed value location et described using latitude longitude pair postal address vanrompay al consider representing meta data certainty measure indicating reliability observed values kirsch pinheiro rychkova based common terms identified literature define common meta model presented fig meta model consider context set context elements subject observed given e g actor device resource etc subject associated multiple context elements values location status etc context element observe dynamically change described meta data proposed meta model must instantiated appropriate model according application domain means transpose affine elements meta model precise model model use different formalisms ontologies appear interesting represent context elements provide ways semantically describe elements relationships well powerful reasoning et al ontological mechanisms notably inference rules according bettini reasoning executed inferring new context information based defined classes properties individual objects retrieved sensors context sources meta model ontology model form complementary approach allowing better understanding context modeling fig context meta model considering context set context elements thus subject context elements semantically described using ontologies choosing elements represent depends application domain case activity domain related case management instance context ontology crisis management process describe subjects different teams actors roles context elements location availability given equipment etc based context ontology propose events represent logical constraints context concepts observed values formalize context subject time follows context element ce element ce ce represents observed value context element subject crisis management monitor different actors subjects involved process e g police brigades fire brigades evacuation teams etc main parameters context elements observe location resources available context team1 element team1 location element team1 vehicle element team1 agent element team1 firstaidkit dynamic context modeling agile case management along lines observe weather conditions subject temperature humidity rainfall prevision context elements general traffic conditions subject current deviations traffic jams context elements main healthcare childcare facilities subjects heating water electricity supply accessibility roads contextual elements indicating need evacuation etc marrying dynamic context model agile process model defining managing exhaustive context model along process model seem challenging task would potentially raise complexity compromise usability overall model appropriate modeling formalism however complexity substantially reduced model business process finite state machine fsm state represents process situation given time state transitions define possible process scenarios triggering events specify underlying process semantics e conditions state transitions fig illustrates fsm example process states may evolve flood vigilance corresponds 5m water level austerlitz bridge flood alert 2m execution emergency plan 5m assume although documented federal alert state triggered case emergency plan execution insufficient also time system get back normal state fsm abstract representation process detailed refining states adding component state machines showing separate case related elements handled road blocks evacuation process etc described according epsf process state various activities must executed order protect people goods reduce consequences flood e g public transport suppression preparation executing evacuation road blocking provisioning water electricity etc due natural evolution crisis situation e g water level keeps rising conditions e g enough people equipment electricity outage road access etc execution activities becomes impossible alternative sets actions need executed order fulfill crisis management objectives subject contextual process state fig defined set elements context events observe emergent conditions modeled expressed using logical conditions observed values contextual elements example following condition triggers hospital evacuation element hospital heating order element hospital electricity order element hospital access available thus context events expressed referring elements context ontology way event definition take advantage reasoning capabilities offered ontologies besides context query language allows expression rich context conditions particularly important since context information naturally imprecise often incomplete process states events defined terms context elements acceptable interval sets values kirsch pinheiro aand rychkova therefore context inforrmation plays following roles trigger process state transitions iii part process state definition iii iis boundary condition execcution one another process activity fig fsm crisis management process case flood towards context aaware case management present architeecture cape – context aware agile business proccess engine – defines foollowing elements agile process management fig dynamic context moonitor activity repository process specification navigation managerr activity reposittory provides set activities necessaarily executed tthe process navigation manager provides conteext activities based guidance offering ann appropriate activity list alternative execute repositoory context monitor charge observving context elements pprocess execution order enable context baased plugins guiding similar recognizes context elements using feed inforrmation given context element subject eeach monitor dynamic plugin observes given context element keeps context monitor updaated concerning changes obseerved context values values dynamically observedd context plugins define ccurrent position process state space process definition consider context elemeents support agility observed given proceess might vary process executions ressult new context elements observed new respective contextual events dynamically added mmodel practice contexxt monitor dynamically extended adding nnew plugins sensors obserrving new context elements subjects fig shows cape model crisiss management process illustrates dynamic conttext management new sensorr measuring rainfall level added new conttext plugin left side figure extending process definition nnew events possibly states triggering conditions dynamic context modeling agile case management fig context monitor organization cape architecture related work notion context totally new bpm field researches already pointed use context information process definition roseman et al instance consider external context elements may influence business process e g weather influencing call center process insurance company propose incorporate elements business process modeling saidini et al also consider context business process definition particularly roles played actor assume role affectation influenced context information unfortunately bpm field context information always modeled appropriately quite often works lack formalisms representing context concepts properly managing besides context models present general enough consider limited set context information focus manly workflow based process needs indeed way context information exploited business process flexibility depends information observed represented meta model proposed allows dynamic modeling context information supplying high level formalization necessary process flexibility identifying context information affect business process execution remains problematic similar consider context information concentric levels internal context directly related process actors activities till external environment context sense context seen recursive notion local context referencing global one concentric kirsch pinheiro rychkova recursive vision context information leads us represent internal process events external context events indistinctly way context information becomes naturally part process definition considered multiple levels nevertheless worth noting enumerate aspects situations important change situation situation terms impossible exhaustively describe context information needed general way model extensibility becomes key element successfully representing managing context information extensibility depends context model capabilities extended new concepts also capability observing acquiring new concepts execution time even works considered context information business process definition design time rarely consider context information run time process execution often architecture proposed order dynamically acquire take account context information process execution cape architecture proposes overcome issue adopting extensible plugin approach new context elements easily observed connecting appropriate context plugin finally context aware business process necessarily means agile business process although context information may bring interesting contribution process flexibility guarantee process able react unexpected situations indeed works still describes process predefined explicit sequence activities making difficult respond unpredictable situations argue order support process agility necessary think business process differently terms events states instead terms activities conclusion crisis management process example case management process unpredictable scenarios activities chosen according actors expertise previous experiences multiple input events moving situation state another typical example process handled satisfactory way using traditional workflow based approaches dynamic approach necessary better efficiency especially situation time matters complicated decision making may cost even lives automated guidance becomes important approach represents process fsm defined multiple states transition events representation allows integrating contextual events contextual parameters process definition process events contextual events handled uniformly order provide automated guidance prescribe suggest activity suits best respect process objectives paper went one step forward modeling context information business process proposed context meta model allowing high level formalization context information combined powerful query ontology based reasoning mechanisms process flexibility dynamic context modeling agile case management currently specifying first implementation cape architecture including context monitor elements first prototype expected soon next step research definition implementation techniques automated user guidance formal concept analysis fca galois lattices one techniques consider illustrate galois lattices used classify organize case related information providing user suggestions activity execute particular situation along lines use galois lattices context analysis provides flexible guidance end users run time supports expertise required process handling",
  "2013-R": "introduction consider following processes crime investigation mortgage processing patience care design new house completely different objective one important characteristic common unpredictability processes unfold according particular case emerging knowledge case rather according predefined scenario particular importance case management processes cmp recognized since early 90x however case management processes remain largely pen paper efficient case management industry hampered attempts deal case management process way regular business process development specific approaches cmp modeling analysis therefore important endeavor improve case management practice lamport defines process sequence events occurring system event triggered internal external action according definition business process seen sequence events triggered activities internal external business process actors existing methods business process modeling analysis e g bpmn bpel bundle follow imperative principles implying order events occurring process execution predefined case management processes however true work shift traditional modeling paradigm exploit declarative principles cmp modeling analysis model cmp state transition system allows us handle process events whose order occurrence undetermined objective paper provide mathematical model comprehensible formalism reasoning meaning semantics case management process particular focus finite state machine fsm abstract model used provide operational semantics cmp b cmp model formally specified alloy analyzed alloy analyzer c results formal analysis interpreted used business specialists process improvement illustrate proposed operational semantics example mortgage approval process first define mortgage approval fsm specify states mortgage case transitions states state transitions triggered corresponding mortgage processing activities e g application completion validation applicant information property appraisal etc order model however remains undetermined fsm describes mortgage case application file evolves submission approval rejection state state transitions defined formalize semantics fsm alloy use alloy analyzer tool model simulation validation model simulation provides us instant visual feedback form diagrams capturing fsm execution scenarios use alloy model checking specific reasoning model properties example validate cmp model meets business requirements alloy specification language successfully applied design verification software hardware systems work position alloy alloy analyzer toolbox technical business specialists along uml bpmn conventional diagrams alloy diagrams represent design artifacts studied referred serve mean communicating evaluating business technical design decisions model validity given level detail checked model refined iterative approach allows us efficiently manage model complexity operational semantics defined work first step using formal methods paves road automated design validation verification cmp reminder paper organized follows section ii provide definition case management process discuss challenges related case management introduce example mortgage approval process section iii introduce finite state machine fsm abstraction cmp modeling first provide mathematical model fsm defined plotkin apply model example section iv formalize fsm based specification mortgage approval process alloy section v illustrate cmp model simulated analyzed eventually improved using alloy analyzer tool show scenarios mortgage approval generated alloy analyzer demonstrate business properties mortgage approval process formally validated section vi discuss related works section vii presents conclusions ii case management process adaptive case management davenport defines case management process process predefined repeatable instead depends evolving circumstances decisions regarding particular situation case discusses need specific approaches handle processes case management process modeling cmpm request proposal released omg september expresses practitioners demand case management solutions omg defines case management coordinative goal oriented discipline handle cases opening closure interactively persons involved subject case case manager case team case management processes cmp multiple applications including licensing permitting government insurance application claim processing insurance patient care medical diagnosis health care mortgage processing banking main resource cmp knowledge obtained result communication multiple actors users knowledge used making decisions case handling adaptive case management acm vs business process management bpm business process management bpm adaptive case management acm demonstrate conceptually different views system design process centered view adapted business process management bpm implies data emerges evolves within process according predefined control flow fig 1a similarly product evolving conveyor belt view suits predictable highly repeatable processes one major challenges identified practitioners researchers acm field attempts deal case management process industry way regular business process process centered view b data centered view fig bpm vs acm systems e applying process centered view work implement data centered view fig 1b proposed adaptive case management acm practitioners view implies process shall adapted run time according evolution case circumstances case related data view suits nondeterministic knowledge intensive processes like case management processes body knowledge knowledge intensive processes acm extensively developed practitioners published internet blogs see http www adaptivecase management com http www column2 com many others group researchers ibm proposes approach incorporates process data centered perspectives based concept business artifacts recently complemented academical research gave rise series publications etc following sections define operational semantics case management process illustrate semantics example mortgage approval process b example mortgage approval process mortgage loan buying house mortgage approval process typical example case management process objective mortgage approval process come right decision applicants request provide loan reject application order make decision potential money lender e g bank must ensure applicant credible able pay loan back ii amount loan justified respect real cost property provide detailed description mortgage approval process defined different financial institutions usa work however model simplified version process summarize main steps business rules defined mortgage approval process list 1in usa bank remain owner property mortgage fully paid back thus bank shall validate property question costs least much seller requests mortgage approval • applicant submits mortgage application requests loan • bank process one application given applicant time • application provide list documents including applicant name address employment information internal revenue service irs forms recent pay stubs medical certificate information property buy2 etc exact list may vary depending financial institution particular situation applicant • application revision starts validation applicant credibility e employment information must complete information property buy provided later process • information property buy submitted lender sends appraisal agent evaluate appraise property negative appraisal result sufficient condition mortgage application rejection • preapproval intermediate status application given upon confirmation applicant credibility • proof applicant credibility positive appraisal results necessary conditions application approval • elements application e g medical certificate family situation etc may trigger specific loan approval conditions e g demand supplementary insurance affect loan type duration follows description process able handle general unpredictable sequences events e submission application elements receiving evaluation results etc follow predefined scenario iii case management process abstract model operational semantics theoretical computer science uses concept operational semantics order define meaning computer program operational semantics explains meaning program terms hypothetical computer performs set actions constitute elaboration program work define meaning mortgage approval process modeling nondeterministic finite state machine formalizing operational semantics alloy specification language finite state machine finite state machine fsm finite automaton model computation specifies machine one state time change state perform state transition result triggering event condition fsm 2by property information understand data would serve property appraisal defined finite set states set triggering conditions transitions mathematical model fsm defined quintuple ⟨q σ δ q f ⟩ q finite set states σ finite set triggering events conditions input alphabet δ q × σ → p q state transition relation q ∈ q initial state f ⊂ q set final states one distinguish deterministic nondeterministic fsm state triggering event deterministic fsm specifies one next state whereas nondeterministic fsm specify multiple possible next states using mathematical model deterministic fsm write state transition relation δ q × σ → q function returns single state nondeterministic fsm returns set states difficult prove nondeterministic finite automata nfa equivalent e translated deterministic finite automata dfa translation results complex model increased number states transitions therefore many cases including example use nondeterministic model justified application case management process case management process modeled finite state machine fsm state represents status case e g case related documents evidences examination results reports decisions etc given moment time fsm triggering events represent events occurring case e g document submitted results arrived decision made manager request canceled etc resulting activities performed human agents systems involved case fsm transitions associated one multiple activities specific outcomes triggering events possible case management outcomes accepted rejected claim recovered patient etc associated fsm set final states next section model mortgage approval process finite state machine express operational semantics alloy specification language b fsm mortgage approval process mortgage approval process manages applicant case decision mortgage application made current state case represented current state submitted mortgage application model evolution mortgage application state time fsm illustrated fig define following abstract states mortgage application q app incomplete complete p reapproved approved rejected state transitions represent activities carried applicant ex complete application bank ex revise fig fsm mortgage application handling f sm app fig fsm employment info handling f sm empl application activities shown transition labels fig resulting fsm nondeterministic transition define one resulting state example complete application completeapp activity fig either trigger application transition incomplete complete state result transition keeping application incomplete reflects real nature bureaucratic procedure behind based process description current state mortgage application depends states elements constituting application applicant employment information property information define abstract states elements follows q empinfo undefined defined invalid v alid q propinfo notf ound f ound appraisedok appraisedko objective design process mortgage approval adapt evolving circumstances regarding concrete applicant case respecting business rules organization ensure adaptability define model mortgage application elements e employment info property info emerge evolve independently predefined order e g due modification validation appraisal example model evolution employment info property info separate fsms fig transitions machines labeled names corresponding activities fsms also nondeterministic state mortgage approval process considered combination states three fsm defined fig guarantee model respect business rules defined organization bank express rules fig fsm property info handling f sm prop fig fsm mortgage approval process combination f sm app f sm empl f sm prop dependencies state machines red dashed lines fig specify machines work together introduce alloy operational semantics mortgage approval process iv alloy operational semantics mortgage approval process alloy declarative specification language developed software design group mit alloy language expressing complex structural constraints behavior based first order logic alloy analyzer tool automated analysis models written alloy specification language given logical formula data structure defines value domain formula alloy analyzer decides whether formula satisfiable mechanically alloy analyzer attempts find model instance binding variables values makes formula true specification cmp alloy divided four steps follows • definition data structure step case elements structure relations formalized alloy signatures sig constraints • definition fsm states step abstract states case element identified states later constitute component fsms • definition triggering conditions conditions trigger state transition fsm identified formalized alloy predicates • fsm assembling step component fsms specified case element assembled composite fsm cmp formalize relations fsms alloy predicates fsm based operational semantics provides meaning cmp model allows formal analysis carried model reminder section formalize example mortgage approval process using alloy specification language section demonstrate formal specification analyzed using formal model checking techniques definition data structure data structures alloy represented signatures labeled keyword sig alloy signatures abstract concrete explicit cardinalities e one set contain one multiple fields field seen analogy class attribute oo languages alloy specification language based set theory set theoretical perspective alloy signature defines set element given kind whereas fields define relations another sets signatures define employment info property info data objects alloy signatures extending generic obj data type sig employmentinfo extends obj sig propertyinfo extends obj level detail precise structure elements elaborated refinement needed define application signature specifying relations mortgage application employment information property information sig application extends obj information house buy property one propertyinfo information applicant employment employment one employmentinfo b definition fsm states based set theoretical perspective model state data object set objects exhibiting properties example state complete defines set mortgage applications complete sig state undef def valid invalid set employmentinfo incomplete complete set application preapproved approved rejected set application found notfound appraisedok appraisedko set propertyinfo accordingly model state transition removing element one set adding another example complete complete e incomplete incomplete e data structure state defines state space fsm illustrated fig finite state machine models mortgage approval case whole elaborate fsms mortgage application components introducing constraints states possible state transitions employmentinfo undef def undef def none valid invalid none valid invalid undef none example illustrates constraints defined f sm empl state machine first two statements specify employment info element either defined undefined states time third statement specifies element valid invalid last statement implements business constraint derived process description section ii b stands employment info validated eventually become valid invalid defined business properties mortgage approval process also modeled alloy constraints uniqueness employment info fact a1 a2 application a1 employment a2 employment a1 a2 expression stands two applications currently processed bank employment info paraphrases implements business rule process description bank process one application given applicant time c definition triggering conditions formalize conditions trigger state transitions f sm app f sm empl f sm prop shown fig alloy predicates triggering conditions directly related internal external activities outcomes example one activity trigger different transitions depending outcome e g completeapp converse true state transition mortgage approval triggered one activity example specify triggering condition f sm empl redefineempl activity submission new information employment applicant corresponding alloy predicate defined two parameters current state st sate mortgage case activity carried next state st state mortgage case activity terminated pred redefineempl st st state e st undef application employment st def st def e st undef st undef e application employment st def fsm mathematical model defines state transition relation p q relation specified predicate body example states arbitrary instances e employment info currently undefined applications e belong set undef current state st defined upon redefineempl termination e moved set undef set def next state st proceed formalizing state transitions fsms shown fig results following alloy predicates validateemployment searchproperty appraiseproperty completeapp approveapp rejectapp preapproveapp complete alloy model please contact author paper specify final states fsms introducing following constraints fact finalvalid state ord next e employmentinfo e valid e valid fact finalapprko state ord next p propertyinfo p appraisedko p appraisedko example states valid appraisedko final states corresponding fsms see also fig alloy expressions red follows employment info validated remains valid property got negative appraisal remains appraised constraints derived business specification mortgage approval section ii b new rule introduced negatively appraised property reappraised dashed transitions fig finalapprko invariant shall removed assembling component fsms mortgage approval fsm component fsms specified assemble mortgage approval fsm illustrated fig specifying relations state transitions alloy invariant run represents assembly seen global state transition function mortgage approval process definition state transitions fact run state ord next completeapp incomplete approved approved reviseapp complete approved rejected redefineempl searchproperty expression specifies two groups activities carried mortgage approval internal activities complete application revise application external activities redefine employment search property corresponding predicates related inclusive operation allowing concurrent state transitions mortgage approval perspective means process activities executed order essential property cmp run expression uses two variables represent respectively current next states mortgage approval fsm ord next predefined function alloy specifies next state function current state sequence states generated alloy analyzer following definition f sm app completeapp represents activity application completion specifies triggering condition applications currently state incomplete similarly reviseapp applicable complete mortgage applications final decision approved rejected made yet reviseapp predicate specifies revision activity details pred reviseapp set application st st state a1 preapproveapp a1 st st st valid st valid st invalid st invalid st appraisedok st appraisedok st appraisedko st appraisedko a2 approveapp a2 st st st valid st valid st invalid st invalid st appraisedok st appraisedok st appraisedko st appraisedko a3 rejectapp a3 st st st valid st valid st invalid st invalid st appraisedok st appraisedok st appraisedko st appraisedko a5 validateemployment a5 st st st approved st approved st rejected st rejected st preapproved st preapproved st appraisedok st appraisedok st appraisedko st appraisedko a4 appraiseproperty a4 st st st approved st approved st rejected st rejected st preapproved st preapproved st valid st valid st invalid st invalid predicate red follows applications considered revision following activities carried concurrently applications approved preaproved rejected whereas applications employment validated property appraised explicitly specify preapproveapp approveapp rejectapp affect employment validity appraisal results validateemployment affect application approval status neither appraisal results etc e refinement partial model cmp specified abstract level progressively refine model defining new case elements corresponding states triggering conditions objective step wise refinement evolve partial abstract concrete model process would fully meet business specification according formalism cmp model refinement consists two parts refinement fsm adding states transitions triggering conditions corresponding refinement alloy model extending data structures adding relaxing constraints current definition mortgage approval process model omits lot details besides employment info property info applicant bank records tax forms medical information loan type duration many elements shall handled real mortgage approval idea fig fsm handling medical certificate top fsm handling loan type definition bottom fig fsm refined mortgage approval process iteratively refine model adding new fsms handling elements providing corresponding operational semantics alloy fig show possible refinement scenario according following business specification parts • medical certificate must provided applicant upon completion application file according evaluation results mortgage lender insist supplementary insurance applicant • loan type shall defined preapproval fixed upon application approval refined state machine mortgage approval process illustrated fig choice state space relevance case elements separate topic discussed paper design iteration simulate validate alloy model alloy analyzer main objective step wise refinement maintain model validity increasing complexity v using alloy model checker simulation analysis mortgage approval process model cmp model formalized alloy simulated alloy analyzer simulation simulation alloy analyzer generates set model instances representing random cmp execution scenarios instances shown form diagrams provide modeler visual feedback diagrams examined analyzed technical domain specialists order detect unintended implicit process behavior might indicate errors business specification along uml bpmn conventional diagrams alloy diagrams represent design artifacts serve mean communicating evaluating design decisions mortgage approval process model define predicate example configure run statement execution pred example ord last preapproved ord last approved ord last rejected application run example exactly application state employmentinfo propertyinfo expressions specifies simulation mortgage approval fsm application employment info property info alloy analyzer tool search scenario starts initial state specified initstate invariant follows state transition rules fsm defined run invariant involves exactly states terminates final state applications one states preapproved approved rejected specified example predicate simulation produces model instances meaning model consistent possible scenarios reconfigured different number elements states table shows one instance generated alloy analyzer tool instance projected state order reproduce sequence state transitions generated alloy analyzer scenario illustrates case employment info defined state completing application state revision invalidates employment info state even though property info submitted state application eventually rejected state scenario seems correct respect business specification mortgage approval simulation repeated multiple times producing different scenarios tableii illustrates model instance two applications handled time run example exactly application state employmentinfo propertyinfo table mortgage processing scenario scenario states omitted describes simultaneous processing two mortgage applications one application0 progresses approval whereas another one application1 rejected running simulations analyzing resulting scenarios efficient technique detecting errors manifesting abnormal scenarios model b validation using alloy model checker one check cmp model corresponds business specification specific business properties meets specific requirements express properties validate alloy assertions assertion logical expression asserts certain condition true model alloy analyzer tool examines model instances within configured scope order find least one condition hold e counterexample simulation counterexample alloy diagram shows corresponding process execution scenario diagram examined analyzed technical domain specialists order detect problem source correct specification show several examples model validation improvement using alloy analyzer example conformance business specification assertion expresses correct approval condition interpreted follows applications fact application approved implies corresponding employment info valid corresponding property appraised positive result applapprovalok check st state application st approved employment st valid property st appraisedok single application six states application state employmentinfo propertyinfo check assertion current model alloy analyzer find counterexamples validates corresponding business rule model along lines rejection preapproval business rules validated example valid appraisal scheduling according process description property appraisal scheduled upon submission property information applicant however carrying appraisal applicants employment info already known invalid make sense bank thus want ensure mortgage approval process modeled prohibits appraisal applications invalid employment info business property express alloy assertion propappraisalok check st state st ord next st application property st appraisedok st appraisedko property st appraisedok st appraisedko employment st invalid application state employmentinfo propertyinfo alloy analyzer tool searches instance would illustrate violation condition counterexample generated instance table iii illustrates scenario appraisal done state whereas employment info invalidated previous state state invalidates assertion correct model revise appraiseproperty predicate pred appraiseproperty set application st st state ap p ap property st found st appraisedok st appraisedko table ii mortgage processing scenario table iii counterexample either appraisal results positive st appraisedok st appraisedok p st appraisedko st appraisedko negative st appraisedok st appraisedok st appraisedko st appraisedko p conclusion made st appraisedok st appraisedok st appraisedko st appraisedko add corresponding constraint pred appraiseproperty1 set application st st state ap p ap property st found st appraisedok st appraisedko ap employment st valid assertion validated alloy analyzer two applications processed concurrently wrong appraisal scheduling example valid preapproval status example check application already negatively appraised property shall preapproved mortgage even though employment info got validated preaprovalok check st state st ord next st application st preapproved st preapproved property st appraisedko application state employmentinfo propertyinfo counterexample illustrating violation condition shown table iv revise preapproveapp predicate pred preapproveapp set application state employment valid approved approved rejected rejected preapproved preapproved table iv counterexample add constraint states preapprove application property appraised ko property propertyinfo appraisedko assertion validated alloy analyzer vi related work last decade process flexibility evolution support remains central area interest many researchers among others numerous contributions groups university ulm dadam reichert et al eindhoven university technology van der aalst et al emphasized rigidity work flow based approaches well imperative modeling style well recognized researchers practitioners van der aalst presents case handling paradigm cope business process flexibility differences case handling traditional workflow management discussed metamodel case handling presented similarly approach work limits formalization case handling activities data objects interrelationships state transition diagrams used specify operational semantics case handling systems proposes definition case tuple cd p dom mandatory restricted free condition whereas formalize case management process using general abstraction finite state machine mandatory restricted free relations defined work expressed conditions corresponding alloy specifications works pesic v aalst attempt change paradigm provide automated support modeling analysis loosely structured processes based declarative principles declare framework presented constraint based system uses declarative language grounded temporal logic authors propose deviation mechanisms assure flexibility preserving control process validity correctness verification design time performance analysis run time declare offer features traditional wfmss model development model verification finding errors models automated model execution changing models run time e adaptivity analysis already executed processes decomposition large processes wrong preapproval decision adept workflow management system presented adept enables modifications predefined workflow run time though becoming declarative resulting approach still based imperative principles workflow research reported authors ask question workflow based systems satisfy demands agile enterprise future draw conclusion designing putting operation workflowable processes may neither possible desirable enterprise future process instances represented moving state space process model represented set formal rules describing valid paths possible trajectories approach grounded theory automated control systems implements declarative modeling principles purely non workflow approach process management based business artifacts presented business entities changing move process described information model life cycle model e mortgage case example considered business entity operational semantics guard stage milestone presented semantics explains interactions business artifacts formalized following declarative principles semantics declarative process model based generic process model gpm presented gpm uses states leading element process representation captures process context also reasons process goals similarly approach proposed semantics based notion states set theory formal validation model checking however yet realized approach claim workflow based process driven imperative design methodology proponents imperative specifications validated analyzed controlled assuring stable performance predictable results similar results however assured providing formal semantics unpredictable declarative models eventually applying formal verification approaches two main approaches formal verification model checking theorem proving based logical inference model checking approach verifying requirements design vast class systems including real time embedded safety critical systems model check ers include tools major drawback model checking state explosion problem originates fact real systems size state space grows exponentially number processes second approach automated theorem proving based logical inference within approach fact system specification model satisfies certain property expressed logical formula task prove validity formula deducing set axioms exist underlying logic e g first second higher order logic etc hypotheses made system theorem proving first order logic well developed higher order logics expressive appropriate wider range problems first order logic however automated theorem proving logics complicated spite effectiveness approaches based formal semantics model checking verification using theorem proving rarely used practice due high cost however agree colin snook michael butler formal specification first step using formal methods useful activity even fully formal development process followed vii conclusion theoretical computer science operational semantics explains meaning program terms hypothetical computer performs set actions constitute elaboration program work explained meaning case management processes cmp terms finite state machine fsm performs set actions constitute case handling formalized operational semantics alloy specification language implemented data centered view fig 1b proposed model prescribes control flow lets process unfold according particular case circumstances illustrated findings example mortgage approval process first represented process assembly three independent fsms handling mortgage application applicant employment info property info demonstrated fsms assembly specified alloy analyzed alloy analyzer tool illustrated model simulation model checking alloy analyzer tool drive case management process design advantage simulation possibility get instant visual feedback form diagrams capturing fsm execution scenarios model checking enables specific reasoning model properties examining model instances generated alloy analyzer able reason correctness partial model specifying checking alloy assertions able validate business properties model e g correct conditions application approval preapproval correct appraisal scheduling etc model validity checked given level detail model refined according formalism refinement consists two parts definition new fsms formalization fsms alloy approach allows us efficiently manage model complexity alloy specification language successfully applied various domains including software hardware system specification automatic model completion service testing etc use business domain however rather limited work position alloy alloy analyzer toolbox technical business specialists together uml bpmn diagrams alloy diagrams represent design artifacts studied referred serve mean communicating evaluating business technical design decisions mortgage approval example presented paper consider state transition triggered specific outcome single activity e two activities outcome trigger state transition possible effects contextual events state transitions e g economic crisis may affect mortgage approval decision considered example general case triggering condition seen combination contextual events multiple outcomes several internal external activities therefore user choice activity execute discuss context modeling formal concept analysis galois lattices background theory contextaware agile process management definition automated user guidance cmp subject future work operational semantics defined work first step using formal methods paves road automated design validation verification cmp work however suggest concrete graphical modeling notation case management processes convinced visual syntax freely chosen according modeler taste soon semantics encoded syntax well established",
  "2013-RKPLG": "introduction capacity timely discover efficiently respond rapid changes environment major goal enterprise future according firm ability adapt dynamic environments depends first agility business processes therefore design development new process management systems enabling process adaptation run time essential defines process sequence events occurring system lamport event triggered action accordingly business process seen sequence events triggered activities business process actors majority existing methods business process design follow imperative principles implying order events predefined result meaningful process events need determined corresponding actions need predefined design time run time processes follow configured model limited possibilities deviate predefined scenario execution business process dynamic environment compared navigating ship towards destination bay uncertain waters rarely ship follow blindly predefined path awareness current position situation well navigation skills dynamic path finding essential reach destination work discuss foundations propose architecture system supporting dynamic context aware business process adaptability first shift traditional imperative paradigm process design exploit declarative principles represent business process finite state machine fsm state representing process situation given time state transitions defining possible process scenarios triggering events specify underlying process semantics e conditions state transitions fsm formalism makes notion process activity implicit putting forward activity outcomes modeled triggering events therefore declarative process model focuses needs done order achieve process goal done allows us handle process events whose order occurrence undetermined define corresponding handling scenarios run time navigation stormy ocean depends skillful skipper capacity select right action ensure incorrect scenario executed design initial navigation rules process guidance based formal concept analysis galois lattices specify resulting process set activities dynamically assembled run time one non forbidden process scenarios general process specification offer infinitely many alternative scenarios possibility deviate one scenario another execution 1st formalize properties process form agility navigation stormy ocean depends capacity skipper select right action right moment respect current situation define 2d form process agility ability monitor manage process context dynamically select alter execution scenario accordingly extend declarative process specifications dynamic context models mechanisms dynamic context management design navigation rules processes guidance handle process events events resulting execution process activities context events unified way compatible fsm formalism nature events triggering state transition importance navigation rules ensure incorrect scenario executed respect given context situation novel combination declarative modeling principles context awareness formal concept analysis main research contribution work architecture context aware business process engine cape summarizes findings remainder paper organized follows section discuss state art related business process design associated agility problems section formalize two forms business process adaptability theoretical foundations used section specify architecture context aware agile business process engine cape finally illustrate findings example present perspectives work motivation related work workflow based approaches highly efficient process design management assuming events triggered process activities well determined ii human involvement limited accept reject select list types decisions iii system within process executed considered closed external event affecting process execution occur large category processes however assumptions hold health care therapy may different effects different patients insurance claim processing extensively involves human expertise decision making business many processes cope evolving economic conditions frequent changes customer requirements limited capacity imperative methods deal changes recognized researchers practitioners numerous approaches propose improve dynamic process adaptability concept configurable process presented different modeling formalisms deal process configurability defined process configurability allows instantiate process model according context improve process adaptability execution however process either follow preconfigured model select limited set variations works aim improving run time adaptability modification predefined workflow execution authors propose deviation mechanisms ensure flexibility preserving control process validity correctness run time process instances follow preconfigured model imperative support process adaptability extent solutions processes characterized unpredictability reported numerous works foundations collection experience reports adaptive case management presented works emphasize run time adaptability markus et al propose framework support emergent knowledge processes implemented top modeler tool process instances represented dynamically moving state space approach relies automated control systems implements declarative modeling principles burkhart et al propose explore capabilities recommender systems provide user intelligent process oriented support run time handling dynamic activity selection configuration processes fly majority proposed solutions demonstrate limited capacity deal process contextual information systemic dynamic way authors use context information process definition roseman et al consider external context elements may influence business processes e g weather influences processes call center insurance company incorporate elements business process modeling saidani et al also consider context business process definition particular roles played actors works context information specified design time mounira et al propose process mining architecture identify context variables influencing process activities however specific model formalizing variables proposed foundations cape section define two forms process agility present vision context aware business process management based fully declarative modeling combined innovative context management formal concept analysis process agility work agile patient care series1 could see house american tv patient diagnostics treatment processes medical ward partially rely imperative procedures main challenge aware patient situation evolution adjust http en wikipedia org wiki house tv series treatment accordingly contextual parameters might relevant managed include limited patient measurable body conditions temperature blood pressure heart rate patient medical record patient life style information recent workload leisure activities trips parameters stable e g predispositions allergies etc others evolve e g new information patient medical history recent activities others may change several times day e g body temperature capability immediately react canceling prescribing new tests medications essential first form process agility define first form business process agility capacity handle unpredictable sequences system events implies order process activity invocations defined dynamically run time depends uniquely current situation process state rather predefined execution scenario declarative approach process specification ensure first form agility shift traditional imperative paradigm process specification exploit declarative principles represent business process finite state machine fsm – state transition system allows us handle process events context events – see section undetermined order occurrence define corresponding scenarios run time fsm specifies machine one state time perform state transition result triggering condition event group events defined finite set states set triggering conditions transition mathematical model fsm defined quintuple q ∑ δ q f q … finite set states n ∑ e e … e finite set triggering events input alphabet ∑ δ q x p q state transition relation q initial state ∈ f q set final states ⊆ business process modeled finite state machine fsm state q represents state process given time ∈ described states parameters e g order preparation delivered paid patient admitted diagnostics treatment discharged fsm triggering events ∑ represent events may occur process execution e g change patient body temperature resulting medication etc note process activities implicit within fsm formalism events resulting activity execution observable fsm transitions represent transitions process states δ fsm final states f represent process outcomes order delivered patient discharged etc associated process goal representation business process using states transition new presents decserflow language declarative modeling service authors present declare system support declarative loosely structured process models use formal semantics based labeled transition systems process execution presented trajectory process state space process model specified set formal rules describing valid paths possible trajectories approach extends paradigm uses fsm formalism common ground process model context model formal concept model example agile patient care continued illustrate fsm formalism develop example agile patient care model simplified patient treatment process fsm illustrated fig patient admitted medical ward initial state physician examines order obtain information diagnostics treatment diagnostics may involve one multiple examinations generic specific tests patient case assessed treatment prescribed treatment additional examinations reveal new patient condition require modify assigned therapy even repeat diagnostics assessment therapy terminated patient good condition confirmed patient discharged ward example identify four states q six process activities executed process trigger state transitions admitted discharged states table fig finite state machine fsm representing patient treatment process events e state transitions trigger shown labels according formalism activity described pair e q set states activity necessarily ⊆ invoked e ∑ set events result activity execution ⊆ potentially trigger state transition activity state transitions triggered upon termination e calculated x p δ example activity a2 medical laboratory test specified follows s1 s2 e e5 e6 e7 note events result process activity context events cf section independent activities e g e10 – condition improved table abstract activities events defined patient treatment process activity avail process events activity outcomes a1 physical s0 s1 s2 e1 confirms declared symptoms examination e2 problem found e3 new symptoms emerged e4 supplementary medical tests required a2 medical s1 s2 e5 positive results anomalies detected laboratory e6 negative results anomalies detected test e4 supplementary medical tests required a3 specific s1 s2 e5 positive results anomaly detected medical tests e6 negative results anomaly detected e4 supplementary medical tests required a4 case s1 e7 diagnose confirmed treatment assigned assessment e8 diagnose confirmed patient discharged e4 supplementary medical tests required a5 therapy s2 e9 condition declined e g symptoms increasing e10 condition improved e g symptoms decreasing e11 side effects emerged e3 new symptoms emerged e12 stable situation e13 end therapy a6 recovery s2 e3 new symptoms emerged e14 end recovery therapy context events e15 new medical personal evidence received e3 new symptoms emerged e9 condition declined e g symptoms increasing e10 condition improved e g symptoms decreasing formal concept analysis galois lattices within model partial ordering process activities determined state transition relation p q relation specifies valid transitions respect process goal final state ensures invalid state transitions e g discharge patient critical temperature avoided relation specified formal concept analysis fca fca mathematical theory relying use formal contexts galois lattices defined use galois lattices describe relation two sets led various classification methods since used numerous contexts extract hidden knowledge data let us first introduce fca terminology mathematical model let k g formal context g set objects set attributes binary relation g x specifies attributes different ⊆ objects derivation operators noted defined g b follows ⊆ ⊆ ai bi m│∀ g g g g│∀ b g ∈ ∈ ∈ ∈ ai bi set attributes common objects set objects share attributes b formal concept context g pair b g b ⊆ ⊆ bi ai et b set called extent concept b b intent concept b specialization concept c c equivalent ⊆ b noted b c reciprocally concept c ≤ ⊆ generalization concept b set concepts partial order relation constitutes lattice called galois lattice context k major interest galois lattice structure provides conceptual clustering objects according common attributes allows identification conceptually significant objects attributes another interest galois lattices association rules inferred automatically several works indeed applied fca extraction relevant association rules perform sequential pattern mining within approach process states q triggering events ∑ process activities defined section form formal context analyzed using galois lattices process states activities clustered revealing conceptual properties example determine activities executed suggested execution given conditions objective trigger desired state transition fig represents galois lattices built formal context defined table lattice fig 2a clusters activities possibly overlapping groups according common events shared activities within group lattice fig 2b represents sets activities enabled state exploit galois lattices recommender mechanism makes suggestions activities execute mechanism explained section concept lattice contains set activities white labels described events share grey labels links concepts generalization specialization links note nodes inherit events concepts inherit activities concepts lattice upper bound top concept contains activities inheritance event e event associated activities lower bound lattice bottom concept contains activity events activity – event formal context b activity – state context fig galois lattices let us consider concept containing activity a1 concept containing a4 extent fig 2a see intent a1 may events e1 e2 e3 e4 a4 – events e4 e7 e8 outcomes two concepts generalized concept a1 a2 a3 a4 e4 contains activities a1 a2 a3 a4 described common event e4 along lines concept a1 a2 a3 s1 s2 fig 2b shows activities described common states s1 s2 – states activities executed second form process agility define second form business process agility capacity adjust process execution scenario according current contextual situation process activities assembled run time according observed context objective trigger state transition required achieving process goal defined one final states fsm dey defines context information used characterize situation entity person place object considered relevant interaction user application notion context adopted literature mostly user centric limited physical aspects e g location user preferences user device together dourish argue notion context larger includes information related organization processes context – organizational cultural context much physical context – plays critical role shaping action also providing people means interpret understand action example patient treatment process influenced emergence new symptoms arrival new resources e g new medical personal evidence etc second form business process agility consists taking account context information process execution context parameters reflect awareness external internal information process observed measured even though context awareness business processes addressed literature lack formalism context representation management persists many proposed context models static need defined design incomplete consider limited context information specific workflow based processes argue number kind context parameters may vary one situation process state another making impossible exhaustively model required context information within single static context model context model therefore needs dynamically instantiated appropriate metamodel according specific evolving context dimensions dynamic context modeling according najar et al formalism chosen representing context model determines reasoning methods used perform system adaptation observed context context model ensures definition independent adaptation processes ii isolates process context acquiring techniques applies context aware business process claim process context information acquired modeled formally analyzed run time order adapt business process execution ensure business process flexibility several context models proposed literature based works define common meta model presented fig meta model consider context set context elements observed given subject e g patient device resource etc subject associated multiple context elements location status etc context element observe values dynamically change semantics context elements described using ontologies ontologies also provide reasoning mechanisms e inference rules fig context meta model considering context set context elements mathematical model formalize context subject time follows context element ce element ce represents observed value context element ce subject approach process states q defined using fsm formalism section extended context information state q associated ∈ set subject contextual elements observe context fsm triggering events ∑ represent context events occurring process execution ii events resulting executed process activities – process events based context ontology represent context events logical constraints context concepts observed values result fsm processes contextual process events unified way events expressed using logical conditions observed values contextual elements note process activities implicit within fsm formalism events resulting activity execution observable example subject – patient – observed process states contextual elements ce associated patient include body temperature blood pressure patient record etc patient condition decline patient temperature may evolve 5°c 7°c new evidence patient received e mail triggering event e9 condition declined – see table expressed using following condition element patient temperature context model concept analysis fig shows process context events taken account patient treatment process context events affect state transitions play role triggers similarly activity outcomes example patient treatment s2 changed either result physical examination outcomes e1 response new symptoms e11 new evidence patient e g allergies predispositions past incidents etc e15 galois lattices particularly adapted context aware approach use galois lattices analyze fsm triggering events see section regardless nature process events context events indeed fca already successfully coupled context modeling authors proposed spontaneous personalized dynamic way defining joining user communities use lattice based classification recommendation mechanism analyzes interrelations communities users recommends new communities based user interests preferences architecture cape section define primary elements architecture context aware business process engine cape grounded theoretical foundations support forms agility introduced define following primary elements context aware process engine activity repository context monitor navigation manager illustrated fig fig cape architecture context monitor activity repository navigation manager activity repository activity repository represents set activities related business process activity specified states necessarily must executed process set events e representing possible outcomes defined section pair e activity signature signatures used navigation manager activity repository represents crew skills technical capacity ship context monitor context monitor charge observing run time context elements subjects environment role cape architecture similar watchman ship observes navigation conditions reports navigation manager context monitor based context meta model described earlier similar recognizes context elements plugins feed monitor dynamic information given context element subject e g plugin reading patient heart rate medical resources location id card context monitor dynamically extended adding new plugins observing new context elements subjects context values dynamically observed context plugins define current position process state space position used navigation manager calculating adjusting next process stepsand recommending activities execute navigation manager navigation manager makes navigation decisions like skipper ship determines one several plausible activity execute respect process goal contextual situation specifically navigation manager takes account current state process context events signatures activities defined activity repository based navigation rules determines set activities enabled given situation calculates highest probability result desired outcome navigation engine core element cape architecture links together elements functionality cape described follows engine enables activities execution captures events internal external generates state transitions fig considering process objective specified final state states engine also assure appropriate guidance decision maker human agent recommends activities would maximize chances trigger transition leading towards process goal illustrate functioning cape example example agile patient care continued patient admitted s0 result physical examination a1 confirmed declared symptoms e1 diagnostics s1 targeted final state process s3 discharge patient goal navigator provide recommendations order reach state quickly possible respecting medical protocols taking account contextual situation following describe sequence operations performed navigator meet goal selection next transition towards targeted final state fig illustrates various possible paths one state another underlying graph directed nondeterministic possible cycles graph navigator computes shortest path s1 s3 consists using direct link s1 s3 path goes higher number states next step example trigger transition s1 s3 identification relevant activities may2 navigator identify events trigger transition s1 s3 according fsm fig state transition map triggering conditions transition s1 s3 following additional physical examinations medical laboratory tests reveal anomaly problem patient feels better e2 e6 e10 case assessment confirm diagnosis e8 graph nondeterministic one event trigger multiple state transitions e g e11 – side effects emerged – handled therapy states trigger transition diagnostics state nondeterminism general case resolved refining states transitions specifying new navigation rules alternatively probability p associated possible transitions identify activities maximum utility respect objective transition s1 s3 navigator identifies activities repository ensure desired outcome combination events described using galois lattice illustrated fig example event e2 result activity a1 e6 a2 a3 e10 a5 spontaneously external event patient condition may improve independently activity medical staff navigator selects activities enabled state s1 according specification using galois lattice illustrated fig example activities a1 a2 a3 a4 available s1 diagnostic state whereas a5 thus activities a1 – a4 potential candidates execution state s1 selection recommended activities based utility calculate utility scenario likelihood trigger transition s1 s3 example a5 available s1 therefore e10 expected context event e observe event happens control following viable scenarios evaluated physician prescribes medical tests makes additional physical examinations according declared symptoms spontaneous improvement patient expected b physician assesses case based patient history examinations made upon patient admission ward combination scenarios also possible depending probabilities transition s1 s3 resulting aforementioned scenarios also probability obtain event e2 result a1 e6 a2 a3 e8 a4 navigator may recommend specific activities medical staff discussion future work providing rich toolbox process modeling verification post execution analysis traditional workflow based information systems considered inflexible therefore organizations nowadays searching compromise automated user support process flexibility run time fig 5a illustrates dependency x axis shows degree process flexibility highly structured unstructured ad hoc processes axis shows level automated user support assured system solid line depicts dependency flexible process lower user support provided conversely higher expected level user support structured process according burkhart et al increasing runtime flexibility employees confronted expanding decision space needed possess expertise dealing processes involved fig 5b illustrates dependency x axis shows degree process flexibility axis shows level user expertise required handling process solid line depicts flexible process higher expertise level employee two forms agility formulated paper aim relaxing requirements human expertise given level process flexibility process rigidity predefined structure desired level automation depicted dashed lines fig 5a 5b declarative approach process design use formal methods enable set automated techniques process analysis validation based model checking theorem proving thus improve level automated user support allowing maximum run time flexibility context awareness formal concept analysis enable automated recommendations identification alternatives joint use provides flexible guidance end users run time supports expertise required process handling idea paper reported research currently early stage development according research framework specified business problem lack automated support business process agility ii defined relevant knowledge base research outlined foundations cape iii built design artifacts introduced two forms process agility – constructs used reasoning business processes also defined model method specification agile business processes based fsm abstraction formal concept analysis extended model dynamic context model combined artifacts proposed architecture context aware agile business process engine cape process flexibility vs automated user support b process flexibility vs level employee expertise required fig relations process flexibility automated support required level user expertise solid line depicts current trends bpm dashed line depicts cape architecture presented work possibly change trends work accomplishes first part build evaluate loop evaluation designed artifacts refinement addressed future work specifically envisage demonstrate utility proposed architecture first developing detailed scenarios simulating eventually implementing cape architecture studying usability real business environment usability metrics cape also discussed future publications",
  "2013-RZS": "introduction according coming years enterprise software systems able continue evolve along beaten paths urgent need new directions ways enterprise software conceived built deployed evolved contention becoming materialized even presently boundaries companies gradually fade away paving road liquid enterprises fuzzy boundaries terms human resources markets products processes require adequate internet based enterprise systems decentralization organizations subsequent changes management require major changes organizations processes heavily involves use traditional highly centralized decentralized liquid enterprise many organizational structures identified work analyze three forms organizational structure centralized federated decentralized work studies conceptual differences organizational forms focusing differences affect creation maintenance evolution within corresponding types organizations objective make explicit link structure organization ea ensuring thus better support federated decentralized organizations envision architecture driven corporate governance involving adequately performed communication set policies multi level decision making knowledge management automation tasks taking advantage infrastructure human management etc main research question addressed paper integrate decentralization concepts ea methodologies proposed solution follows design science research framework suggests innovative solution proposed solve problem general interest following framework study identify problem real world need support modern types enterprises characterized increasing decentralization demand flexibility agility ii define relevant knowledge base research grounded organizational science enterprise architecture discipline iii build design artifacts two constructs used reasoning organizational structure general organizational structure particular iv evaluate created artifacts apply environment federated organization swedish higher education sector paper reports research progress organized follows section outline theoretical foundations work discuss related works section define relationship structure organizational ea first present concepts center steering forces link organizational structure governance ea use concepts identify conceptual problems related decentralization propose solutions findings illustrated real organization case section followed conclusions direction future work section theoretical foundations related work section brief overviews topics results related research paper presented centralized federated decentralized organizations organizational structure defines rules according allocation responsibilities resources coordination supervision made organization case many popular organizational types defined literature work focus three types organizational structure centralized federated decentralized organizations centralized organizations lean towards vertical style coordination characterized formal authority standardization planning decentralized organizations lean towards lateral coordination characterized meetings task forces coordinating roles matrix structures networks example decentralized organization collaboration partners working concrete set problems e g research collaborations virtual labs forming response particular customer need market situation e g virtual organizations coopetitions besides collaboration missions objectives partner completely different even concurrent federated organizations combine characteristics centralized organizations e g centralized planning standardization etc decentralized organizations e g local leadership competitive local objectives etc one example federal organizations research institution formed multiple schools centers labs enterprise architecture ea role ea discipline provide organizations roadmap creation evolution information systems ea organization changes grows together organization structure vision operating model fig enterprise architecture organization contains three interrelated parts ea method ea description ea engine ea defines underlying principles standards best practices according current future activities enterprise conducted ea methodology tools produce artifacts specify current state company architecture target architecture identify best cross gap architectural roadmap set standards rules follow transformation ea principles elements often addressed literature ea description process organization execute order obtain ea description called ea method fig traditional ea project consists implementing ea method producing ea description assure organization continuously follow ea principles achieve designated goals architecture third element defined ea engine presence element model fig reflects fact ea static makes organization change changing time dedicated structures procedures defined organization order continuously steer organization towards target architecture governance according governance subset discipline corporate governance focused information systems performance risk management discipline describes people authorized domain business consider monitoring control improvement business architecture governance key aspect governance – responsible create manage policies structure content organization enable reuse form best practices service oriented architecture soa governance well known example architecture e soa ea incorporates soa drives governance ensure service orientation peer peer claim structured disciplined approach evolution necessarily rely upon centralization novel ea concepts needed ensure harmonization development evolution properties decentralized federated organizations argue peer peer relevant concept decentralization ea two reasons first units decentralized organization able contribute enterprise manner completely similar peers peer peer system peers participate voluntary manner second challenge peer peer systems overcome similar decentralized organizations figure mechanism architecture organizing peers way cooperate provide useful service community users therefore consider peer peer principles applicable ea enhancing support decentralization organizational structure ea objective ea methodologies created early 1990s align capabilities biz needs via centralization main price pay centralization loss flexibility inertia decision making time however much less critical make disciplined justify investments today flexibility becomes strategic modern organizations transparent boundaries simply impossible centralize literally independent partners hand still crucial maintain disciplined approach evolution partners remain independent could also efficiently work together virtual whole fig organizational structure governance ea form triangle ea relies upon org structure works presented focus relation structure organization following works claim notions organizational structure governance ea interrelated governance defined org structure comply vision architecture ea principles ea principles turn reflect style organizational structure relations form triangle shown fig question ea reflect change org structure order support disciplined evolution upon alternative mechanisms ea rely centralized strategic resource planning getting replaced local planning central management replaced management operational level centralized coordination top decision making gives way self organization ad hoc partnership answer questions define concepts center steering forces section using concepts represent three types organizational structures section formulate problem related mismatch organizational structure ea use section concepts reasoning decentralization consider three generic forms organizational structures centralized federated decentralized focus elements structures impact definition ea method implementation ea engine ea principles driving organization target architecture center steering forces define center part organization person group unit plays role leader supervisor coordinator possess power steer parts organization center implicit explicit organizations centralized fig explicit center e g ea department ea steering committee etc center initiates supervises validates changes organizational ea steers organizational units setting rules checking compliance also say exist steering forces center non central units fig three types organizational structure described notion center steering forces organizational units depicted filled circles circle centre stands center arrows relating circles depict steering forces steering forces defined explicit implicit protocols policies rules procedures regulating flow communication control organizational units forces characterized direction top bottom sideways strength organizations centralized strong steering forces connect center units forming hierarchy radial forces fig simple model two levels hierarchy presented forces top supervision decision making task resource planning bottom local initiatives leveraged center approval federated organizations fig b center remains explicit radial steering forces connecting center units weak since decision making prioritization also done locally hand sideways steering forces appear model since interactions joint projects emerging locally units without passing center decentralized organizations fig c center disappears becomes implicit neither overall commitment given set ea principles centralized control evolution ensured type steering forces makes organizational evolve strong sideways forces ea centralized decentralized federated organizations based conceptual representation three organizational types previous section explore characteristics centralized federated decentralized organizations reflected ea methodologies centralized organization ea method set structure aligned structure fig define project leader sponsor center occupy high hierarchical position organization automatically provide top steering forces decision making resource allocation identify data process owners local units would provide bottom steering forces actively participate ea creation assign responsibilities define protocols would help reach consensus ea description produce radial steering forces ea description focus company wide long term master plan development fits global vision organization ea principles define single standard followed organizational units ea engine similarly ea method needs explicit center controlling authority strong radial steering forces protocols instrumentalized processes resources ensure compliance ea defined center steer organization promoting initiatives making decisions validating results organizational units leverage initiatives organization level bottom approval federated organization ea method set structure aligned structure fig b define project leader center ensure alignment ea project objectives organization since radial steering forces weak partially ensure communication coordination efforts organizational units centralized control validation ea description achieved therefore sideways steering forces developed complement lack radial steering forces within ea methodology new protocols negotiation information sharing cooperative decision making elaborated ea description focus company wide short term master plan development fits global vision organization ea principles support variability processes resources instead single standard fits example central unit decides generic process resources units implement variants ea engine rely upon center local leadership define two types steering forces complementing ea methodology specify tools activities based example peer production principles supporting centralized user driven collaborative change management decentralized organization ea method set structure aligned structure fig c center explicitly defined cooperation driven sideways steering forces enabled possibly maintaining local ea partners decentralized organization able connect architectures achieve interoperability ea methodology provide metrics assessing interoperability alignment local ea global ea ea description focus local short term master plans development aligned objectives organization partnership organizational ea principles support variability processes resources allowing partners implement variants given process respect local architectures local ea principles ea engine rely upon strong sideways forces ea methodology specify tools activities supporting user driven change management mismatch organizational structure ea place based theory many practical problems related ea implementation explained mismatch organizational structure ea place particular identify two types problems ─ problem initiatives fail decisions become inefficient federated decentralized organization uses ea still relies centralized coordination control ─ problem b poor strategic alignment guaranteed centralized federated organization relies uniquely local leadership implements solutions require purely decentralized management reformulate problems terms misbalanced steering forces organization leads us solution summarized follows problem misbalance organization weak non existing radial top bottom steering forces ea relies upon strong radial forces solution revise ea method ea engine involving sideways steering forces would compensate lack radial forces concretely organization replace al decentralized organizations mechanisms centralized control coordination decentralized equivalents e g cooperative decision making peer production etc problem b misbalance organization weak non existing sideways steering forces ea relies upon strong sideways forces solution revise ea method ea engine involving radial steering forces would compensate lack sideways forces concretely organization reinforce mechanisms centralized control coordination section illustrate theory case organization higher education reflecting federated organizational structure case study analyzed prominent university higher education sweden common university includes number units faculties faculty departments nowadays units becoming independent due several factors geographical dislocation faculty departments moved • main university campus example computer systems sciences department located kista leading swedish cluster proximity enables cooperation companies students mentoring programs internships graduate work opportunities guest lectures etc decentralization management coordination decision making • delegation pushed faculties faculty departments concretely decisions delegated principal faculty boards deans faculty departments heads administrations formal informal communication patterns formal hierarchical • communication faculty departments informal direct communication departments present example administrative tasks e g registration graduate courses postgraduate research etc primarily formal whereas course curriculum established departments cooperatively using informal communication links according theory presented section organization federated organization explicit center radial sideways steering forces defined present examples illustrating projects conducted university difficulties encountered explain difficulties using theory demonstrate origin mismatch organizational structure place federated ea engine exploited making decisions developing solutions example room reservation centralization central university department purchased packaged used room booking university wide departments already local solutions room booking better adapted needs result initiative departments ended paying new system due centralized budgeting kept system refused integration due decentralized decision making example illustrates problem previous section mismatch leading inefficient finally abandoned solution decision purchasing university wide system relied uniquely radial forces centralized whereas sideways forces negotiation departments collaborative requirements gathering etc exploited example publication cataloguing decentralization past faculty departments developed local solutions cataloguing research publications time multitude local solutions became problematic due numerous mappings data inconsistencies recently university brought decision allow faculties departments continue store assess publications data way suits best requiring workable mapping central catalogue structure follows required standard regulated state level coordination decision making exploited sideways forces since publications meant reflect common face university central management using radial forces desirable organizations federated structure problems avoided ea methodology properly integrates decision making patterns rely radial sideways steering forces first example centralized ea principles implemented whereas real organizational structure federated correct solution would exploit radial forces sideways forces involve departments cooperative requirements gathering solution evaluation etc second example contrast decentralized ea principles implemented correct solution could example centrally define common standard publications radial forces let faculties implement standard way fits local architectures conclusion future work paper outlined challenges related increasing demand process flexibility emergence novel generation organizations transparent boundaries meet challenges structure organizations change centralized organizations characterized strong top coordination control tend move towards agile decentralized structures new communication coordination decision making patterns used claim structure organizational defines governance style organization also explicitly reflected enterprise architecture organization supported ea methodology work defined concepts center steering forces modeled organizations different degree centralization centralized federated decentralized using concepts identified problems result mismatch organizational structure ea place explained introduction work follows design science research framework problem definition use relevant knowledge base development main research artifacts two constructs center steering forces allowed us identify problems related misfit organizational structure ea use evaluate real case swedish higher education sector future work plan elaborate proposed concepts identify metrics would allow us assess centralization decentralization precisely measure strength steering forces etc also envisage study concrete mechanisms patterns communication coordination decision making centralized decentralized federated organizations see transformed concrete ea principles explicitly integrated ea methodologies example process variability mechanism handle local differences complying global standards federated organizations",
  "2013-SRZN": "introduction organizations rigid centralized management style fail sustain dynamic environments due inertia decision making lack agility political social economic systems progressively transforming distributed network novel organization forms accordingly emerging recently coined terms proactive enterprise liquid enterprise describe nature organizations transparent dynamically changing boundaries agile processes interactions aligned realtime business goals virtual collaborations itenabled capabilities emerging organization forms organizational structure defined institutional arrangements mechanisms mobilizing resources levels system changes management operational styles brought decentralization requires major changes organization processes heavily involves emerging technologies serve main catalyst organizational transformations utilizing right technologies evolving thus digitized business processes automate organizations core capabilities – primordial organizations traditionally addressed enterprise architecture ea discipline ea defines underlying principles decentralized environments art zdravkovic cid selmin nurcan systems sciences kista sweden jelenaz dsv su se en informatique rue tolbiac paris france nurcan univ paris1 fr figure enterprise architecture standards best practices according current future activities enterprise conducted ea methods tools produce artifacts specify current state company architecture architecture specify target architecture architecture identify best cross gap architectural roadmap produced artifacts often addressed literature ea description process organization execute order obtain ea description called ea method fig traditional ea project though consists implementing ea method producing ea description assure organization continuously follow principles achieve designated goals termination ea project third element defined call element ea engine created early 1990s de facto ea methodologies support organizations creation evolution structured disciplined way focus centralization tight binding organizational structure properties e g centralized management properties however necessarily exist decentralized organizations consequently implementation methodologies organizations 2010s becomes difficult inefficient role ea driver transformations compromised example consider public organization acquiring software system objective integrated facility management across divisions divisions involved decision making process due centralized strategic planning eventually refused shut local systems switch global one due decentralized management consequence strategic initiative integration failed divisions protected interests local systems tailored needs still charged acquired system never used due centralized budgeting example demonstrates mismatch architecture principles tendency towards integration architecture engine process prioritizing evaluating eventually deciding global system adopt organizational structure inherits centralized mechanisms strongly decentralized claim structured disciplined approach evolution necessarily rely upon centralization therefore novel ea concepts needed ensure development evolution harmonized properties decentralized organizations paper analyze various forms organizational structures presented literature outline characteristics decentralization identify challenges related decentralization organizational define decentralization organizational continuum three phases centralized federal decentralized main contribution paper assessment three prevalent ea methodologies togaf zachman fea capacity support decentralization three frameworks chosen highly influential evidenced extensive coverage literature example – furthermore sessions identifies along gartner methodology making percent field assessment finally leads us set recommendations decentralized aware ea paper part research work still early phases empirical validation yet done stage remainder article organized follows section ii discuss role ea organization provide overview three ea methodologies togaf zachman fea section iii discuss different forms organizational structure generic itspecific presented literature focusing degree de centralization outline main characteristics decentralization highlight challenges related decentralization section iv examine presented ea methodologies support de centralization section v propose set recommendations decentralized aware ea ii enterprise architecture frameworks common perspective enterprise architecture singular agreed upon definition ea different definitions – much common ea discipline takes holistic design oriented approach transforming high level business vision goals integration enterprise organizational structure business processes information systems transformation involves identifying implementing necessary change occur paper break frameworks three separate components fig ea method ea description ea engine method aims lay groundwork ea project typically involves setting teams responsibilities overall process collecting approving ea artifacts e g architectures form second component ea description engine involves setting support structure ensuring ongoing adoption architecture remainder section look three different ea frameworks perspective three phases open group architecture framework togaf zachman framework federal enterprise architecture fea b togaf open group architecture framework togaf ea framework created open group ea method togaf includes detailed ea method called architecture development method adm made preliminary phase eight core phases labeled a–h ch preliminary establish initial commitment governance set high level vision future architecture includes management approved goals requirements create statement architecture work forming contracts obtaining approval project sponsors b–d create architectures analyze gap e–f create plans crossing gap g–h concerned implementation ongoing governance change management ea description togaf views architecture perspective four different architecture domains business processes functions application data technical specific infrastructure various architectural artifacts togaf organized across architectural landscape ch togaf specifies three levels detail strategic overall direction setting executive level segment architectures level specific project program capability governance related activities additionally architecture landscape partitioned supporting different organizational units ch togaf architecture content framework describes outputs architecture efforts adm includes deliverables specified contracts subject formal approval ch ea engine togaf outlines adm phase concerned ongoing change management process architecture enterprise ch phase governance body sets criteria determining change requires architecture update new cycle adm needs started togaf describes formal review process determining compliance goal first foremost catch errors project architecture early thereby reduce cost risk changes required later lifecycle ch togaf outlines formal approach architecture governance led architecture board ch togaf architecture governance framework ch suggests guidelines developing formal architecture governance structure c zachman zachman framework first ea first introduced john zachman consists taxonomy fits ea description aspect ea ea description zachman framework breaks ea grid perspectives perspective characterized target audience issue aimed zf covers six issues data entities functional locations networks people relationships events performance criteria motivations goals issue viewed six different perspectives executive business management architect engineer technician enterprise users executive perspective provides estimate system functionality cost business management perspective view owner thinks business operates architect perspective takes systems viewpoint describes operations interactions enterprise systems engineer perspective describes technology design individual systems technician perspective takes technically detailed perspective sub contractor implementing system enterprise users perspective describes perspective system users fea federal enterprise architecture fea effort federal government united states create ea entire government fea complete ea framework covering three components ea fea takes approach individual organizational units develop architectures fit overall framework common standards interoperability ea description fea develops architecture segments enterprise services segment major line ofbusiness functionality individual organizational unit agency department ea artifacts defined fea include baseline segment architectures target segment architectures transition strategy achieving target architecture ea method fea defines four step iterative process creating architectures segment service analysis baseline architecture current problems vision target architecture outlined definition detailed target architecture segment get defined investment strategy project planning implementation ea engine fea describes ea governance management processes sec control architecture development process implemented manage standards enforce compliance manage collaboration agencies approve architectures implementation fea defines value measurement process continuous customer focused process relying feedback ea stakeholders value measures increase quality effectiveness ea products services support business decisions sec iii organizational structure decentralization section first discuss forms organizational structure defined literature second de centralization current organizations consequence styles governance explored conclude section underpinning challenges organizations face due decentralization decentralized organization much research done specific forms organizational structure taxonomies organization forms defined classic modern types organizational structure often recognized classic types include simple centralized organizations bureaucratic organizations divisional structure functional structure modern types include matrix structures flat organizations adhocracies new forms organizational structure include collaborative networks virtual organizations coopetitions according robbins organizational structure three components complexity formalization centralization complexity refers degree activities within organization differentiated formalization refers degree work standardized centralization refers degree decision making concentrated one point organization following luthens de centralization also defined according three factors geographical territorial concentration operations functions extent concentration decision making powers following characteristics centralization defined allocation decision rights structure communication lines choice forms coordination completely centralized organization decision making authority would reside single top level authority completely decentralized enterprise members would equal decision making rights hierarchy manages interdependencies different subunits organization often makes direct interactions communications unnecessary decentralized organizations instead less formalized communication lines fluid project oriented teams centralized organizations lean towards vertical style coordination characterized formal authority standardization planning control systems decentralized organizations lean towards lateral coordination characterized meetings task forces coordinating roles matrix structures networks consider popular forms organizations focusing degree centralization b forms organizational structure decentralization classic organizational structures pearlson saunders offer thorough description pure hierarchical organization structure except top level position position one superior zero subordinates decision rights communication lines strictly defined work way top scope position specialized strictly defined superior one works assigned teams primary benefit hierarchy high levels management strict governance control company hierarchical organization structures suited stable environments hierarchical organizations subdivided simple centralized bureaucratic organizations simple centralized organizations strategic planning operational decision making authority belong one person top structure found small single owner organizations two hierarchical levels bureaucratic organizations characterized multi level hierarchical structure use standard methods procedures performing work hierarchical organizations generally divide labor either terms common activities terms output two organizational structures functional structure divisional structure identified accordingly modern organizational structures matrix structure another popular style organization structure seen mixture functional divisional structures form individuals assigned two supervisors covering different dimensions enterprise pearlson saunders state matrix organization structures suited dynamic environments lots uncertainty presumably authority structure allows cover multiple aspects making decisions however like hierarchical structure matrix structure rigid construct strictly defined roles communication lines decision rights authority still comes top centralized manner even though becomes distributed among matrix managers lower levels flat organization employs novel type structure one two hierarchical levels defined valve corporation software company video game industry employs structure example high decentralization contrast simple centralized organization described individual employees complete freedom nobody reports anyone everyone free choose projects adhocracy aims discard traditional hierarchies favor decentralized decision rights flexible communication lines connecting entire enterprise adhocracy rapidly changing set project oriented groups decision making authority powers mintzberg describes adhocracy loose flexible self renewing organic form tied together mostly lateral means post modern organizational structures new forms organizational structure enabled uniquely modern information communication technologies internet emerged recently collaborative networks virtual boundaryless organizations coopetition camarinha matos afsarmanesh define collaborative networks cns composed variety entities e g organizations people largely autonomous geographically distributed heterogeneous terms operating environment culture social capital goals three common characteristics various cns autonomy individual entities drive towards meeting common complementing goals use agreed upon framework collaboration virtual organization group independent organizations working together achieve goal coopetitions described characterized complex relationship firms simultaneously compete collaborate benefit entities engaged collaboration response specific market situation customer demand etc organization structures grounded sustainable collaboration partners without centralized control decentralization organizational according rockart et al changes business technology well progressive decentralization organization whole drives changes roles structure units works presented – focus relation structure organization fulk discusses interplay communication technology various organizational forms authors consider communication technologies one key enablers inter intra organizational changes authors study different organizational forms affect knowledge transfer organization claim organizational forms enable different kinds motivation different capacities generate transfer tacit knowledge weill defines six forms organizational structures business monarchy monarchy feudal federal duopoly anarchy business monarchy related decisions made centralized manner top level executives monarchy group professionals responsible making decisions centralized manner duopoly characterized two groups business executives collaboratively making decisions feudal form much less centralized individual organizational units responsible decisions federal aims balance combination central business units anarchy style governance small teams even individuals responsible decisions many organizations today tend combine centralization decentralization order obtain advantages styles global integration efficiency due centralized management key areas agility high quality local customer services due decentralized decision making others figure maps organizational forms presented axis depicting degree de centralization purpose study consider three types organizational structure centralized related decisions made centralized manner top level executives decentralized organizational subunit manages completely autonomous independent manner federal seen combination central management management subunits c challenges progressive decentralization organizational emergence decentralized organizational structures means significant changes organizations adopt however transformation mere question flattening organization shifting authority decision making power top bottom classic organizations hierarchy ensure control figure organizational taxonomy centralized decentralized coordination also manages interdependencies different subunits organization often makes direct interactions communications unnecessary therefore main challenge related decentralization weakening hierarchy lack interaction communication organizational subunits decentralization organization subsequent change management operation style requires major changes organization processes heavily involves caruso rogers bazerman highlight importance information sharing coordination organizations according major risk decentralization lack synergy integration due lack standardization enterprise architecture discipline allows organization develop evolve manner harmonized provides methodology sets structures assessing current state architecture asis planning agreeing upon communicating future state architecture carrying transformation order harmonization successful decentralized organizations important ea methodologies structures acknowledge decentralization help organization tackle related challenges next section examine decentralization addressed current ea practices iv existing ea practices support decentralization analysis shortcomings field enterprise architecture ea emerged order combat two increasingly prevalent problems facing enterprises system complexity business alignment enterprises rely information systems increasing complexity problems become even important togaf concepts supporting centralized organization ea method ea engine togaf approach architecture governance involves architecture board oversee implementation architecture strategy ch board important role architecture governance p roviding basis decision making regard architectures ch enforcing architecture compliance single entity responsible high level decision making suits well organizations strong centralization centralized federal fig togaf suggest board enterprise wide representation ch may support level decentralization however suggests representation comes form senior managers concept primarily traditional organization structures throughout togaf references made existence bureaucratic hierarchical centralized structure place examples cid formal governance framework architectural material specified preliminary phase concept related rigid forms traditional organizational structure cid completion phase architecture vision togaf requires approval current vision architecture requirement assumes someone higher level decision making authority give approval cid set strategic architectures architecture landscape meant executive level ch ea description togaf suggests development architecture principles define underlying general rules guidelines use deployment resources assets across enterprise ch central set principles applied entire organization supports centralization togaf includes concept architecture repository storing architectural artifacts deliverables single place store information highly supportive centralization concepts supporting decentralized organization ea method ea engine togaf supports decentralization concept partitions architecture landscape divided separate parts order support federated architectures – independently developed maintained managed architectures subsequently integrated within integration framework ch supports idea different organizational units developing individual architectures mechanism integrating individual architectures roof corporate architecture explicit togaf indirectly supports decentralization suggestion tailored fit needs enterprise allows togaf support kind enterprise guidelines provided minimal b zachman concepts supporting centralized organization ea description zachman framework aims model complete enterprise using matrix elements alignment composite integration relations defined elements perspectives zachman framework line bureaucratic organizational structure defined views executive user constitute explicit organizational hierarchy clear separation domains make framework suitable matrix organizations well lack flexibility definition domains views requirement fill matrix perhaps zachman framework main shortcoming respect decentralization primary aspect decentralized organizations high level flexibility decentralized organization roles domains uniformly defined implicit sub units use zachman framework becomes difficult possible ea method ea engine providing schema organizing architectural artifacts enterprise zachman framework imply particular method collecting artifacts call ea method fig neither suggest anything set structures call ea engine therefore tailoring implementation zachman framework concrete organizational structure depends experience ea consultancy team summarize zachman framework provides detailed taxonomy ea artifacts supports hierarchical view organization application framework decentralized organizations remains unclear c fea concepts supporting centralized organization ea description use common set reference models fea prescribes standards followed throughout organization limits flexibility individual organizational units makes framework suitable bureaucratic organizations high level standardization processes fea however individual organizational units freedom develop architecture long fits set standards supports level decentralization suits organizations federal structure individual units input decisions ea method ea engine segment architecture development defined fea collaborative approach conducted team composed business experts enterprise architects technical experts fea defines set segment architecture stakeholders roles table segment architecture development example role senior management defined set agency strategic goals roles naturally line centralized federal organization fig mechanism integrating segment architectures roof corporate architecture assured specific governance management processes though implying different stakeholders remain centralized steps segment architecture development supervised manager pointing centralized management budgeting transition strategy defined agency level though assessed global level governance wide collaboration reuse based standards outlined fea important part ea transition strategy concepts supporting decentralized organization ea description resulting segment architecture positioned fea shared vision business transformation within core mission area common service segment architecture responds business needs ea method ea engine development segment architectures described collaborative process ea architects stakeholders focus placed reconciliation segment architecture agency architecture cross agency initiative emphasizing importance cross agency collaboration common opportunities initiatives architectural analysis architectural definition steps segment architecture development involve business owners agency level define business information management requirements segment ensures local interests looked within corporation fea targeting groups independent federal agencies objective increase interoperability quality service among three ea methodologies considered study fea one recognizing need interand intra agency cooperation communication nevertheless many concepts ea method ea engine fea grounded remain strongly centralized v towards definition decentralized ea challenge decentralization new one efforts able address view success specifics challenge varies domains however may exist general principles taken applied ea one effort peer peer architectures typically lack dedicated centralized infrastructure rather depend voluntary participation peers contribute resources infrastructure constructed argue peer peer relevant concept decentralization ea two reasons first individuals highly decentralized organization able contribute enterprise manner completely similar peers peer peer system peers participate completely voluntary manner second challenge peer peer systems overcome similar main challenge faced decentralized organizations figure mechanism architecture organizing peers way cooperate provide useful service community users similar main challenge facing decentralized organizations – lack cooperation – previously identified ea potential solution challenge decentralization organizations parallels domains peer peer systems decentralized organizations propose peer peer principles may applicable ea enhancing support decentralization section briefly present discuss two relevant principles peer peer peer production benkler defines peer production production systems depend individual action self selected decentralized rather hierarchically assigned peer production works idea individuals willingly coordinating one another expressing views understanding views others peer production takes many different forms one example user driven media sites reddit slashdot follow peer production model producing relevance accreditation user submitted content sites users ability vote submitted content order decide content relevance credibility another example relevance production crowdfunding sites kickstarter individuals decide funding user submitted projects giving money peer production also used produce content case wikipedia completely userdriven encyclopedia view enterprises composed peers idea peer production becomes useful ea example ea engine togaf relies architecture board responsible high level decisions governance instead central board responsible making decisions model based principle peer production relevance accreditation could used instead would better support decentralization decision making would distributed amongst peers make organization b trust management peer peer due fact peers peer peer systems able operate completely independent manner exists problem knowing whether contribution made peer trustworthy consequently researchers proposed various methods determining trust peer peer environment example aberer table existing prospective support progressive decentralization ea frameworks ea component existing support centralized ganizations existing support decen tralized organizations applicable p2p principles solution ea method approval process based hierar chy architecture development coor dinated supervised evaluated well defined roles company ea teams coordinate architectural work communicate results results controlled evaluated centrally program manager federated architectures pos sibility adapt adm specific organization archi tecture development process involves multiple stakehold ers peer production principles creation eval uation ea artifacts p2p trust management replacing approval mechanism ea description strategic level architectures hierarchy architecture principles common set reference models hierarchi cal organization ea artifacts explicitly defined roles domains zachman architecture partitions archi tecture reference models seg ment architecture con cept shared vision user driven content submission change management content e structure defined users ea engine architecture board formal governance framework common principles entire organization e global commit ment taken granted centrally integration various seg ment architectures assured centralized management governance peer production relevance accreditation e g decision making budgeting strategy opportu nity evaluation solution evaluation user driven content submission change management table existing prospective support progressive decentralization ea frameworks managed architecture repository content p2p trust management despotovic proposed determining whether peer trustworthy based peers history interactions peers system assessment performed individual peers appropriate peer peer environment togaf employs idea approval process grounded presence centralized authority ensure presented architectural material valid enterprise decentralized environment central authority likely exist peer peer trust management may offer solution instead explicit approval acceptance peer contribution ea based peer level trustworthiness vi conclusion study analyzed problem non fit emerging decentralized organizational environments established ea methodologies argued decentralization organizational structures governance common many modern organizations organizations following different patterns fostering entirely new relationships business processes classification organizational forms presented section iii used assess dominant ea methodologies support current ea frameworks fail solve major concern decentralized environments surveyed zachman framework togaf fea concluded first unable support significant aspect decentralization latter two provide basic flexibility togaf mainly facilitated ability different architecture organizational units providing space new methods architecture development fea conclusions similar top level organization standards need obeyed units consequently im decentralization ea frameworks plementations methodologies heavily limited support new decentralized organization patterns fostered virtual organizations collaborative networks coopetitions others lastly discussed application specific peer peer architecture principles–in particular peer production trust management–could projected onto problem employing ea organizations following decentralized organizational pattern aim research contribute state art enterprise modeling methodologies analyzing decentralization organizations supporting business patterns technologies thereby consequences trend requirements new approaches use management resources regarding future work next steps involves contrasting presented theories argumentations empirically e mapping ea different organizations ongoing study concerns organization public sector sweden exposing many decentralized behavior discussed paper",
  "2013-TMRW": "introduction today organisations rely information technology support business goals regardless services products provide business alignment play vital role organisation success provides business value strategy carefully developed together business strategy work presented based case study case study ´ enterprise architecture ea ecole polytechnique f´ed´erale de lausanne camera ready busital workshop gorica tapandjieva et al epfl main campus people including students researchers staff work people supported systems systems designed people campus used students professors used adminis trative staff general strategy includes multiples aspects spanning technology selection business process structure project focusing mostly best structure relations business processes services implementation architecture principles proposed ross weill robertson goal illustrate proposed strategy present goals plan actions working case study epfl first section focus understanding challenges section list initiatives epfl currently address challenges section present basic elements construct strategy based ea principles suggest way communicating strategy within organisation communication use solu qiq tool based methodology urbanisation systems urba systemic enterprise architecture methodology seam section illustrate application suggestions specific example business process process hiring new ph students finish overall conclusions future work main challenges epfl large organisation employees faces many challenges example currently epfl around different systems business infrastructure provide services epfl com munity grouped several categories systems listed table table shows systems managed central services addition systems laboratory within institute school sources data systems epfl gathered epfl information system coordinator didier rey data see resources involved operation maintenance development systems highly distributed additionally new emergent technologies regularly appear used cause changes current landscape systems terms resources situation becomes complicated number new projects continu ously increases well time required complete major challenge manage even new projects current resources resources basic ones electricity cooling furthermore epfl complex system impact delivering services support three core missions education research technology case strategy epfl table systems epfl grouped several categories mission academia academic management tool used students lecturers searchers administrative staff etc infoscience database used archive report works scientific publica tions moodle learning management system course sharing platform used course support grantsbd portal uploading following research scientific equip ments requests epfl administration sap finances human resources management system academia academic management tool used room book ing courses exams schedule grades management etc sharepoint content document management system infrastructure active directory directory service vpn virtual private network camipro systems around epfl student staff card electronic chip allow people use variety functionalities like payment miscellaneous campus shops stores without ready cash access protected rooms borrowing bike etc transfer ensure quality service qos epfl must protect bound aries efficient inside boundary achieve efficiency optimizing business processes resources used indeed current systems work well greatest challenge appears business processes need integrated across organisational units see integration problem people systems involved busi ness processes typically one organisational unit people systems separate units difficult work together communicate epfl already made efforts address challenges efforts explained following section current initiatives epfl exists information systems coordination body coordination des systmes information – csin mission aligning development systems epfl strategy assuring coordination different units body several committees commissions manage ment groups coordappl – coordination des applications one csin organised several workshops epfl target – define high level strategy reviewing impact applications return investments gartner early gorica tapandjieva et al – define set principles select project giving specific axioms – provide project management training hermes training – build prototype evaluate integration systems using open source enterprise service bus wso2 esb part master thesis project – propose service oriented approach help desk itil transition workshop dit progress – identify gaps existing processes find solutions coordappl seam workshop ph hiring – present conclusions workshops apply specific problems offer long term solutions overall landscape propose approach offers durable solution organisation systems epfl concrete example upon elaborate work based progress outcome ongoing coordappl seam workshop workshop work people responsible main systems heads certain departments epfl combination knowledge expertise experience helps us identify problems solutions workshops use seam family methods strategic thinking business alignment requirements engineering use seam communicate organisation systems fur thermore seam conceptualizes different aspects organisation busi ness enterprise architecture software development also shows different organisational level hierarchies enables designers choose see system whole black box composite white box addi tion seam shows behaviours systems properties representing information exchanged actors participating process origi nality seam integration generic system thinking principles discipline specific methods basic elements proposed strategy aforementioned workshops address gaps inside business processes gaps business processes followed ross weill robertson recommendations using architectural princi ples architectural principles provide rallying point managers sponsible building exploiting enterprise architecture consists following core business processes shared data driving core processes key linking automation technologies key customers strategy implement interpretation architectural principles explain case strategy epfl core business processes – core business process someone takes care user needs knows every detail process rules regulations person able design process know change business strategy changes role process owner shared data driving core processes – data essential asset every ganisation integrity quality security utility important features person responsible data used exchanged busi ness process data steward key linking automation technologies – key concept service base understanding service definition systems thinking service concept represents unit essential functionality sys tem exposes environment system group interacting interrelated interdependent components form complex uni fied whole based given definition key linking automation technologies represent connection systems done middleware connection services supporting processes people systems participate providing one service process belong one virtual unit key customers – many people involved business process important identify key actors section seen challenges epfl faces section pro pose solution requires changes epfl enterprise architecture involves identifying process owner data steward key customers link ing technology around services change would take place especially large number people systems involved edu cating people proposed strategy important part successful change learning people better accept change see individual goals aligned business goals observe contribution strategy process educating easy task therefore applying architectural principles epfl strategy requires two actions create service oriented enterprise architecture ea based architectural principles presented epfl separate ongoing projects part current strategy synergy among projects would improve overall strategy use interpretation architectural principles achieve synergy enterprise complex system main charac teristic continuous evolution manage evolution using seam representation architectural principles various seam models enterprise evolution changes propose easily reflected use seam systematic recursive business technology traceable manner seam explicitly shows services provided processes implement services moreover seam gorica tapandjieva et al models service systems allowing modify organizational boundaries seam models made seamcad tool create shared vision service architecture communicat ing vision everyone involved use together seam another ea approach urbanisation systems urba urba methodology used mainly france apply urba suggestion using cartography tool chose solu qiq tool successfully used many companies including ratp tool offers iterative approach building cartography information systems output tool automatically generates navigational web site use communicate people involved building systems advantages solu qiq tools used massive modelling meta model back ground makes fully customisable customisation allows solu qiq support seam use database store seam models illustrating strategy example strategy broad field many systems involved case epfl strategy several dimensions reason focus specific parts domains epfl business strategy suggest applied however domains functionalities show work one business process serve example working processes section spotlight process hiring new doctoral ph student mentioned process used coordappl workshop use seam model better perceive anomalies problems process process useful evaluation common process epfl ph hiring process learned services sub processes also used post doc professor hiring processes moreover problems encountered actors process demonstrate need integration systems alignment business process alignment processes business strategy subsection describe flow specific actions process subsection identify specific problems followed seam representation models shown subsection subsection illustrate basic functionalities solu qiq cartography tool addition present example service view view important communicating people service oriented ea vision strategy complete section suggestions apply strategy based lessons learned working example case strategy epfl description ph hiring process inscription process begins applicant fills application record academia table record validation possible three reference letters com pleted academia directly applicant references afterwards doctoral program committee including doctoral program assistant analyses application records decides admissible program doc toral program assistant informs applicants decision e mail doctoral program assistant also informs lab professors e mail selection identified potential admitted applicants professor organises interviews without help lab administrative assistant interviews matches made one professor one student interested working together part process supported existing system academia used insert notes candidates professors interested course reading candidate data application record employment professor informs lab administrative assistant decision assistant asks doctoral program assistant prepare admission letter confirms hiring selected candidate professor lab letter signed doctoral program director professor hiring candidate key step actual hiring ph student lab administrative assistant asks future students usual required docu ments cv passport copy etc documents together admission letter sent hr assistant responsible making contract arranging visa needed contract ready sent sig nature future ph student new record sap made point employment record ph student sap academic record academia ph hiring process problems identify together coordappl workshop participants problems problems two facets first facet shows difficul ties actors facing actors directly involved process professor applicant e future ph student doctoral school administrative assistant hr assistant etc problems – physical documents get lost process – data future ph student record inserted different people two separate systems academia sap – confidential data easily accessible – applicant selected aware status process know something goes wrong gorica tapandjieva et al – getting hard copy contract critical future ph student needs apply housing permit needed also must officially enrolled doctoral program benefit free language courses second facet shows business technical reasons problems difficult solve – different administrative procedures rules epfl doctoral programs – document management system connected academia sap – low level coordination people involved separate units – integration academia sap leading redundancy duplication data documents – person responsible business process someone knows rules depth able make decisions business process owner applies data data steward systemic enterprise architecture methodology seam use seamcad tool build seam models conceptualizes business process fig shows model ph hiring process show details execution process documents exchanged seen separate organisational units provide services participate process problems identified caused lack integration units solution example problem depicted fig everyone pro viding services process put one virtual integrated unit seam representation one container called working object means ev eryone shares resources aware going inside sign object represents added solution ∼ sign represents needs changed model following – virtual ph hiring service unit added groups everything involved providing services ph hiring process – additional role business process owner attributed edoc deputy dean – data steward added – enterprise service bus esb added links processes services different systems virtual ph hiring service unit – heads current organisational units added man agement integrated process fig shows service organisation ph hiring process remaining challenge moving people hence use cartography tool case strategy epfl fig seam model ph hiring process separate organisational units seen fig seam model ph hiring process virtual service unit inte grating people systems several organisational units seen solu qiq urbanisation systems urba solu qiq cartography tool outputs navigation web site makes strategy easily accessible transparent first step define gorica tapandjieva et al meta model graphical representation organisation structure showing four basic urbanisation views business functional application infrastruc ture meta model additionally service view organisational view meta model database schema data inserted tool order get output data gathering requires interviewing involved people business process actors department heads specialists etc order ensure views participants correctly captured additional depth interviews necessary subsequently output output1 regenerated rechecked example tool seen fig shows concrete example seam model systems academia moodle actors alain wegmann didier rey provide service recuperation des fichiers projects related service ged support ´evolution process service involved s´election des candidat e fig one output web site solu qiq tool generates showing applications actors providing service projects around service process consumes service suggestions ph hiring example able provide guidelines describe future work employing strategy suggestions construct seam model following pattern based example shown communicate people involved providing service work connected cartography solu qiq tool done master thesis project lams student case strategy epfl using solu qiq output interviews people contribute making cartography systems way see people systems involved providing service output show view service power react interviews even modify shape cartography several iterations interviews cartography output converge one common view accurate view ea construct seam model identify process owner data steward linking technology appropriate middleware found used business processes actions suggest reorganise organisational units one virtual unit based services provide one unit per service recommend service orientation whole enterprise captured seam usage cartography completed actors continue communicating using seam models set actions explain obtain relevant information certain systems use inter action working one functionality time work pro cesses belong functionality models converged choose another business process belonging functionality action explains plan work across whole epfl work currently done research lab lams acting consultant later performed someone within governance organization csin appropriate person needs yet identified future specify work conclusions paper first present main challenges epfl faces design ing strategy initiatives currently taken overcome address epfl enterprise architecture according proposed strat egy interpretation architectural principles architectural principles require process owner data steward key linking technology key actors identified suggest service oriented enterprise architecture organising units around services provide units use linking technology integrating different systems interacting process defining strategy need communicate share vision achieved using seam tools seamcad solu qiq using ph hiring business process example describe ap plication proposed strategy several figures show seam models illustrate sample output solu qiq tool suggest steps taken working processes overall work done far conclude communication adoption approach crucial part project gorica tapandjieva et al future work presented optimize one business process within epfl overall strategy complete address core business processes future work propose iteratively follow suggestions subsection remaining processes parallel ensure qos provided services must also focus protecting epfl environment mainly includes working several security standards protocols finally done validation approach full support epfl cio carry project mean visibility transparency services defined services providers services users validation happen solu qiq tool used routinely gather first feedbacks people involved",
  "2014-RKPLG": "makes perfect case manager provide common ground readers start definition case management omg defines case management coordinative goal oriented discipline handle cases opening closure interactively persons involved subject case case manager case team case man agement processes multiple applications including licensing permitting government insurance application claim processing insurance patient care medical diagnosis healthcare mortgage processing banking omg navigating spacecraft distant planet make perfect example case management process efficient case management industry hampered attempts deal case management process way regular business process main feature distinguishes case management processes traditional business processes unpredictability unlike business process designed successfully function years following predefined scenario case manage ment processes constantly adapt various unknowns un knowns may include client situation needs fashion economical techno logical trends expert skills available equipment environmental conditions tem perature humidity pollution radiation etc term adaptive case manage ment acm comes play literature adaptive case management discipline often compared busi ness process management bpm theoretical standpoint bpm acm demonstrate conceptually different views system design similarly chicken egg dilemma try resolve question comes first process data view adapted bpm process centered implies data emerges evolves within process according predefined scenario similarly g c f utomated uidance ase anagement cience iction product evolving conveyor belt acm view contrast implies process scenario evolves run time response emerging circumstances case related data dependence changing data possibly unknown circumstances makes automated support case management processes extremely challenging fore features case management support system often include case artifacts organizer repository task scheduler allocator report generator document shar ing business calculator based business rules etc definition assess ment alternative scenarios decision making remains responsibility human expert – case manager let look detail makes perfect case manager first characteristic derive based experience discussions professionals objective well argued reasoning case manager well informed case must take account multiple variables order evaluate situation decide case handling scenario e g activity perform information request expertise call etc also possess vast experience similar cases order predict possible alternative scenarios estimate likelihood resumes second characteristic capability value alternatives uncertainty last characteristic add capacity learn fast turning good bad experience expertise eventually improve quality manager future decisions hal could probably make perfect automated case manager still fiction science fiction science wish assert beginning going replace case man agement expert program however intend push limits existing case management systems could guide expert help learn quicker make better decisions faster imagine system drives team case like gps navigator collects data different sources identifies current position e case status anticipates traffic jams e resource deficiencies potential risks calculates alternatives routes e case development scenarios values respect current situation objectives proposes options e set activities help achieving objectives maximum likelihood compared gps navigator case navigation system figure process parameters events whose sources vary customer calls social media posts stock market feeds traffic reports messages rfid mo bile sensors due heterogeneity complexity processed information system come much sophisticated navigation scenarios nevertheless vision far fiction grounded intersection mature scientific disciplines going examine g c f utomated uidance ase anagement cience iction fig case navigation system guides expert providing set activities leading current objective maximum likelihood discussing scientific background however take closer look components case navigation system propose logical architecture system follows principles event driven architecture eda successor soa based capacity sense environment produce detect pro cess events react events dynamic context manager dcm similar gps navigator case navigation system operates based accurate definition current state position case relevant coordinate system well next state state defined values different case related variables two types internal controlled case e g absolute coordinates speed direction car generated report calculated price discount offer b contextual produced case environment e g accidents traffic jams changing weather conditions stock market fluctuation new evidence change customer situation contextual variables change spontaneously due external reasons mild severe effect case therefore need considered order define case scenario hand considering many con textual parameters make case management unbearably tough idea select measure monitor right contextual variables right case states role dynamic context manger dcm component figure given time context variables processed dcm plus values internal case variables transmitted navigation manager nm g c f utomated uidance ase anagement cience iction navigation manager nm navigation manager figure makes navigation decisions determines one several plausible activity execute respect current objectives conditions1 specifically decision required nm navigation takes account current case state context case defined dcm available activities e currently done runs pre dictive algorithm calculates different scenarios case development possible outcomes eventually selects scenarios highest probability result desired outcome suggests corresponding activities assignment actors activity resource repository figure expert uses intuition previous experience make right guess accuracy scenario outcome predictions nm improved using previous experience similar cases stored log history compo nent figure log history component memory case manager contains descriptions scenarios previous cases successful mined order swer questions similar situation already happen yes happened next log history mining techniques valuable toolkit determining patterns cases predicting development case certain initial conditions therefore important accurately record every event decision made activity follows log run time depicted dashed line tagged feedback loop figure activity resource repository element represents catalog activities performed case handling resources used actors equipment etc activ ity characterized set conditions performed e g specific • event happens certain resource available value x greater than…etc set conditions typically called precondition set conditions outcomes produced upon termina • tion typically called postcondition nm uses preconditions postconditions determine right activities per form current case state resources also characterized conditions used example actors human resources described skills enables dynamic activity actor assignment activity resource repository extended time defining new activities adding new resources algorithm following concept navigation system represent case management pro cess moving coordinate system coordinate takes values case specific parameter e g client income inflation rate time day availabil ity amount resource etc single point group points coordinate system corresponds case state status given moment time say case develops consider objectives case fixed change case handling g c f utomated uidance ase anagement cience iction state changes time three types triggers lead state change case management activities internal events external contextual events examples triggers corresponding state transitions shown table table examples triggers trigger type trigger example subsequent state transition external events applicant files complementary information income clerk processes information application gains high come status priority processing state case trig gered temperature rises critical emergency state case triggered interest rate bank changes contract validation state case triggered internal activities manager invalidates application demand refused state triggered agent system recalculates discounts contract valida tion state case triggered team executes emergency operation procedure reduces temperature normal operating state triggered internal events contract validity date expired contract validation state triggered stock reminder generated system value corresponding resource amount variable changed case management seen navigating one state another aiming achieve case objectives target state functionality case navigation system summarized follow ing abstract algorithm select relevant case specific parameters observe measure identify current case state dcm nm identify probable scenarios sequences states taking account possi ble previous experience nm log history exclude scenarios forbidden feasible current case according business rules regulations availability resources etc nm select scenarios lead case towards target state highest probability nm identify one several alternative activities trigger successful sce narios recommend case manager nm repository record case manager decision log history algorithm repeated cycle triggered case manager requiring assistance • dcm registering potentially important contextual inter • nal event scientific background idea automated guidance acm grounded intersection several scientific disciplines particular propose explore formal methods formal concept analysis fca dynamic context modeling table shows steps algorithm case navigation system presented g c f utomated uidance ase anagement cience iction indicates research challenges theoretical background imple menting steps table theoretical foundations required case navigation system step system ele scientific objectives ment dcm nm research objectives dynamic model select relevant context representation capturing pro case specific param cessing complex internal contextual eters measure events rules inclusion exclusion context identify cur subjects elements consideration formal rent case state specification case coordinate system disciplines dynamic context modeling com plex even processing formal specification languages nm log research objectives rules state transi identify probable tory tions specification case objectives final scenarios sequences states case management scenarios dis states taking covery case abstract states case account possible management scenarios log previous experience tory disciplines formal specification languages process mining formal concept analysis nm research objectives formal specification exclude sce business rules simulation validation narios case scenarios rules feasible forbidden current case e disciplines formal specification languages business rules regu model checking lations availability resources nm research challenges identification best select scenarios next state given current state lead case towards tar disciplines graph analysis formal concept get state maxi analysis mum probability nm repository research objectives specification activities identify one sev preconditions postconditions eral alternative activ sources identification activities ities lead lead required state transition successful sce maximum likelihood narios recom mend disciplines formal specification languages case manager formal concept analysis record case nm log manager decision tory formal concept analysis fca automated guidance acm proposed paper depends heavily sys tems capability analyze look dependencies classify vast amount data considering case context states log history navigation system also efficiently predict successful scenarios recommend user course actions based certain criteria formal concept analysis discipline proposes set methods tool data processing predictive ana lytics g c f utomated uidance ase anagement cience iction fca mathematical theory relying use formal contexts galois lat tices birkhoff use galois lattices describe relation two sets led various classification methods galois lattice gathers elements common properties clusters called formal concepts partial order exists among concepts form lattice upper lower bound since creation galois lattices used numerous contexts extract hidden knowledge data formal concept analysis provides universal tool clustering objects well used underlying semantics recommenders system providing selected subset elements correspond certain criteria joint use formal methods context modeling promising context case man agement dynamic context modeling main characteristic distinguishes adaptive case management busi ness process management dependency complex events contex tual parameters complete information case context accurate decision make next vanrompay however many contextual parameters make case management unbearably tough designing context model adapt case needs dynamically including new relevant parameters consideration exclud ing irrelevant ones – important endeavor efficient case navigation sys tem process context information acquired modeled formally ana lyzed run time order adapt case handling scenario ensure flexi bility bettini context models consider subject number sub jects e g person physical information object phenomenon etc subject associated multiple context elements location status etc context element observe values dynamically change described meta data subject context elements semantically described using ontologies subjects elements present current context model depend activity domain related case important advantage provided dynamic context modeling possibility add remove subjects elements context model run time complex event processing cep capturing processing complex events business organizations cently addressed complex event processing cep discipline luckham bates goal cep handle streams information different sources identify meaningful events respond quickly possi ble complex events emerge different layers organization com bine various simpler events customer calls messages social media posts stock market feeds traffic reports weather reports etc integration cep tech nology bpm great potential janiesch result develop ment decision support systems recommendation systems efficient business process management detection oriented cep class cep solutions focused identification pat tern situations combinations sequences events complemented dy namic context modeling run time definition complex contextual events fca identification evaluation case handling scenarios follow g c f utomated uidance ase anagement cience iction detected pattern situation detection oriented cep represent valuable technol ogy automated acm formal methods process modeling graphical formal prior implementation important since helps understand communicate meaning process formal modeling specification yet beneficial allows process designer check given process meets specific conditions respects business rules result desired outcome formal specification case management process assumes definition coor dinate system abstract states conditions trigger state transitions dur ing case handling specification done using formal specification language validated using formal methods computer science formal methods particular kind mathematically based techniques specification development verification software hard ware systems clarke examples formal methods include z notation b method alloy specification language etc formal methods used step wise system design provide formal specification system developed different levels details allow accurate refinement transition one level another resulting formal specification used verify requirements system de veloped completely accurately specified along lines formal methods used verify proposed case handling scenario meets objectives organization respecting contracts regulations asso ciated discussion vision presented results academic research group implementation begins objective extend capability acm sup porting systems transform useful assistants experienced guides reliable advisors trying answer question makes perfect case manager high lighted following characteristics objective well argued reasoning • capability value alternatives uncertainty • capacity learn fast experience • case navigation system pictured focuses characteristics dy namic context manager supports objective well argued reasoning case thanks predictive scenario calculation mining previous scenarios accurate predictions case development made nm thanks regis tered log history scenarios improved future probably main question bothers reader last couple pages could ideas look like mixture good imagination scientific terminology leave research lab one day try answer question group works collaboration researchers order provide solid theoretical foundations algorithms working prototypes case navigation system depicted article first going create models algorithms generic system consider concrete application domain g c f utomated uidance ase anagement cience iction next step create prototype navigation system concrete domain e g banking insurance administration legislative etc prospective prototype however considered working system simulated validated tested multiple first toy real life exam ples simulation validation phase followed learning phase algorithms tuned based existing cases potentially im prove accuracy research development activities summarized figure figure research development activities case navigation system challenges main challenges face roughly divided three categories theoretical challenges related overall problem complexity number • unknowns manage technological challenges e g scalability robustness algorithms • availability quality appropriate ict technologies challenges related adoption users e g user perception com • plexity versus utility appreciation willingness adopt give examples related scientific objectives first spite effectiveness approaches based formal semantics model checking theorem proving rarely used practice due complexity high implementation cost indeed formal specification languages typically based first higher order logic reduction real life problem e case handling logical formula represents complex task requires specific skills designer far formal methods successfully used design development safety critical systems main critique approaches based formal concept analysis related scalability computation update galois lattices complex tasks especially input data large evolves frequently seen serious drawback development automated guidance acm cope problem several approaches based filtering techniques proposed recent works demonstrate possibility generate galois lattice data stream real time particular tools like fca stream miner tool melo implement approach successfully used anomaly detection telemetry data scalability context acquisition platforms pointed issue con text aware acm indeed dcm component case navigation system de scribed needs observe important number elements identify han dle complex business events potentially involves connecting multiple distrib uted information sources recent solutions developed fields pervasive sys tems sensor networks demonstrate possible handle hundreds sensors observing context information another critical challenge related heterogeneity contextual information dcm component deal multi scale context information g c f utomated uidance ase anagement cience iction range simple coordinates coming gps complex client market de scriptions coming cloud platforms social networks rfids personal mo bile devices heterogeneous information represented using multiple scales demanding expressive models ongoing issue considered nu merous research teams complex event processing addresses issues related handling multiple heterogeneous information sources problems described mostly illustrate theoretical challenges regard ing technological adoption challenges refer gartner hype cycle fig evaluates ure illustrates hype cycle emerging technologies maturity adoption future direction technologies trends helps us illustrate technological challenges particular hype cycle highlights evolving relationships humans machines according research predictive analytics technologies already reached plateau productivity phase currently becoming mainstream technology com plex event processing content analytics technologies also pave road context aware acm currently peak inflated expectations phase meaning value technologies yet correctly estimated reputation grounded success failure stories according gartner content analytics cep technologies reach maturity plateau years figure figure gartner hype cycle emerging technologies passage purely theoretical case navigation system described article concrete system deals real life example presents whole set new challenges highlight two select right level granularity identify relevant • ternal contextual parameters affect produced recommen dations determine case scenarios task easy even professional case manager years experience main risk source gartner august http www gartner com newsroom id g c f utomated uidance ase anagement cience iction get system either naïve abstracts away many parame ters produces trivial recommendations complex produces scenarios recommendations impossible decipher validate specify improve system logic collect • substantial amount data case management history past cases un fortunately organizations often collect history even rarely keep trace standard format easily used understood paper presented concept case navigation system grounded academic research group idea extend capabilities acm supporting systems today transform useful assistants experienced guides reliable advisors though perspective fully automated case management sounds like science fiction still far inventing hal exciting functionalities context aware scenario prediction evaluation envisioned",
  "2014-ZRS": "introduction enterprises traditionally implemented formal centralized forms organizational structure hierarchical matrix structures structures communication patterns roles decision rights strictly defined allows management high degree control enterprise therefore enforce compliance standards procedures policies results highly stable enterprise however comes expense agility difficult organizations quickly adapt changing environment centralized structures appropriate business environments past modern business environments demand high level agility common components modern business environments include cooperation different organizations rapidly changing business activities processes rapidly changing competitive landscape order properly handle components high level enterprise agility necessary centralized organizations decisions need discussed levels hierarchy order pre proceedings caise forum obtain appropriate justification approval takes time time decision made often late effective contrast decision making operational level allows quick decisions enabling organization take advantage opportunities quickly decentralized structures networked organizations examples important note lack rigidity formal structure mean lack organization still important decentralized enterprise maintain order activities governance governance needs based underlying decentralized structure instead centralized one consequently decentralized organizations need solutions problems faced centralized organizations – business alignment – solutions need supportive decentralization centralization addressed practice enterprise architecture ea today ea frameworks methodologies need hence able handle environments rapidly changing business conditions identified important problem ea context reasons ensuring suitability modern ea frameworks decentralized organizational structures governance highly dynamic becoming increasingly relevant study reports alignment decentralized organizational structure ea use real organization elicited problems analysis respect support current ea frameworks well architectural principles considered able solve problems paper organized follows section reports summary case study research higher education organization requested starr form situation – task – approach – result – reflection section provides conclusions directions future work case study organizational structure defines rules according allocation responsibilities resources coordination supervision made organization three key organizational properties differentiate centralized decentralized organizations geographical dispersion coordination authority decision rights standards regulations communication patterns properties used base knowledge assess style case organization analyze governance rules place situation analyzed prominent university higher education sweden common university includes number units faculties faculty departments nowadays units becoming independent due several factors governance organizations facing decentralization • geographical dislocation faculty departments moved main university campus example computer systems sciences department located kista leading swedish cluster proximity enables cooperation companies students mentoring programs internships graduate work opportunities guest lectures etc • decentralization management decision rights type push delegated principal faculty boards deans faculty departments groups • formal informal communication patterns formal hierarchical communication faculty departments informal direct communication within departments present example administrative tasks e g registration graduate courses postgraduate research etc primarily formal whereas course curriculum established departments cooperatively using informal communication links hence organization seen high decentralization structure tendencies task notions organizational structure governance ea interrelated ea principles reflect style organizational structure governance follows organizational structure time comply architecture adopted ea principles ea includes governance processes principles regarding operations data architecture infrastructure etc extent similar processes governance however ea governs development implementation throughout organization directing evolution business environment towards desired design future e primary strategic governance handles everyday operations within organization e primary operational study analyze aspects university ea order assess decentralization support provided contrast needed elicit conflicts architecture principles use organizational structure governance rules thus provide basis guidelines ea provide needed support approach four separate interviews conducted one university departments order get holistic view way work across whole university roles interviewees vice division lead head postgraduate studies head undergraduate studies head interviews conducted semi structured manner starting set open ended questions promote interviewees elaborate views organization processes decision making coordination etc addition many official documents available pre proceedings caise forum organizational structure thus making document study viable documents formed study described table table documents used documentation study document description contains descriptions different organizational areas institution homepage institution well organizational structure publicly available documents specify authority delegations authority delegation said authority insinuation organizational units documents official rule book institution detailing rules rule book decisions must followed institution results according ea related literature enterprise architectural principles established define general rules guidelines use assets across enterprise purpose study chosen concentrate following adopted ea principle ─ integrated systems across university owing decentralized organizational structure described details uncovered interviews decision rights pushed operational level related organizational structure resulted highly decentralized governance table place governance framework name org property description centralization authority department university coordination decentralized separate departmental structure report university adoption coordination department dictate used decentralized department research projects centers department example groups develop use systems desire approval coordination projects run independently mixed groups though sometimes need approval department department expensive governance organizations facing decentralization collaboration coordination decision cooperate decentralized departments university made departmental based cooperation resulting mutual benefit management coordination essential systems e g administrative centralized systems hr whole university essential controlled university board central systems department required pay use systems management coordination non essential systems e g course portals mixed schedules centrally budgeted non essential departments required use central systems use systems informal communication patterns used communication decentralized e changes performed systems department informally spread use systems practice governance structure described table become mismatch settled ea principle integrate systems mismatch resulted wasted financial resources example consider situation outlined interview vice head department concerned acquisition software system objective integrated facility management across departments e integrated systems principle following principle software system bought university wide use since principle holds whole enterprise purchase decision university board e departments involved decision making process contrast following decentralized governance place use non essential software systems table subset consequently refused shut local systems switch global one consequence principle integration failed departments able protect interests local decentralized systems tailored needs still charged acquired system never used another important mismatch comes fact centralized decision making e faculty level uses formal hierarchical communication patterns decentralized case governance relies informal communication see table practice supporting mechanisms hence important decisions changes well communicated time severe working consequences employees students using reflections case many properties decentralized organization therefore needs ea supportive decentralization currently case pre proceedings caise forum ─ ea implicit elaborate details adopted principles ─ ea maintains centralized principles therefore fully supportive decentralization place consequence governance initiatives fail decisions become inefficient hence relevant investigate existing ea frameworks supportive decentralized organizations question systematically addressed three key organizational properties – geographical dispersion b coordination authority decision rights standards regulations c communication patterns used assess three wide know frameworks togaf fea zachman framework analysis revealed support decentralization main conclusion drawn ea frameworks togaf zachman fea primarily supportive centralized federated organizational structures therefore fail address demands decentralized organizations zachman unable support significant aspect decentralization due reliance traditional organizational roles structures high centralization end togaf provide basic support ability different architecture organizational units providing space new methods architecture development however still mainly relies hierarchy central roles responsible overall coordination approval fea conclusions similar primarily supports federated organizational structures individual units architectures coordinated centralized standards must followed shown earlier important property decentralized business environment needs supported ea horizontal coordination recall governance table however three ea frameworks primarily support vertical coordination governance styles therefore addition specific guidelines frameworks supportive decentralization would improve support decentralized organizations drawing parallels domains peer peer systems used provide mechanism architecture organizing peers way cooperate provide useful service community users decentralized organizations think peer peer concept may source principles could form basis evolving current centralization focused ea frameworks ones supportive decentralization ─ peer production view enterprises composed peers peer could individual organizational unit example togaf relies architecture board responsible high level decisions governance instead central board responsible making decisions model based principle peer production creation evaluation ea artifacts could used instead would better support decentralization decision making would distributed amongst peers make organization university case department members could produce strategy governance organizations facing decentralization budget using peer production use information systems eventually faculty university boards could control advisory roles ─ peer trust management togaf employs idea approval process grounded presence centralized authority ensure presented architectural material fact valid enterprise according peer trust management whether content proposed peer sufficient quality included overall architecture determined peers studied case principle could provide formal mechanism communication among peers needed hence avoid situations peers informed new proposal change use suggested peer peer principles seek maintain departmental independence becoming prevalent university addressing incompatible architecture components results would accomplished cooperative classification essential non essential systems departments example giving department vote systems classified essential required used integrated departments departments option choose want utilize systems classified non essential changes would help reconciling differences architecture principle emphasized case without actually changing decision rights still pushed systems still integrated throughout organization change governance university level addresses conflict arise decision made use decentralized system rest organization integrating occurred current situation conclusion future work technology serves catalyst organizational transformations important utilize right resources manner supportive organization accomplish decentralized organizations adequate ea processes principles concepts needed employed handle resources foster business co evolution decentralized environments current ea frameworks rely organizational properties becoming less useful progressive decentralization due implementation frameworks decentralized organizations becomes difficult inefficient role ea driver transformations becoming compromised order deal decentralization changes additions ea frameworks necessary order improve support decentralized business environments reflect style organizational structure operational governance rules place two specific principles peer peer architectures outlined peer production peer peer trust management indicated could used potential principles ea supportive decentralization reflections study may interest three groups case organization researchers field ea potentially organizations decentralized structures interested implementing form ea case pre proceedings caise forum organization proposed ea principle peer peer might interest application principle could offer improvements governance structure researchers study work might interest highlights potential issues traditional ea knowledge giving initial insights could solved insights conclusive research positioned starting point future research topic decentralization ea work may interest organizations adopted interested adopting decentralized structure looking insights governance successfully done environment future work envisage propose concrete mechanisms patterns communication coordination decision making centralized decentralized mixed federated organizations see transformed concrete ea principles explicitly integrated ea methodologies",
  "2014-ZRSa": "introduction enterprises traditionally implemented formal centralized forms organizational structure hierarchical matrix structures structures communication patterns roles decision rights strictly defined allows management high degree control enterprise therefore enforce compliance standards procedures policies results highly stable enterprise however comes expense agility difficult organizations quickly adapt changing environment centralized structures appropriate business environments past modern business environments demand high level agility objective ea methodologies created early 1990s align capabilities business needs via centralization main price pay loss flexibility inertia decision making time however much less critical make disciplined justify investments today flexibility becomes strategic modern organizations transparent boundaries loose business units agile processes impossible centralize hand still crucial maintain disciplined approach evolution using appropriate governance principles organizational units remain independent could also efficiently work together whole rapidly changing business conditions structures identified important problem ea reasons ensuring suitability ea frameworks decentralized organizational structures governance highly dynamic increasingly relevant research envisioned addresses problem suitable ea governance principles decentralized organizations three concepts focus interrelate ea compliant governance including principles correlating way reflect given organizational structure upon described challenge defined following research question yes existing ea frameworks need extended order support governance decentralized organizations using design science research method including literature studies interviews document studies empirical case data collection qualitative approach data analysis propose artifacts summarizing shortcoming current ea frameworks formulating requirements governance decentralized environments paper organized follows section gives overview different organizational structures section brief description research method proposed artifacts given sections describe deficiencies conventional ea frameworks providing decentralization support section illustrates misalignment ea principles organizational structure governance principles example one organization higher education sector based study section revisit governance principles defined weill ross provide explicit requirements governance support decentralization discussion conclusions directions future work presented section centralized decentralized organizations organizational structure defines rules according allocation responsibilities resources coordination supervision made organization order differentiate centralized decentralized organizations consider three organizational properties geographical dispersion coordination communication patterns continuum centralized decentralized structures federated organizations emerged combining characteristics centralized organizations centralized authority planning regulations example local leadership well competitive local objectives including business units decentralized aspects table organizational properties centralized vs decentralized organizations property centralized decentralized geographical single location geographically distributed dispersion reliance work together coordination vertical coordination decision lateral coordination authority authority rights strictly defined decision making rights decision rights act top strict pushed level regulations governance control business units groups even upper management rigid individuals individuals define structuring accountability roles responsibilities roles responsibilities heterogeneous goals individual standardized methods entities organization procedures homogeneous goals collaboratively working towards set high level authorities common complementing goals communication communication patterns informal communication lines patterns follow hierarchy direct flexible constantly changing interactions communica communication lines fluid project tions practiced oriented teams research method desire research combine literature empirical research develop novel artifacts addressing problem emphasized introduction followed design science ds research method also presented nutshell method composed five research activities input output relationships explicate problem outline artifact define requirements design develop artifact evaluate artifact activities commonly carried iterative incremental manner enable changes improvements intermediate results well final research artifacts adhering space limitations paper presentation mostly pay attention content artifacts ds process achieving details application ds research reader refer research aimed develop several artifacts first artifact presents conclusions obtained literature study potential deficiencies current ea support decentralized organizations artifact details elaborated section present summary second artifact result empirical case study presented section proposing ea principles supportive decentralized organizations third artifact making use previous one followed additional literature study proposes set governance principles decentralized organizational context presented section deficiencies ea frameworks support decentralization ea frameworks include artifacts specify current state company architecture target architecture identify best cross gap architectural roadmap set standards rules follow transformation ea principles elements often addressed literature ea description process organization execute order obtain ea description called ea method assure organization continuously follow ea principles achieve designated goals architecture third element defined ea engine presence reflects fact ea static makes organization change changing time research effort first task investigate existing ea frameworks supportive decentralized organizations three key organizational properties section – geographical dispersion coordination communication patterns used assess three wide known frameworks togaf fea zachman framework analysis revealed support decentralization main conclusion drawn ea frameworks togaf zachman fea primarily supportive centralized organizational structures therefore fail address demands decentralized summarized view provided table table existing support decentralization ea frameworks ea existing support centralized existing support component organizations decentralized organizations ea method approval process based hierarchy federated architectures architecture development coordinated possibility adapt adm supervised evaluated well defined specific organizations roles company ea teams coordinate architecture development architectural work communicate results process involves multiple results controlled evaluated centrally stakeholders ea description strategic level architectures hierarchy architecture partitions architecture principles common set architecture reference models reference models hierarchical organization segment architecture ea artifacts explicitly defined roles concept shared vision domains ea engine architecture board formal governance integration various framework common principles entire segment architectures organization global commitment taken assured centralized granted centrally managed architecture management governance repository important properties decentralized business environment need supported ea horizontal coordination lateral communication patterns however three ea frameworks primarily support vertical coordination governance styles top bottom formal communication patterns case study analyzed prominent university higher education sweden objective investigate alignment organizational structure including organization functions ea governance rules use common university includes number entities faculties faculty departments units nowadays entities becoming independent due several factors geographical dislocation faculty departments moved • main university campus example computer systems sciences department located kista leading swedish cluster proximity enables cooperation companies students mentoring programs internships graduate work opportunities guest lectures etc decentralization management decision rights type push • delegated principal faculty boards deans faculty departments units formal informal communication patterns formal hierarchical • communication faculty departments informal direct communication within departments present example administrative tasks registration graduate courses postgraduate research etc primarily formal whereas course curriculum established departments cooperatively using informal communication links hence university seen high decentralization tendencies study analyze aspects organization ea governance order assess decentralization support provided reveal deficiencies formulate guidelines ea governance order overcome deficiencies case representative higher education sector universities adopt agile forms organization including virtual research labs scientific interest groups research joint master programs education studied university examples involve geographical dislocation decentralization management virtualization communication use informal communication patterns approach four separate interviews conducted one university departments order get holistic view way work across whole university roles interviewees chosen cover major business activities institution – management research education support vice division lead head postgraduate studies head undergraduate studies head support interviews conducted face face semi structured manner starting set open ended questions promote interviewees elaborate views organization processes decision making coordination etc details interviews reader referred addition many official documents organizational structure available thus making document study viable documents formed study described table table documents used documentation study document description institution homepage contains descriptions different topic areas institution well organizational structure authority delegation publicly available documents specify authority delegations documents said authority insinuation organizational units rule book official rule book institution detailing rules decisions must followed institution results study found despite evident decentralization ea principles used studied organization largely rely upon centralized coordination vertical communication patterns hand governance mechanisms currently used organization often adhere decentralization thus represent mismatch existing ea problem serious constraint successful evolution organizational purpose study illustrate findings example one established ea principle ─ integrated systems across university owing federated organizational structure details uncovered interviews decision rights pushed operational level related organizational structure resulted highly decentralized governance table place governance mechanisms name org property description centralization authority coordination department university separate decentralized departmental report structure university adoption coordination department dictate used decentralized department research projects centers department example units develop use systems desire approval coordination projects run independently groups mixed though sometimes need approval department department expensive collaboration coordination decision cooperate departments decentralized university made departmental based cooperation resulting mutual benefit management coordination essential systems e g administrative systems centralized hr whole university controlled essential central university board department systems required pay use systems management coordination non essential systems course portals mixed schedules centrally budgeted non essential departments required use central systems use systems communication informal communication patterns used e decentralized changes performed systems department informally spread use systems governance mechanisms described table non alignment established ea principle integrate systems consequence governance initiatives typically fail decisions become inefficient example immediate consequence wasted financial resources consider situation outlined interview head department concerned acquisition software system objective integrated facility management across departments e integrated systems principle following principle software system bought university wide use since principle holds whole organization purchase decision university board e departments involved decision making process contrast following decentralized governance place use non essential software systems table subset consequently refused shut local systems switch global one consequence principle integration failed departments able protect interests local decentralized systems tailored needs still charged acquired system never used improve situation following problems need resolved ea principles aligned evolving organizational structure − acknowledging novel modes coordination communication part ea engine governance transparent aligned − established ea principles particular adequately support decentralization ensure efficient coordination communication organizational center sub entities recommendations peer peer principles drawing parallels domains peer peer systems used provide mechanism architecture organizing peers way cooperate provide useful service community users decentralized organizations think peer peer concept may source principles forming basis evolving current centralization focused ea frameworks ones supportive decentralization peer production see organizations composed peers peer could individual organizational unit example togaf relies architecture board responsible high level decisions governance instead central board responsible making decisions model based principle peer production creation evaluation ea artifacts could used instead would better support decentralization decision making would distributed amongst peers make organization university case departments members could produce strategy budget using peer production use information systems eventually faculty university boards could control advisory roles peer trust management togaf employs idea approval process grounded presence centralized authority ensure presented architectural material fact valid enterprise according peer trust management whether content proposed peer sufficient quality included overall architecture determined peers studied case principle could provide formal mechanism communication among peers needed hence avoid situations peers informed new proposal change use suggested peer peer principles seek maintain departmental independence becoming prevalent university addressing incompatible architecture components results would accomplished cooperative classification essential non essential software systems departments example giving department vote systems classified essential required used integrated departments departments option choose want utilize systems classified non essential changes would help reconciling differences architecture principles emphasized case without actually changing decision rights still pushed systems still integrated throughout organization change governance university level addresses conflict arise decision made use decentralized system rest organization integrating occurs current state governance principles federated decentralized organizations emphasized beginning notions organizational structure governance ea interrelated ea specifies architecture principles according business environment organization evolve thus reflect style organizational structure governance ensures architecture principles respected handling everyday operations within organization authors acknowledge organizational structure company centralized federated decentralized functions particular affect governance governance mechanisms hence need selected designed taking structure account result extensive study different organizations weill ross define generic principles governance practice inspired principles consider organizational structure place upon analysis concluded principles refer structures mechanisms adhering centralized organizations require hence adaptation federated decentralized organizations particular adaptation needed coordination mechanisms communication patterns governance relies upon proposed adaptations mainly based concepts defined peer peer domain e peer production peer trust management section distributed content production peer production relevance accreditation peer review process moderation peer produced rating peer trust management decentralized decision making group decision making objective pursue twofold first want formulate requirements governance order better support decentralization organizations second provide relevant recommendations tools use order facilitate coordination communication section principle actively design governance according management actively design governance around enterprise objectives performance goals actively designing governance involves senior executives taking lead allocating resources well support business processes decentralized organizations due management decentralization senior executives play leading role process coordination resource allocation instead coordination grounded principles distributed content production group decision making traditional reporting approval process used centralized organizations replaced peer review processes peer produced rankings senior executives play role moderators content creation lateral communication patterns e g line line informal discussions content sharing employed replacing formal top bottom communication patterns based hierarchy use social software communication production relevant content important requirement governance decentralized organizations traditional meetings workshops devoted governance design highly inefficient assume centralized planning require physical presence assigned specialists given location given time studied case governance principles supporting peer review design well recognized one example unit proposed software system thesis management reviewed units iterations system development hence next step could extend good practices coordination communication patterns reviewing facilitate peer production well summarize rq1 lack centralized coordination governance design process adhere principles distributed content creation management recommendation group decision making peer reviewing seen alternative centralized approval process coordination rq2 governance encourage collaborative design entity easily benefit contribute common organizational knowledge recommendation adoption systematic use non knowledge management tools rq3 mechanisms supporting lateral communication patterns informal social exchange semi formal discussions encouraged replacing vertical hierarchy based communication patterns recommendation lateral communication facilitated using social software platforms federated organizations governance designed multiple levels unit level support autonomy unit corporate level maintain consistency foster cooperation units successful coordination mechanisms involve elements centralized coordination e g centralized definition objectives performance goals hierarchical assignment tasks corporate level unit level decentralized elements based peer production principles defined decentralized organizations lateral communication patterns e unit unit top bottom communication patterns unit corporate level vice versa used efficiency communication content creation decentralized federated organizations gained using commenting tools line discussions ranking many features provided social software possibility easily instantaneously evaluate content see evaluation others get receive feedbacks guarantees massive user involvement fosters relevant content creation rq4 governance needs support synergy units corporate level units autonomy unit level combining centralized coordination distributed peer production see also rq1 rq5 mechanisms combining lateral vertical top bottom communication patterns adopted e g peer reviewing moderation see also rq3 principle know redesign according rethinking whole governance structure requires individuals learn new roles relationships learning takes time thus governance redesign infrequent recommendation change governance required change desirable behavior decentralized organizations compared centralized organizations governance structure global change impacts whole organization entities decentralized organizations redesign governance locally thus smaller scale organizational learning takes less time changes made frequently allowing agility flexibility whole organization benefit experience business units reusing best practices sharing best practices lessons learned units contribute common pool knowledge foster organizational learning studied case unit specialized technology enabled learning tel capable propose redesign use new solutions principles flexible learning spanning line improve organization business however present time neither systematic coordination installed tel unit real communication mechanism place share knowledge redesign rq6 governance needs encourage shorter cycles organizational learning flexibility agility rq7 systematic sharing practice lessons learned integrated part governance redesign recommendation communities practice social networks document libraries examples tools facilitating knowledge sharing federated organizations organizational learning process consists short cycles business units redesign governance locally long cycles corporate governance reorganized local redesigns aligned corporate governance governance evolution strongly depends capacity units share reuse local practices lateral communication patterns unit unit top bottom communication patterns unit corporate level vice versa used rq8 governance needs support short cycles organizational learning unit level long cycles corporate level see also rq7 principle involve senior managers argued organizations effective governance senior management involvement example cios must effectively involved governance success senior managers must participate committees approval processes performance reviews decentralized federated organizations important involve senior management local unit management governance forming committees boards expert groups communities practice cop seen alternative assigned groups senior managers steer governance cop refers group people share concern passion something objective share create common skills knowledge expertise groups formed volunteer basis hierarchical assignment also gain trust reputation within community professionals exist due lack central authority approval process grounded principles group decision making communication accent made knowledge sharing cooperation authority hierarchy due lack appropriate coordination mechanisms discussed case problem non involving units management governance corporate level example section illustration rq9 units involved governance management via boards expert groups recommendation cops alternative centrally assigned boards groups rq10 combination centralized approval process distributed decision making adopted federated organizations recommendation performance review done using peer reviewing principles principle make choices according governance highlight conflicting goals debate number tradeoffs increases governance becomes complex top performing enterprises handle goal conflicts clear business principles ineffective governance observed result conflicting goals unmanageable number goals typically arose making strategic business choices nothing observed good managers trying diligently meet goals became frustrated ineffective decentralized organizations maximum autonomy units different event conflicting goals peer ranking peer trust management peer reviewing group decision making examples mechanisms adopted coordinating conflict solving decision making social software platforms indispensable instrument support mechanisms within organization lateral communication patterns replace traditional approval process case illustrated section principle yet implemented adequately present time choices goals either determined centrally solely units e without communication units e goals shared rq11 governance needs support local units goals supporting group decision making recommendation peer reviewing peer ranking peer trust management examples mechanisms support democratic choice decentralized organizations federated organizations goals priorities set different levels corporate unit unit level goals compliant corporate level goals units coordination mechanisms communication patterns decentralized organizations used negotiate resolve local conflicts rq12 governance needs support centralized decentralized mechanisms decision making democratic choice see also rq11 unit level compliance high level business principles principle provide right incentives following common problem encountered studying governance misalignment incentive reward systems behaviors governance arrangements designed encourage governance designed encourage business unit synergy autonomy combination incentives executives must also aligned decentralized organizations decentralized organizations support maximum units autonomy number situations however benefits whole produced collectively units synergy exceed benefits components contributed individual units lack central authority synergies hardly encouraged using regular market incentives formation however result application peer production principles creation production system based collaboration among business units cooperate without relying either market pricing managerial hierarchies coordinate common enterprise case incentives include status benefits reputation value innovation motivations cooperation characterized combination create communicate others federated organizations challenge federated organizations encourage units synergy corporate level units autonomy locally organization promote culture collaboration rather competition units collaborative environments pave road peer production systems individual units much sensitive non market incentives willing form synergies competitive environments based survival fittest principles contradictory incentives represent problem higher education organizations like one studied encouraging interdisciplinary master programs university level synergy exchange reputation recognition efficient department evaluated financially rewarded based individual performance rq13 governance needs encourage cooperation instead competition recommendation use nonmarket incentives e g status reputation principle design governance multiple organizational levels authors argue large multi unit organizations necessary consider governance several levels starting point enterprise wide governance driven small number enterprise wide strategies goals enterprises separate functions divisions business units geographies require separate connected layer governance assembling governance arrangements matrixes multiple levels enterprise makes explicit connections pressure points principle explicitly refers governance complex organizational structure proposes multi level governance decentralized organizations governance arrangements decentralized organizations vary set autonomous silos single distributed governance resulted collaborative efforts individual units cases one governance level explicitly defined discussed case governance defined multiple levels department level faculty level design however systematic coordination within level levels provided rq14 distributed governance encouraged organizations cooperative culture highly competitive environments governance silos needs supported federated organizations federated organizations support units synergy corporate level units autonomy locally unit level least two governance levels defined special attention paid adoption collaborative software facilitating lateral communication units rq15 governance needs defined least two levels corporate unit principle provide transparency education according transparency education often go together education transparency vice versa transparency governance processes confidence governance also less transparent governance processes less people follow communicating supporting governance single important role senior leaders decentralized organizations communication knowledge sharing supported social software extremely important providing transparency education governance adopting technique tools distributed content production collaborative content management organization easily naturally involve employees design governance process thus guaranteeing transparency users lateral communication patterns used facilitated senior experts virtual live structured semi structured e g webinars workshops informal discussions e g forums chats knowledge cafes existing governance practice contribute education foster organizational learning given case principle enabled means internal social software however broad use typically ensured situations higher level provided approval knowledge given recommendations use e lateral communication place rq16 governance needs ensure employees involvement governance design process recommendation distributed content production management social software rq17 foster education organizational learning governance needs extensively use lateral communication patterns federated organizations techniques tools distributed content production collaborative content management play equally important role achieving transparency governance process decentralized organizations role senior leaders setup learning objectives supervise education process evaluate outcomes discussion conclusion future work study addressed challenge suitable ea governance principles decentralized organizations arguing existing frameworks offer limited support new principles needed order make fully support decentralized organizational structures technology serves catalyst organizational transformations important utilize right resources supportive manner accomplish decentralized organizations adequate ea processes principles concepts need employed handle resources foster business co evolution used institution higher education sweden illustrative case study case chosen example organization exhibits many decentralized properties particular respect governance focus analyzing state ea order assess decentralization support provided contrast needed proposing features ea particular governance principles could provide needed support proposed recommendations mainly based principles defined peer peer domain – peer production peer trust management principles evaluated demonstration interviewees case argumentatively seen applicable valid university contexts shifting decentralization however validation issue conducted organization types hence current work based single case study illustrated argued limitations current ea non alignment governance place thus gave us foundation proposing new principles ea governance however case study validate proposed principles generalize stream forward foundations case section revisited governance principles defined weill ross following defined set requirements governance supporting specifics federated decentralized organizations believe may interest three groups case organization researchers field ea potentially organizations decentralized structures interested implementing form ea case organization proposed mechanism peer production reviewing trust also embedded requirements adequate governance might important application could offer improvements governance structure researchers study work might interest highlights potential issues traditional ea knowledge giving guidelines could solved work may interest organizations adopted interested adopting decentralized structure looking insights governance successfully done environment future work short term objective evaluate conclusions given case context extend study organizations long terms envisage details analyze mechanisms coordination decision making well communication patterns centralized decentralized mixed federated organizations see transformed governance type patterns merge exiting ea methodologies",
  "2015-KRDLG": "introduction crisis management process example knowledge intensive process kips strongly depends situation context tacit knowledge human actors plays central role process hand crisis manage ment comply federal regulations emergency management guidelines characteristics make specification implementation crisis management solutions challenging paper consider case flood management process specified floods oka river moscow region russia process implemented part cos operation center cosoc smart city solution developed elena kushnareva irina rychkova r´ebecca deneck´ere b´en´edicte le grand cos ht existing cosoc solution designed following tradi tional workflow based approach flood management process specified sequence activities executed according current condi tions e water level status flooded regions compliance emergency management guidelines defined ministry emergency situations mes russia experience shows execution workflows proposed cosoc often problematic due unforeseen circumstances e g lack resources disrupted tra\u0000c etc current system provides limited support process flexibility order implement alternative scenario process manager often switches o↵ line mode improve process flexibility adaptability process specification capture intentional perspective answer question carry activity procedure understand ing intentions behind guidelines help define alternative scenarios situations default scenario implemented process specification focus done instead must done case process outcomes need fixed design concrete procedures activities leading outcomes chosen process manager run time paper introduce approach modeling crisis management pro cess goals executable scenarios use map reason intentions behind flood management process strategic level map goal oriented modeling language introduced rolland use statecharts formalism representing flood management pro cess operational level statecharts state oriented modeling formalism defined harel align strategic operation process levels translate map model flood management process statecharts statecharts specifications executable simulate flood management process showing process goals defined strategic level achieved various scenarios executed operational level remainder paper organized follows section introduce case study flood management process specify process op erational level using statecharts section specify goal model flood management process section translate map model statecharts section illustrate complete model flood management process strategic operational levels simulated yakindu statecharts tool section draw conclusions flood management process operational level section briefly introduce case study flood management pro cess show process modeled statecharts formalism modeling crisis management process goals scenarios flood management process floods oka river moscow region seasonal events caused increase flow river provoked intensive snow melting spring months cities built along oka river confronted risk flooding expect important damages a↵ecting thousands people floods oka also represent substantial risks critical infrastructure facilities situated area railway bridge pontoon road bridge electric power plant etc along types crisis flood management process comply emergency management guidelines defined mes docu ment prescribes activities carried crisis situations di↵erent public services agencies city specified section flood management process implemented part cosoc process aware information system used government manage variety cross domain operations within city functions cosoc roughly divided three groups data collection visualization ii analysis situation decision making iii triggering response processes cosoc process manager member city administration responsible monitoring situation handling emerging issues accept decline solution proposed system workflow triggered monitors execution intervenes decision making required problematic situation resolved process manager pro vide feedback system request process improvement modification monitored parameters list etc previous work examined bpmn specification flood management process designed cosoc showed capacity pais support flexibility process inherent underlying process modeling paradigm order provide flexibility process design state oriented model flood management process yakindu statechart tool sct using formalism statecharts statecharts model statecharts formalism specifies hierarchical state machines hsm ex tends classical finite state machines fsm providing depth possibility model states multiple hierarchical levels orthogonality possibility model concurrent independent sub machines within one state machine broadcast communication possibility synchronize multiple concurrent sub machines via events statecharts model fig describes process set states e g alert emergency restoring normal functioning etc transitions process execution starts initial state terminates final state elena kushnareva irina rychkova r´ebecca deneck´ere b´en´edicte le grand fig statechart model flood management process sequence states transitions leads initial state final state seen process scenario statecharts unlike petri nets transitions associated execution activity state transition triggered specific event combination events example event e2 water level h 10cm keeps rising triggers transition alert emergency activities producing events selected run time call deferred binding result process specification divided two parts state transition part defined set states transitions states triggering events activity part defined list activities speci fied preconditions outcomes process enactment seen dynamic selection activities produce outcomes events make process progress towards desired final state flood management process strategic level section explain choice modeling formalism introduce con cept map illustrated flood management process example propose procedure transforming map statechart model modeling crisis management process goals scenarios choosing formalism processes may formalized intentional way goal modeling approaches model processes according purpose actors organizations quote among kaos map choose map modeling language approach allows formalizing flexible processes high level organizational intentions supports variability goals o↵ers possibility follow di↵erent strategies focusing intentional aspect enacting methodological processes operational semantic tasks goals used model strategic goals designed variable framework therefore a↵ord high level flexibility kaos supports variability well structured semantic less involved intentional aspect actors furthermore kaos rigid task decomposition modeling complex intentional processes di\u0000cult map model fig map model flood management process map specifies processes flexible way focusing intentions di↵erent ways fulfill according context actor map elena kushnareva irina rychkova r´ebecca deneck´ere b´en´edicte le grand model presented graph nodes represent intentions edges repre sent strategies edge defined two nodes related strategy used achieve intended target node may several edges entering node representing strategies fulfill intention section triplet source intention strategy target intention represents par ticular process step achieve intention target intention specific situation source intention following particular technique strategy map meta model validated several domains engineering requirement engineering method engineering enterprise knowledge development etc map corresponding flood management process presented fig three intentions specified level prepare flood secure city handle emergency intention fulfilled several strategies example handle emergency intention reached either initial intention start case need emergency evacuation citizens preparations finished secure city intention case lack resources getting electric power plant epp flooded alert final intention stop corresponds process termination attained either removing barriers restoring normal functioning objects city infrastructure flood management map model also contains recursive section handle emergency rescue operations handle emergency represents maintenance need emergency handling receiving rescue operations requests goal oriented models share problem concerning intentions operationalization map model highlights problem proposing several kind guidelines guide user navigation map explain specific intention realised specific strategy iag intention achievement guideline guideline described several ways natural language algorithm workflow etc however always di\u0000cult o↵er automatic way operationalizing guideline statecharts open essential dimension problem o↵ering automatic operationalization process contained iag statecharts semantics map section propose procedure transforming map statechart model using example flood management process discuss advantages gained transformation introduced section map specified set intentions achieved strategies achieving intentions interpreted sets states process manager desires reach however reaching state necessarily mean intention achieved goals may require number actions performed achieved furthermore taking action aimed attaining goal necessarily end achieving modeling crisis management process goals scenarios goal reach state closer goal previous one result intentions statechart representation core set states actions towards attaining goal performed statechart representation strategies map flood management model transformed statecharts semantics shown fig fig statechart representation map flood management model example condition triggers handle emergency state ei ther water rises higher cm implies closing roads bridges living area epp sub state becomes unsecured fig following stat echart model living area goes unsecured state lack resources detected epp sub state turn reach unsecured state epp flooded needs secured hence lack resources need closing roads bridges flooded epp force process manager change intention secure city towards handle emergency order fulfill goal leave state process manager request reinforce elena kushnareva irina rychkova r´ebecca deneck´ere b´en´edicte le grand ments close roads bridges secure epp words make decision strategy use example crisis decision making process statecharts easily operationalized state statechart associated list mandatory optional activities must carried upon entering upon exiting state state oriented paradigm objective flood management process follows process participants e mes police taskforce respond events occur environment e g rise water flooded epp etc executing operation procedures producing outcomes order maintain secure functioning city specified domains thus transforming map representation statechart representation enables operationalization map therefore linking process scenarios simulation process simulation yakindu statecharts tools section consider executable level scenarios flood man agement process simulating statechart model yakindu statecharts tool fig illustrates simulation process statechart model fig statechart representation map model fig clarity bottom right model represents water level detector fig simulation flood management process yakindu sct statecharts executed concurrently current situation described six active red states water level cm active intention handle emergency yet achieved extremely high water level triggers modeling crisis management process goals scenarios set procedures high risk state living area epp flooded unsecured moment roads bridges closed resources crisis control order fulfill handle emergency intention return secure city process manager needs provide epp security unse cured state would active state oriented paradigm allows deferred activity planning activity defined run time based desired outcome context e resources etc response unforeseen conditions process manager select next best step list available activities thanks deferred binding also define new activity better adapted situation thus state oriented paradigm creates recommendation system process manager plays leading role scenario definition conclusion crisis management process safety critical failure could result loss life significant property environment damage ensure safety security activities performed crisis management highly regulated federal level however crisis handling requires high agility never follows scenario experience cosoc processes shows concrete flood manage ment process relies lot experience decisions process manager assessment situation adaptive scenario planning handling unpre dictable situations represent challenges supporting information system combining map statecharts arrived formalism defines human intentions drive process result intention driven approach process modeling o↵ers intention operationalization provides process manager guidelines goals identification scenarios execution future work intend test process modeling approach cases implement part recommendation system within cosoc",
  "2015-KRLG": "introduction natural technological crisis occur result unpredictable se quence events putting lives people risk crisis management process comply various norms regulations time needs constantly deal uncertainty adapt process scenario current situation modern city administrations seek automate crisis management imple menting part process aware information systems pais pais software system manages operational processes involving people applications based explicit process models pais design mostly based activity driven paradigm according paradigm process specified ordered set activities system execute paradigm ensures crisis management process compliant norms regulations design however supports limited process flexibility response unforeseen situation run time elena kushnareva irina rychkova b´en´edicte le grand experience cos operation center cosoc smart city solution developed cos ht company russia paper consider example flood management process im plemented part cosoc examine existing bpmn specification process propose alternative state oriented specification process using statecharts formalism statecharts formalism allows designer focus must done e expected outputs postconditions instead must done e concrete activities ordering result concrete activities suit best given situation selected even invented process manager run time call deferred binding statecharts specifications executable work simulate stat echarts specification flood management process yakindu sct http statecharts org show instant animation process combined deferred binding activities improves process understand ing enables interactive design testing mandatory adaptable process scenarios paves road automated recommendations findings summarised follows bpmn focuses activities ordering thus ensures compliance design statecharts formalism contrast focuses expected outcomes allows deferred binding activities run time propose en visage future work combine formalisms crisis management process specification ensuring time required degree control flexibility yakindu sct provides simple yet powerful tool animation process scenarios used complement conventional process spec ification analysis techniques developing methodology state oriented simulation based process design analysis needs addressed future remainder paper organized follows section discuss related work section introduce running example flood management process oka river moscow region russia section provide brief overview statecharts formalism sections show flood management process specified statecharts animated using yakindu statecharts tools section draw conclusions present perspective work related work crisis management widely addressed researchers management science leading ideas crisis management business environment pre sented context concepts practice risk crisis management public sector discussed multidisciplinary approach crisis management defined works mostly targeted towards federal agen cies city administration policy makers practitioners researchers man modeling animation crisis management process statecharts agement business administration knowledge works discuss challenges crisis management supporting information sys tems example highlights importance context awareness crisis management crisis management process example case management process cmp davenport defines case management process process pre defined repeatable depends evolving circumstances decisions garding particular situation e case adaptive case management acm paradigm developed group practitioners body knowledge acm extensively de veloped practitioners best solutions regularly reported book series wfmc global awards excellence case management ever methodologies formalisms cmp modeling rarely discussed according acm cmp must organized around collection data artifacts case tasks ordering shall adapted run time according evolution case circumstances case related data agree authors conventional activity oriented paradigm restrictive specifying case management crisis man agement processes particular moreover claim capacity pais support process flexibility inherent underlying process modeling paradigm activity oriented paradigm remains mainstream paradigm pais design within activity oriented paradigm process specified imperatively ordered set activities system carry examples activity oriented formalisms include bpmn yawl activity diagrams uml provide better support process flexibility activity oriented formalisms extended declarative parts constraints configurable elements possibilities add modify activities run time remain beyond scope approaches whereas activity oriented paradigm e\u0000cient specifying highly regulated crisis management processes hardly support run time flexibility adaptability required handling critical situation since encourages early binding activities design time hand product oriented state oriented paradigm focuses scenario adap tation supports deferred binding design time process scenario specified sequence events concrete activities produce events selected even invented run time examples product oriented modeling formalisms include state machines uml generic state transition systems state machines fsm statecharts harel created specification analysis complex discrete event systems several research groups report approaches design specify case man agement processes based product oriented paradigm approach combines product activity oriented paradigms presented case elena kushnareva irina rychkova b´en´edicte le grand handling paradigm presented formalisms extend product oriented paradigm notions goal context formalisms sup port automated recommendations user guidance providing goal situations states goal achievable known ever formalisms focus high level system specifications rarely support process analysis simulation conclude consider combining activity oriented formalism state oriented formalism provide process designer set tools ensure compliance control process execution better support run time process adaptability activity oriented model process control flood management process cos operation center cos operation center cosoc cross domain information system de veloped cos ht russia paper discuss example flood management process supported cosoc floods oka river moscow region seasonal events caused increase flow river provoked intensive snow melting spring months floods oka also represent substantial risks critical infrastructure facilities situated area railway bridge pontoon road bridge electric power plant industrial storage facilities etc flood emergency triggered water level oka river rises 10cm table provides brief description major phases flood flood crisis terminates water level gets back normal response operations terminated post crisis reconstructions begin goal flood management process cosoc dispatch assignments operation procedures according crisis development agreement emergency management guidelines defined ministry emergency situations mes selected procedures carried mes police taskforce fire brigades etc execution flood management process monitored controlled cosoc process manager underlying processes cosoc including flood management process specified bpmn activity oriented modeling formalism fig illus trates simplified model flood management process implemented cosoc modeling flood management process bpmn following flood scenario table bpmn model identifies major phases specifies operation procedures accordingly list events processed cosoc presented fig decision making logic modeled complex gateway g4 bpmn diagram various operation procedures inclusively selected modeling animation crisis management process statecharts cosoc ni detnemelpmi ssecorp tnemeganam doofl eht fo ledom nmpb eht gif elena kushnareva irina rychkova b´en´edicte le grand water level threats expected con response rise sequences inform citizens deploy equipment 10cm flood alert set temporary barriers declare emergency situation evacuate 10cm flood emergency people flooded zones prepare keeps rising temporary accommodation minor damages living emergency water supply patrol flooded 25cm areas risk disrupted zones provide boats reinforce water water supply barriers risk severe damage rescue operations secure bridges 40cm living areas ganize deviations close pontoon bridge secure strate 45cm disrupted road tra\u0000c gic infrastructure facilities industrial stor ages factories electric power plant etc severe damages liv ing industrial ar rescuing operations chemical biolog eas risk presence ical control water evacuation indus 60cm toxic substances trial storage facilities temporal accommo river disrupted electric dation citizens ity supply disrupted railway com 75cm close railway bridge munication table flood scenario driven changing water level oka river provided model ensures design full compliance norms regulations defined mes flood management process also supports flex ible scenario execution activities defined g4 selected various combinations repeated skipped however model bound num ber kind activities complex unforeseen situations unfold predefined activities accomplished e g due disrupted telecommu nication lack resources etc new activities added run time run time adaptability process scenario improved state oriented specifications require early design binding activities process scenario state oriented model process adaptability statecharts statecharts formalism specifies hierarchical state machine hsm ex tends classical finite state machine fsm providing depth possibility model states multiple hierarchical levels notion abstraction refinement levels modeling animation crisis management process statecharts fig high level specification flood management process ii orthogonality possibility model concurrent independent subma chines within one state machine iii broadcast communication possibility synchronize multiple concur rent submachines via events state statechart represents state system given time state consists possibly empty hierarchy substates representing possibly concurrent state machines substates provide details parent state superstate active configuration state set substates activated current moment events occur environment result activity execution trigger state transitions statecharts triggering event e c interpreted e occurs c holds transition event must occur order take place e e event triggers transition c c condition prevents transition taken unless true e occurs parameters optional state oriented approaches e g petri net explicitly associate state transition execution activity consider triggering event outcome concrete activity defined design time state charts specify activities focus uniquely expected comes triggering events consider outcome achieved di↵erent ways concrete activity needs executed selected invented run time deferred activity binding mentioned section thanks deferred binding design time process enactment seen dynamic selection activities produce outcomes events make process progress towards desired final state states statecharts explicitly associated activities carried throughout within state activities would represent mandatory procedures crisis management process elena kushnareva irina rychkova b´en´edicte le grand association states activities also implicit activity carried state precondition fulfilled e forbidden performance state therefore state statechart associated possibly empty set mandatory activities possibly empty set optional activities case unforeseen situations e mandatory activity result desired outcome expected triggering event occur process manager select activity list optional activities order compensate resolve situation eventually produce desired triggering event activities preconditions postconditions modeled separate model called activity chart list optional activities maintained extended dynamically run time new activities added activity chart process manager without a↵ecting statechart activity specification scope statecharts models considered paper modeling flood management process statecharts high level specification start statecharts specification defining three main states flood management process s0 flood alert s1 flood emergency s2 restoring normal functioning s1 refined two exclusive substates s1 preparation s1 emergency control s1 state preparations city facing flood carried according mes regulations place s1 triggered water level oka river rises 25cm e3 list flood control events black circle indicates s1 entered default s1 entered fig b high level specification provide correspondence original bpmn specification states indicated fig statecharts notation states depicted rectangular boxes rounded corners substate superstate relation depicted boxes encapsu lation introducing concurrent areas model four di↵erent domains flood management example four concurrent substates s1 emergency control living area transport electric power plant epp resources concurrent substates depicted regions within superstate separated dashed lines entering s1 process simultaneously enters default state corresponding concurrent substate black circles outgoing arrow indicate default states living area sub machine defines three states elevated risk high risk unsecured transitions states describe flood progress modeling animation crisis management process statecharts fig explicit resource management managed elevated risk entered water level h rises 25cm e3 events received police taskforce e g requests evacua tion rescue operations etc environment rise water level trigger high risk state events e7a e9a e10a trigger transition back safer state elevated risk events result execution operation procedures e g evacuation rescue pumping water streets others state unsecured triggered event e4 indi cating lack resources execution operation procedure occurs along lines electric power plant transport concurrent substates define submachines show corresponding infrastructure objects managed flood according regulations power plant must shut water level rises 40cm e6 water keeps rising risk facility flooded unsecured state triggered normal functioning maintained transport area water h rises 40cm limited tra\u0000c supported water level h exceeds 45cm threshold pontoon bridge closed bridge closed example state statechart associated list mandatory optional activities must carried upon entering upon exiting state state oriented paradigm objective flood management process reformulated follows process participants e mes police taskforce respond elena kushnareva irina rychkova b´en´edicte le grand events occur environment e g rise water weather changes etc executing operation procedures producing outcomes order maintain secure functioning city specified domains simulation yakindo statecharts tools designed process specification described previously yakindu sct modeler yakindu simulation environment allows us instantiate statecharts specification simulate underlying process fig il fig simulation flood management process yakindu sct lustrates execution flood management process modeled fig process starts water level oka river rises 10cm see event e0 table enters state s0 flood alert event e2 triggers state s1 flood emergency enters default exclusive substate s1 preparation fig modeling animation crisis management process statecharts water level rises 25cm s1 emergency control state entered fig illustrates active configuration statecharts upon real isation sequence events e0 e2 e3 e7 event e7 request evacuation occurs triggers transition high risk state living area region response process manager assigns tasks evacuation according scenario played yakindu water level rises 40cm e6 45cm e8 events trigger corresponding configurations latter shown fig b response threat specific tasks securing power plant e g pumping water evacuating equipment assigned process manager one several actions produces desired event e11a power plant secured triggers transition unsecured shut state statechart fig c process continues crisis handling activities e g evacua tion produce e4 lack resources event fig occurs repeatedly e4 triggers federal alert state fig e triggering event model specifies state activated e4 event occurs unsecured state living area power plant unsecured state active mod els interruption situation high priority requires involvement military forces reserves order protect citizens required resources available e5 system returns back configuration interruption occurred statecharts yakindu realised entering deep history mechanism evac uation operations compromised lack resources continue resources available eventually e7a evacuation terminated risk state living event generated triggers return elevated area fig f process terminates water level comes critical e12 mandatory scenario simulation illustrated fig shows development flood management process following sequence events e0 e2 e3 e7 e6 e8 e11a e4 e4 e5 e5 e7a e12 fig shows high level view statecharts model transi tions triggered external events e water level h visible e0 e2 e3 e12 according view process seen execution predefined operation procedures response water raise o\u0000cial norms regula tions usually focused mandatory scenarios compliance essential crisis management processes list mandatory operation procedures specified state similarly bpmn specification elena kushnareva irina rychkova b´en´edicte le grand procedures carried entering exiting throughout within state resulting mandatory process scenario represented follows e0 e2 e3 e12 \u0000 \u0000 \u0000 \u0000 detailed statecharts specification involves external also internal events combinations events result unforeseen situations moreover situations execution mandatory operation procedures com promised uncommon lack resources one typical situations situations considered o\u0000cial regulations require adaptation activities scenarios run time adaptable scenario process seen execution mandatory procedures defined mes optional adapted activities justified concrete situation refer process scenario adaptable scenario goal process seen maintain safe state means run time process enters unsafe state process manager select propose activities order generate event shall trigger transition back safe state case selection process manager select among activities enabled e valid precondition activity chart associated process process manager decides propose new activity better suits situation add activity activity chart specifying precondition expected outcome activity charts remain scope work fig show alternative activities carried given state order produce desired event would trigger transition safe state example high risk state living area submachine define two alternative ways execute evacuation people flooded areas land air former possible activities case successful termination produce event e7a evacuation successfully terminated thus trigger transition elevated risk state single adaptable process scenario realised within sequence events e7 e7a b e7 4a e7a c e7 4a e7a \u0000 \u0000 \u0000 interesting case seen resource management area besides predefined activity request reinforcement consists contacting mes process manager defines two activities based experience lead outcome e5 process execution alternative activities carried combination iteratively desired e↵ect obtained transition crisis control triggered corresponding process scenarios realised look follows e4 e5 b e4 7a e5 c e7 7b 7a e5 \u0000 \u0000 \u0000 note activities may even known design e g t7b call reinforcements via social media modeling animation crisis management process statecharts fig adaptive scenarios conclusion perspectives paper reported experience modeling crisis management process statecharts formalism also presented results simulations conducted yakindu sct whereas conventional activity oriented modeling formalisms ensure process control design provide limited support run time adaptability process scenario formalism statecharts overcome deficiency thus extend designers toolkit particular provides capabilities animated design paves road automated recommendations future work going explore capabilities present perspectives combining activity oriented state oriented paradigms improving process flexibility business process model notation bpmn defacto standard business process modeling simulation various modeling environments e g bizagi aris signavio etc support modeling simulation validation result ing process models similar tools focus designing activities combining activities scenarios ordering activities control flow configured run time number kind activities predefined design time knowledge intensive processes crisis man agement activities also subject run time adaptation adaptation supported activity oriented paradigm corresponding formalisms following state oriented paradigm process designer need design activities desired results bpmn numbers states state transitions statecharts explicitly specified design time activities however associated state transitions need explicitly defined model linked even defined fly response unforeseen situations process manager select available activities thanks deferred binding also define new activity better adapted situation elena kushnareva irina rychkova b´en´edicte le grand combining activity oriented state oriented formalisms aim im prove process flexibility bpmn specify obligatory part process validate compliance norms regulations stat echarts focus adaptive part activities prescribed bpmn explicitly linked statecharts states whereas optional list activities maintained fly process manager providing greater flexibility process exploring animated design statechart formalism yakindu sct enable animated design process crisis management simple yet powerful visual formalism statecharts allows process designer focus situations states reason terms safe unsafe states setting objectives process e maintain safe state desired case handling outcomes events designed independently activities actually produce outcomes result process simu lated sequence desired undesired external internal events whereas decision concrete activities made reflecting concrete situation active configuration history previously triggered active configurations history events occured etc developing design framework di↵erent process scenarios desired undesired events played analysed objective framework help domain experts improve process possibly find situations never considered prepared handle management recommendations system perspective state oriented paradigm creates recommen dation system process manager plays leading role scenario defi nition unforeseen situations handled within system enabling seamless improvement process aim analyzing situations together identification desired target state order generate recommendations",
  "2015-KRLGa": "introduction crisis management process followed organization deal major event threatens harm organization stakeholders general public city administrations particularly concerned crisis management examples crisis city may deal include natural disasters earthquakes floods landslides etc technological accidents e g power plant accident among others crisis management process safety critical – failure could result loss life significant property environment damage ensure safety security activities performed crisis management highly regulated city federal level activities order execution described operation scenarios procedures emergency plans used concerned public services fire fighters rescue police etc regular drills field trainings according situation concrete scenario selected predefined set assess current situation number critical parameters taken consideration e g traffic condition water level unforeseen situations e situations partly covered predefined scenarios procedures handled human actor simple cases process manager authorized define launch new workflow based experience complex situations require higher level expertise decision made specially assigned committee e g board experts modern city administrations seek automate crisis management implementing part process aware information systems pais following examine characteristics crisis order define requirements pais would support automated crisis management processes crisis management widely addressed researchers management science leading ideas crisis management business environment presented context concepts practice risk crisis management public sector discussed multidisciplinary approach crisis management research using psychological social political technologicalstructural research perspectives defined works mostly oriented federal agencies city administration policy makers practitioners researchers management business administration knowledge works discussing challenges crisis management supporting information systems example lack context awareness meteorological data rainfall sensors leads failure adapt water release plans produced context aware information system cais resulting severe flood event brisbane australia work consider crisis management particular case knowledge intensive process focus process perspective crisis management process example knowledgeintensive process kips unstructured based collaboration actors tacit knowledge human actors embedded process model à priori plays central role process davenport evaluates knowledge intensity diversity uncertainty process input output knowledgeintensive process characterized activities may change fly driven scenario process embedded importantly depend completeness available contextual information set users involved step process may defined advance rather needs discovered process scenario unfolds therefore requirements pais supporting crisis management also applied pais supporting kips threat occurrence element surprise short decision time common crisis characteristics define unpredictable nature management scenario instead creating strategies events might occur future crisis management involves reacting event occurred crisis management supporting pais provide control process execution order guarantee compliance norms regulations process flexibility another fundamental need system supporting crisis management according process flexibility summarized three abilities ability deal uncertainty b ability adapt process scenarios run time c ability evolve processes explicit specifications underlying processes play important role pais allow better communication stakeholders enable process analysis support redesign efforts work show capacity pais support process flexibility inherent underlying process modeling paradigm particular consider activityoriented state oriented paradigms discuss advantages limitations supporting three abilities mentioned illustrate findings example flood management process – crisis management process implemented part cos operation center cosoc cosoc process aware information system developed cos ht russia since cosoc solution used city administration novgorod underlying processes cosoc including flood management process designed bpmn following widely accepted activity driven paradigm assess ability system deal uncertainty need study system collects processes data order adequately assess current situation case study formulate first research question flood management process model support run time assessment crisis situation assess ability adapt process scenarios run time need study system supports user e process manager action decision making especially situations covered predefined operation scenarios formulate second research question flood management process model support run time assessment crisis situation assess ability system evolve processes need study system supports user e process manager action analysis knowledge management activities formulate third research question flood management process model assimilate new scenarios proposed process manager cycle process evolution redesign examine current specification flood management process designed using bpmn case study focusing defined research questions propose alternative model based state oriented paradigm discuss advantages regard activity oriented paradigm remainder paper organized follows section discuss process modeling paradigms study support flexibility process models section 3we present cos operation center example flood management process section discuss bpmn specification flood management process used cosoc examine activity oriented paradigm supports process flexibility section propose alternative way specify flood management process based state oriented paradigm statecharts formalism section discuss advantages limitations two paradigms present conclusions directions future work ii background section present various process modeling paradigms discuss capacity support flexibility process models within activity oriented paradigm process specified ordered set activities system carry examples activity oriented formalisms include bpmn yawl activity diagrams uml languages based workflow concepts activity oriented process modeling implies data emerges evolves within process according predefined control flow events supposed occur processed specific moments execution predefined model paradigm suits predictable highly repeatable processes crisis management processes unpredictable events process inputs occur time executions order activities therefore predefined depends current situation behavior thus captured workflow formalism order increase process flexibility better address unstructured knowledge intensive processes activityoriented formalisms extended declarative parts constraints business rules configurable elements formalisms handle process variability within potentially large number configurations scenarios however either scenarios must well identified upfront set business rules configuration elements must regularly maintained expert seen limitation crisis management processes according product oriented state oriented paradigm process seen product life cycle e set product states transitions states examples product oriented modeling formalisms include state machines uml generic state transition systems state machines fsm petri nets statecharts harel created specification analysis complex discrete event systems traditional fsms corresponding state transition diagrams efficient tackling small problems however complexity fsm model tends grow much faster complexity problem represents state explosion problem overcome introduction multiple hierarchical levels states transitions indeed hierarchy gives possibility reuse common behaviors across many states thus reduce model complexity idea explored formalism statecharts statecharts formalism specifies hierarchical state machines hsm extends classical fsm providing • depth – possibility model states multiple hierarchical levels notion abstraction refinement levels • orthogonality – possibility model concurrent independent submachines within one state machine • broadcast communication – possibility synchronize multiple concurrent submachines via events within state oriented formalism carried activities depend current state product process scenario adapted run time according evolution product paradigm suits well reactive systems specification since system response event shall defined type event also current situation system e state several research groups reported approaches design specify unstructured knowledge intensive processes based product oriented paradigm • process instances represented moving state space process model represented set formal rules describing valid trajectories approach grounded theory automated control systems • group researchers ibm propose approach incorporates process data centered perspectives based concept business artifacts • product based workflow design presented approach explores interaction product data model reflects product design process manufacture product represented workflow • authors present case handling paradigm supporting knowledge intensive business processes authors compare case handling workflow management identify four problems particular recognize lack flexibility workflow management systems acknowledge important role played product case case handling view case however remains activity oriented proposed case definition explicitly includes list activities precedence relations assuming known advance decision goal oriented paradigm extends product oriented view process successive transformations product looked upon consequences decisions leading goal goal oriented modeling formalisms examples include kaos map support decision making specifying goal hierarchies tracing decision within hierarchies context driven goal oriented process models support automated recommendations user guidance providing goal situations states goal achievable known however due unpredictable sequences events non repeatable execution scenarios knowledge intensive process hard possible model relations various process situations goals activities must executed order achieve goals work discuss crisis management processes particular examine example flood management process highly regulated crisis management requires flexibility reactivity never follows scenario activity oriented paradigm remains main choice process designers claim state oriented paradigm great potential specification knowledgeintensive processes crisis management processes particular iii cos operation center solution flood management case study section present cos operation center cosoc – cross domain information system developed cos ht russia system used administration novgorod city planned installation administration moscow region krasnodar region cosoc supports large variety processes within city including crisis management processes also introduce example crisis management process flood management process implemented part cosoc cos operation center operation center process aware information system used government manage variety processes cross domain operations within city ranging paper issuing citizens garbage collection public transport management monitoring management large scale emergencies fig screenshot cosoc executive dashboard dashboard divided three areas city map list events list data sources monitoring situation object operation center provides authorities relevant information across entire city common information space executive dashboard dashboard contains data various sources allows city service managers full comprehensive understanding issues coordinate operation multiple agencies real time functions cosoc roughly divided three groups data collection visualization ii analysis situation decision making iii triggering response processes cosoc collects data related different areas city life real time visualizes data executive dashboard fig dashboard lists events summary table option sorting key parameters level danger urgency response etc shows geographical location map stationary mobile video cameras embedded sensors measuring traffic density pollution concentration temperature radioactivity calls emails citizens reporting anomalies accidents examples data sources used cosoc collected data used calculating key indicators ki used assess situation different city areas key indicators visualized colored ki matrix fig matrix provides integrated hierarchical view current situation city cell matrix fig corresponds area city activity electricity supply water supply healthcare ecology meteorology transport color cell indicates situation green – normal yellow – alert red – reaction required purple – emergency process manager zoom cell detailed views sub areas values corresponding key indicators displayed indicator exceeds critical value e g traffic jam detected pollution exceeds certain threshold system modifies colored ki matrix respectively applicable automatically triggers response workflow predefined list solution triggered automatically cosoc generates message process manager proposes choose workflow list available solutions fig screenshot high level view colored ki matrix cosoc cell indicates area city activity color code indicates status normal – green emergency – purple process manager zoom cell order see details cosoc process manager member city administration responsible monitoring situation handling emerging issues accept decline solution proposed system workflow triggered monitors execution intervenes decisionmaking required problematic situation resolved process manager provide feedback system request process improvement modification ki list etc change requests treated technical support team cosoc undergo formal approval process implemented following section presents example flood management process oka river moscow region russia b crisis management case floods flood overflow water submerges land normally dry floods oka river moscow region seasonal events caused increase flow river provoked intensive snow melting spring months cities built along oka river confronted risk flooding expect important damages affecting thousands people floods oka also represent substantial risks critical infrastructure facilities situated area railway bridge pontoon road bridge electric power plant industrial storage facilities etc along types crisis flood management process highly regulated federal authorities including ministry emergency situations mes ministry internal affairs ministry defense example crisis management process comply emergency management guidelines defined mes document prescribes activities carried crisis situations different public services agencies city contextual parameters water level temperature characteristics flooded areas status ongoing response operations etc collected cosoc displayed executive dashboard colored ki matrix described previous section flood alert triggered daily temperature rises certain average defined season holds several days provoking intensive snow melting area flood emergency triggered water level oka river rises cm table provides brief description major phases flood oka river mes regulating authorities define distinctive list operation procedures e responses executed major phase defined table nevertheless exist situations predefined operation procedures sufficient disrupted telecommunication electricity water supply lack equipment impossibility deploy relocate required equipment – examples situations compromise predefined operation procedures resolved case basis human actor process manager process manager monitors situation using executive dashboard colored ki matrix proposes scenarios based experience understanding situation table flood scenario driven changing water level oka river water threats expected response level rise consequences inform citizens deploy cm flood alert equipment set temporary barriers 10cm declare emergency situation flood emergency evacuate people prepare keeps temporary accommodation rising minor damages living emergency water supply 25cm areas risk disrupted water patrol boats flooded reinforce zones provide water supply barriers risk severe damage rescue operations secure 40cm living areas bridges organize deviations close pontoon bridge 45cm disrupted road traffic secure strategic infrastructure facilities industrial storages electric power plant etc severe damages living rescuing operations industrial areas risk chemical control water 60cm presence toxic substances evacuation industrial river disrupted storage facilities temporal electricity supply accommodation citizens 75cm disrupted communication railway close railway bridge flood crisis terminates water level gets back normal response operations terminated postcrisis reconstructions begin iv modeling flood management process activity oriented paradigm underlying processes cosoc including flood management process specified using activity oriented modeling paradigm section examine current model flood management process specified using bpmn analyze extent specification supports flexibility answering questions stated introduction bpmn model flood management process cosoc goal flood management process supported cosoc dispatch assignments operation procedures according crisis development agreement rules defined mes regulating authorities selected procedures carried actors groups actors involved crisis handling mes police taskforce fire brigades etc following activity driven modeling paradigm flood management process explicitly modeled preordered set tasks predefined triggering conditions bpmn events process task represents assignment carried designated actor team fig illustrates flood management process specified implemented cosoc diagram made bizagi process modeler purpose article simplified original model preserving process logics structure main process elements four main actors defined flood management process cosoc mes police taskforce environment environment actor represents infrastructure provides real time information flood e g social networks wireless sensors video cameras measurement equipment process actor modeled separate pool fig show process details cosoc actor actors appear empty boxes following flood scenario table bpmn model identifies major flood phases based events received environment mes police taskforce specifies operation procedures accordingly list events presented table ii water level alerts e g e0 e2 e3 e6 e8 e12 model generated automatically infrastructure corresponding threshold reached first time events extracted reports provided human actors typically indicate beginning end operation procedures report specific issues execution procedures require immediate reaction e g e4 e7a e9a e10a e11a table ii flood management process triggered water lever h oka river rises cm e0 flood alert response alert temporary flood barriers set t1 within following 12h water level h goes back normal – process terminates sending e1 end flood alert message mes otherwise state emergency declared police taskforce starts patrol area evacuation citizens flooded zones carried t2 t4 next phase flood management triggered water level h rises cm cosoc generates assignments police taskforce provide boats start fig bpmn model flood management table ii list events processed cosoc id description e0 environment cosoc flood alert h cm e1 cosoc mes end alert e2 environment cosoc emergency h cm keeps rising e3 environment cosoc elevated risk h cm e4 police taskforce cosoc request resources e g manpower equipment e5 mes cosoc report resources sent e6 environment cosoc high risk h cm e7 police taskforce cosoc request evacuation e7a mes cosoc report evacuation terminated e8 environment cosoc alert h cm e9 police taskforce cosoc request rescue operation e9a mes cosoc report rescue operation terminated e10 police taskforce cosoc alert streets flooded e10a police taskforce cosoc report streets emergency water provisioning t5 t6 simplicity omit message flows actors fig point police taskforce regularly reports situation sending messages cosoc system uses messages detailed situation analysis planning next activities decision making logic modeled complex gateway g4 bpmn diagram process implemented cosoc cleaned e11 police taskforce cosoc alert electric power plant flooded e11a police taskforce cosoc report electric power plant secured e12 environment cosoc critical h 25cm e13 cosoc mes end emergency various operation procedures inclusively selected based activation conditions e specific event combination events occurred selected operation procedure terminates control returns g4 new iteration begins activity triggered several times activation condition satisfied example t17 pump water streets triggered several times flood along lines tasks executed activation condition met operation procedures produce outcomes events turn trigger operation procedures example execution t8 rescue operation lack resources experienced e4 triggering t7 request reinforcements examples operation procedures associated outcomes presented table iii process terminated water level falls 25cm threshold e12 flood barriers get removed reconstructions start t18 t19 message end emergency state sent e13 b analysis claim level cosoc flexibility inherent underlying process model thus strongly related selected modeling paradigm following analyze bpmn specification process answering three questions raised introduction article flood management process model support run time assessment crisis situation crisis situation cosoc assessed based contextual parameters extracted events system continuously receives number type contextual parameters defined process model design time cosoc flood management process parameters include water level oka river air temperature surface characteristics flooded zones e g presence medical childcare facilities strategic objects etc status infrastructure flooded zones water supply electricity supply telecommunications roads amount damage incidents status ongoing response operations etc police mes teams transmit additional information situation however information processed system new events contextual parameters rules triggering operation procedures introduced model level e changing bpmn specification however modifications effect running instance cosoc flood management process therefore capacity dynamically add new contextual parameter supported case study shows system based fixed contextual parameters process manager based additional information personal experience frequently come different conclusions regarding crisis situation assessment example certain conditions emergency water provisioning t6 might required even elevated risk alert e3 received situations process manager choice leave system decide potentially leading suboptimal even erroneous scenarios make decision adapt scenario proposed system following analyze capacity activityoriented process model support adaptations extent flood management process model allow run time scenario adaptation according assessment possible flood management scenarios cosoc system supports explicitly specified bpmn model design time flood management process triggered – model instantiated run time appropriate response activity defined automatically according evaluated conditions specified model certain cases system calculates list alternative responses offers process manager make choice complex gateway g4 specifies flood management scenario flexible way activities executed various combinations repeated multiple times process terminated however predefined design activities triggered required new activities added process logic changed model level however modifications take effect running process instance cosoc therefore adaptation process scenario run time supported automated scenario definition reduces risk human errors related decision making stressful conditions information overload practice however process manager handles many situations line communicating response team determining adapting crisis management scenarios according experience adaptations newly discovered scenario extremely valuable evolution process implementing system following analyze activity oriented model evolution capacity flood management process model assimilate new scenarios proposed process manager cycle process evolution redesign whenever unforeseen situation occurs process manager needs decline execution workflow recommended system define execute new workflow better adapted situation example due road conditions specific vehicles reach flooded areas case rescue operations t8 carried helicopters immediate evacuation triggered situations corresponding adapted scenarios defined run time process manager great value process evolution improvement business process lifecycle cosoc follows main stages defined bpm involves design configuration enactment evaluation experience shows process manager rarely expertise undergo new workflow definition often switches line mode manages process manually e g sending messages making phone calls therefore new scenarios rarely getting integrated process model process enactment included process model evaluation redesign case new scenarios crisis management process designed assistance domain experts process manager actors involved modeled process designer tested integrated system due long design cycle expertise process manager regularly transformed process improvements therefore lost c summary within activity oriented paradigm contextual parameters decision making logic predefined design time run time modifications possible model explicitly defines activities associated decisions even though invocation order activities specified run time according received events adding new activities changing event activity association run time supported new scenarios integrated process model process redesign however take effect process instances currently running system perspective automated run time assessment crisis situation scenario definition ensures full compliance norms regulations reduces risk human errors unforeseen situations however coordinated line resulted scenarios poorly traced system preventing process improvement lessons learned typically discussed action lead system update long cycle process model evaluation redesign v modeling flood management process state oriented paradigm section apply state oriented paradigm modeling flood management process examine interest paradigm modeling crisis management processes show within paradigm shortcomings identified previous section solved within state oriented paradigm process described set states transitions states process execution starts initial state terminates final state state transition triggered condition fulfilled sequence states transitions leads initial state final state seen process scenario state oriented approaches e g petri net associate transition execution one concrete activity group activities contrary associate state transition occurrence triggering event combinations events compared activity oriented approaches encourage early binding activities design time state oriented paradigm supports deferred binding design time process scenario seen sequence events concrete activities produce events selected event invented run time following paradigm shift process specification divided two parts state transition part defined set states transitions states triggering events activity part defined list activities specified preconditions outcomes process enactment seen dynamic selection activities produce outcomes events make process progress towards desired final state statecharts model flood management process cosoc design state oriented model flood management process preserving semantics existing bpmn process model specified fig fig illustrates specification flood management process made yakindu statechart tool using formalism statecharts statecharts describe process set states e g s0 flood alert s1 flood emergency e2 restoring normal functioning etc transitions state transition triggered specific event combination events event e2 h cm keeps rising triggers transition s0 s1 maintain consistency bpmn specification statecharts specification use list events table ii activities explicitly modeled statecharts diagram relationships activities events e possible activity outcomes illustrated table iii statecharts notation states depicted rectangular boxes rounded corners statecharts use notion hierarchical state economical visual notation allows specify real size systems avoiding state explosion substate–superstate relation depicted boxes encapsulation state transitions represented arrows labeled triggering events define three main states flood management process s0 flood alert s1 flood emergency s2 restoring normal functioning indicate rough correspondence states defined statecharts specification bpmn specification fig s1 refined two substates s1 preparation s1 emergency control former corresponds part bpmn specification preparations city facing flood carried according mes regulations e state emergency declared citizens informed evacuation citizens flooded zones started etc s1 triggered water level oka river rises cm e3 table ii statecharts model concurrency living area transport electric power plant resources four parallel sub machines describe domains flood management entering s1 process simultaneously enters default state corresponding sub machine black circles outgoing arrow indicate default states living area sub machine defines three states elevated risk high risk unsecured transitions states describe flood progress managed elevated risk entered water level h rises cm e3 events received police taskforce e g requests evacuation rescue operations etc environment rise water level trigger high risk state events e7a e9a e10a trigger transition back safer state elevated risk events result execution operation procedures e g evacuation rescue pumping water streets others state unsecured triggered event e4 indicating lack resources execution operation procedure occurs event also triggers transition resources sub machine crisis control insufficient resources resources obtained e e5 broadcasted – transitions back crisis control high risk triggered respective sub machines along lines electric power plant sub machine shows electric power plant strategic infrastructure object managed flood according regulations power plant must shut water level rises cm e6 water keeps rising – risk facility flooded unsecured state triggered successful securing power plant e11a reported fig statecharts diagram cosoc transport sub machine described three states entered based water level first normal functioning maintained water h rises 40cm – limited traffic supported water level h exceeds cm threshold – pontoon bridge closed bridge closed example state statechart associated list obligatory optional activities must carried upon entering upon exiting state state oriented paradigm objective flood management process reformulated follows process participants e mes police taskforce respond events occur environment e g rise water weather changes etc executing operation procedures producing outcomes order maintain secure functioning city specified domains table iii relations activities events cosoc flood management process activities events t4 evacuate people e4 e9 e7a t7 request reinforcements e5 t8 rescue operations e4 e9a t9 pump water e4 e9 e10a t11 secure electric power station e4 e9 e7 e11a flood management process execution decisions specific operation procedures taken according crisis situation described current configuration statecharts e set active states model decision making logic according bpmn specification complement statecharts diagram fig list activities executed according outcome produce table iii contrary bpmn specification activities bound process scenario run time b analysis section explore advantages limits statecharts specification structure analysis answering questions raised introduction scenario e0 e2 e3 e6 e4 b scenario e0 e2 e3 e6 e4 e5 c scenario e0 e2 e3 e6 e4 e5 e7a fig simulation flood management process yakindu simulation tool current situation described four active red states flood management process model support run time assessment crisis situation designed process specification yakindu statecharts modeler yakindu simulation environment allows us instantiate statecharts specification simulate process process simulation crisis situation statecharts specification represented current active configuration statecharts diagram fig active configuration describes crisis situation due water level h cm e6 received electric power plant shut limited traffic maintained due lack resources e4 received living area unsecured resources received mes e5 resources sub machine goes crisis control state whereas living area returns high risk state operation procedures need terminated fig b corresponding procedures terminated e7a e9a e10a received living area returns elevated risk state bpmn numbers states state transitions statecharts explicitly specified design time addition modification states state transitions done part redesign take effect running process instance e current active configuration changed extent flood management process model allow run time scenario adaptation according assessment state oriented paradigm allows deferred activity planning activity defined run time based desired outcome context e resources etc table iv alternative activities integrated run time activities events t4 evacuate people land e4 e9 e7a t4a evacuate people air e4 e9 e7a t7 request reinforcements e5 t7a call volunteers e5 t8 rescue operations e4 e9a t8a rescue operations air e4 e9a responce unforceen conditions process manager select available activities thanks deferred binding alsodefinea new activity better adapted situation table iv shows examples alternative activities previewed original flood management procedures specified bpmn fig proposed process manager example lack resources message e4 received pumping water instead requesting reinforcements mes city managed situation calling volunteers t7a activity produced desired outcome e5 t7 better adapted current situation new activities sequences activities integrated process scenario fly without redesigning process model flood management process model assimilate new scenarios proposed process manager cycle process evolution redesign integration new activities events process specification done fly without redesigning cycle definition new states transitions triggering events refinement states subject redesign cycle c summary within state oriented paradigm contextual parameters decision making logic predefined design time modified run time activities associated state transitions thus explicitly defined model thanks deferred activity planning mechanism process manager select concrete activity run time based desired outcome context e resources etc adding new activities changing outcome activity association run time possible system perspective state oriented paradigm creates recommendation system process manager plays leading role scenario definition unforeseen situations handled within system enabling seamless improvement process vi conclusion crisis handling requires high agility reactivity never follows scenario focusing efficiency reliability control scenario executions pais supporting crisis management substantially reduces risk errors associated information overload human decision making stressful conditions however pais capacity support user operator process manager recognizing handling situations covered predefined scenarios remains limited experience cosoc shows concrete flood management scenario relies lot experience decisions process manager assessment situation adaptive scenario planning handling unpredictable situations represent challenges supporting information system work motivated lessons learned working cosoc crisis management flood management particular fully automated cosoc cosoc implements regulations defined mes process still largely based tacit knowledge process manager fully prescriptive process model leaves little room tacit knowledge implemented b cosoc full automation system executes predefined workflows automation case getting unpredictable process manager goes line mode providing recommendations assisting decision making valuable capabilities develop c design cycle cosoc long complex best practices process manager systematically documented embedded knowledge management useful capability develop cosoc paper show example cosoc capacity pais support flexibility process inherent underlying process modeling paradigm examined bpmn activity oriented specification flood management process designed cosoc proposed alternative state oriented specification process made statecharts ensuring compliance norms regulations activity oriented paradigm provides limited support process flexibility run time unforeseen situations handled within paradigm since activities triggering events need identified design time state oriented paradigm allows us exclude activities process design state activity good soon produces desired outcome particular enables deferred activity planning gives freedom process manager choosing activity adapted concrete situation paradigm also allows expanding notion management system providing knowledge worker guidance decision support knowledge management capabilities capabilities valuable pais supporting crisis management also pais supporting kips general process specification statecharts practical interest current cosoc system colored ki matrix used cosoc visualization current situation fig obtained statecharts specification associating color certain states state configurations configuration visited – corresponding area colored ki matrix recolored statecharts formalism originally developed design simulation complex discrete event systems thus visual notation considered minimalistic compared bpmn extension statecharts specifics crisis management processes specification subject future work paper used yakindu modeling environment specification simulation flood management process possibility animate specification play different scenarios obtain immediate visual feedback appealing makes design process extremely interactive pleasant although extension notation adaptation simulation environment specifics crisis management processes desirable consider state oriented modeling statecharts great potential crisis management process modeling",
  "2016-BRZ": "introduction cloud computing mobile computing social networks peer production open novation examples paradigms technologies enable new business models today adhering models modern organization tend abandon bureaucratic organizational structures based formal planning centralized decision making adopt less formal decentralized structures manage ment styles since organizations rely increasingly information communication technologies ict organizational transformation implies depends transformation ict often addressed business alignment many examples progressive decentralization organizations seen e g diversification adopting flat management style coopetition virtual networked organizations little known decentralization impacts organizational order continuously support business alignment organizations seek ing decentralization latter needs explicitly addressed enterprise models enterprise architecture governance related disciplines work focusing enterprise modeling em motivating question existing methods enterprise modeling em support decentralization paper grounded earlier works presented studied decentralization captured enterprise modeling methods particular enterprise modeling 4em example enterprise modeling framework selected method covers es sential aspects organization 4em defines six sub models focused goals rules processes actors resources concepts requirements technical com ponents respectively predecessor 4em ekd approach proven e\u0000cient number industrial projects addition documentation 4em publicly available decentralization widely discussed literature consid ered one design parameters predefine performance evolution firm general agreement however seen criteria define used evaluate de centralization firm work identify criteria organizational decentralization provided literature propose synthetic summary illustrate two examples inspired real companies traditional centralized decentralized organization synthesize experience evidences presented literature identify several challenges modeling experts face creating en terprise model decentralized organization challenges typically handled case basis resolved thanks experience often informal communication practitioners however consider integration explicit knowledge decentralization specifics enterprise modeling methods useful propose adapt em methods explicitly decoupling enterprise models reflect corpo rate centrally managed local distributed elements e g goals rules processes requirements etc providing relations decou pled models specifying coordination communication processes would needed create validate models across organiza tion whereas traditional centralized organizations local elements little impact overall em model post modern ganizations decentralized structure distributed decision making local models play leading role illustrate proposal example 4em method paper organized follows section discuss literature organizational structures enterprise modeling methods section identify synthesize criteria centralization decentralization present two examples illustrate typical characteristics discuss en terprise modeling organizations conducted identify challenges related decentralization latter case section pro pose extensions em methods order address challenges illustrate proposal example 4em section presents conclusions defines various objectives future work related work organizational structure decentralization terms centralization decentralization often refer power decisions made organization according henry mintzberg power decision making rests single point organization structure called centralized extent power dispersed among many entities structure called decentralized another type organization may defined two federation decisions top lateral military organizations typically examples centralized organizations explicit hierarchy responsibilities decision making power clearly defined fixed positions within hierarchy many public ganizations hierarchical structure federated decision making decisions made group individuals board committee appointed authority government also applies centralized federated organizations stable robust respond eas ily change slow act number organizational structures supporting decentralized decision mak ing recently emerged became popular structures often ad dressed post modern organizations organizations grounded principles social p2p implementing peer production peer trust peer review peer vote mechanisms decentralized communication decision making examples post modern organizations include collaborative net work cn virtual organization coopetitions sociocratic organizations distinguish centrally federally governed organizations anarchies new branches incorporate endenburg principles sociocracy include holacracy examples holacratic organizations include sun hy draulics valve w l gore github zappos among core principles behind post modern organizations self organization peer peer p2p extensively studied literature decentralization widely addressed organizational science liter ature works discuss impact organizational structure decen tralization organizational authors specify four operational models diversification coordination replication unification refer di↵erent organizational structures company authors show opera tional model defines requirements process standardization integration thus direct impact enterprise architecture company authors propose framework help firms design com municate governance framework considers five major areas decisions made six decision making archetypes reflect organizational structure company organizational structures enterprise modeling current research focused enterprise modeling em technique helps capture di↵erent elements structures enterprise well visualize inter dependencies elements type organizational structure a↵ect process enterprise mod eling answers questions types enterprise models need involved modeling validation order model need created vary depending organizational structure example problem owner project leader formally identified within centralized organization whereas decentralized organiza tion always case moreover information required modeling formalized controlled one designated team expert role organization non formalized distributed within community decision making becomes collaborative process involve conflicts terests individual vs team vs corporation without proper technical support facilitation process take time e↵orts decentralized environment reduce risks project failure due lack expertise em methods need enhanced providing better guidance case decentralized organi zations 4em 4em enterprise modeling em method framework developed academia 4em method comprised three core elements – defined procedure modeling using defined notation representing modeling product defined modeling process product – performance em form project predetermined roles project organization roles – participatory process involve stakeholders domain experts stake holder participation 4em method uses six interrelated sub models complement capture di↵erent views enterprise also considered perspectives ch p sub model contains notations rules generate diagram – goal model shows goals organization wants achieve avoid – business rules model used define maintain explicitly formulated business rules consistent goals model business rules may seen operationalization limits goals – business process model used define enterprise processes way interact way handle information well material – concepts model used strictly define things phenomena one talking models – actors resources model used describe di↵erent actors sources related related components goals model business processes model – technical components requirements model focused technical system needed support goals processes actors enterprise enterprise modeling em projects conducted response prob lems identified company em process defined 4em includes steps involves various actors usually problem owner domain expert em project leader em facilita tor tool expert step one actors typically assigned responsible one several actors participants illustrated table taken table actor involvement em process steps r responsible p participates problem domain em project em process step tool expert owner expert leader facilitator define scope objectives project r p plan project activities resources r p p plan modeling session p r p gather analyse background information p r interview modeling participants p r prepare modeling session p p r conduct modeling session p r p write meeting minutes p r p analyse refine models p p r p present results stakeholders r p p p example problem owner organizational actor benefit solving problem assigned responsible step em project leader ensures communication domain experts rest project team problem owner em project leader discuss problem boundaries prospective solutions outcomes 4em prescribe particular list sub models focused order created also part em project steps replicated sub models defined 4em original version 4em provides set generic concepts particularly tailored decentralization next section discuss 4em applied case decentralized organization applying 4em centralized decentralized organizations section first explain criteria used explain centralization de centralization illustrate application 4em two fictional companies studios3 inspired real companies one centralized one de centralized organization criteria decentralization criteria according mintzberg five organizational structures de fined simple structure machine bureaucracy professional bureaucracy division alized form adhocracy organizational structures defined based coordinating mechanism key part organization type degree decentralization mi1 key part organization one combination following six components key part strategic apex top management operative core workers per forming actual tasks providing direct services middle line middle management technostructure analysts design plan change train operating core support sta↵ workers providing indirect ser vices mi2 prime coordinating mechanism major method organization uses coordinate activities di rect supervision one individual responsible work others standardization work process standardization skills standardization output mutual adjustment work coordinated informal com munication mi3 type decentralization used mintzberg specifies extent organization involves subordi nates decision making process three types decentralization identified vertical decentralization distribution power chain command shared authority superordinates sub ordinates organization horizontal decentralization extent non administrators including operators sometimes make decisions share authority line sta↵ horizontal decentralization lated coordinating mechanisms direct supervision corresponding horizontally centralized mutual adjustment horizon tally decentralized organizations accordingly selective decentralization extent decision making power distributed di↵erent units within organization criteria according morgan five types organizational structure identified hierarchical organizations based multiple management layers top communication rigid rules decision making flatter organi zations seeking reduce number hierarchical levels support top bottom communication flow flat organizations entities equal hierarchy defined flatarchies found electronic arts www ea com take www take2games com many others centralized case valve corporation decentralized case known ease adjustment creation internal teams without hierarchy hierarchies flat organizations temporarily formed hierarchies flat teams holacratic organizations focusing distributed decision making giving everyone opportunity work best morgan distinguishes organizational structures based criteria m1 number hierarchical levels organization defines centralized organizations tend levels consequence elaborated chain commands coordination protocols m2 flexibility hierarchical levels centralized organizations tend fixed evolving hierarchies m3 flexibility decision making rules centralized organizations tend decision making power concentrated top hierarchical levels coordination decision making rules formalized fixed decentralized organizations according mor gan decision making rules fixed power distributed entities criteria according luthans luthans described criteria l1 geographical territorial concentration dispersion operations extreme centralization case would single huge factory creating final product raw materials contrary extreme decentralization case implies one factory per transformation service l2 geographical territorial concentration dispersion functions centralized case would describe facility containing whole functions like production sales finance direction typically one facil xxth ity factory headquarter inside like beginning century recently small industries l3 extent concentration delegation decision making powers decisions may taken single person everything ceo partially delegated middle management even shared whole employees workers cooperative criteria according cigref cigref club informatique des grandes entreprises franc¸aises large french corporations workgroup defined lev els centralization concentration characterized grouping action control capabilities one location one top position cen tralization characterized grouping action control capabilities one locations one top position deconcentration characterized scattering action control capabilities one locations local directors make decisions still follow central top position decentralization similar deconcentration without central top position following characteristics identified levels cig1 concentration dispersion actions production development team control quality management organization analysts capabilities cig2 allocation decision rights top middle layer large corporations context criteria according pearlson saunders propose criteria ps1 allocation decision rights one top position every employees decision making kept within one person top hierarchy whole workforce two dimensions quantity hierarchical level taken account ps2 structure communication lines hierarchy direct communication communication teams either made strict process involv ing hierarchy without formal method people exchange directly information ps3 forms coordination vertical coordination lateral coordination coordination achieved exchange information state work standards accepted teams within vertical coordi nation management transfers information plans objectives specific rules standards besides horizontal coordination people align exchanging information directly create work team necessary table criteria organizational centralization decentralization criteria characteristic decentralized centralized literature dispersed operations multiple concentration hq one facility concentration locations multiple facilities containing containing whole production l1 cig1 operations di↵erent processes processes dispersed functions di↵erent concentration concentration hq one facility locations multiple facilities containing l2 cig1 functions functions one functions vertical coordination direct forms horizontal coordination mutual mi2 mi3 cig1 supervision hierarchy standardization coordination adjustment peer peer ps3 work process output skills distributed whole organization top position hierarchy decision democratic vertical horizontal allocation making power upper hierarchy mi1 mi3 m3 decentralization selective decision rights vertical centralization horizontal l3 cig2 ps1 decentralization decision making power centralization shared within organization structure direct communication informal hierarchy formal communication mi3 ps2 communication communication peers strict processes communication multiple levels top hierarchy middle number levels flat organizations managers line managers team managers m1 hierarchical levels ad hoc teams various ramifications regular reorganization changing flexibility fixed hierarchies fixed roles roles shape organization adaptation m2 hierarchical levels peoples slow change management environment key part technostructure structure strategic apex operating core mi1 organization processes organization decision making power production case application 4em centralized corporation centralized corporation american developer publisher distributor video games inspired electronic arts take many others centralized corporation producing distributing video games dematerialized retail store also publishes games physical form game boxes dvd distribution regular stores using subcontractors packag ing production competitive advantage comes studios sub sidiaries specialized di↵erent themes franchises dedicated studio sports adventure etc strategic decisions financial goal supporting dis continuing games retail strategies taken ceo board studio directors technical decisions design packaging taken within studio see mi1 l3 ps1 ps2 hierarchical levels limited cor poration level design studio level project level fixed m1 m2 allowing level report formally direct supervisor l3 ps1 ps2 standardiza tion skills outputs used coordination direct communication used within studio forming limited vertical decentralization mi3 l3 ps1 ps2 board directors operating core designers key parts company mi1 enterprise modeling centralized corporation consider project integration new supporting design development games virtual reality vr format project requires creation modification 4em submodels see conducted following process described section centralized corporation studio director system requested one studio board directors including ceo system demanded group studios considered prob lem owner middle manager appointed em project leader project leader create transverse team domain experts di↵erent studios necessary supervise project internal external em experts join team ensure methodology 4em case respected models understood stakeholders process defined 4em implemented respect guidelines example step plan modeling session project leader set meeting studio director 4em expert em facilitator order plan specific questions addressed modeling session identify domain experts e g managers developers vr experts de signers participate modeling sessions step conduct modeling session 4em experts produce models together appointed domain experts creating di↵erent models involves di↵erent domain experts example elaboration goal model require participation studio direc tors ceo business managers studios involved definition business rules processes technical experts participating process concept modeling specification technical requirements preparation deployment plan technical components involve technical experts de velopers testers centralized corporation domain experts defined appointed project leader case application 4em decentralized corporation decentralized corporation american digital distributor video game game developer inspired valve corporation decentralized corporation distributing video games de materialized worldwide retail store also creates games specialized development international platform providing games updates multiplayer support based friend lists worldwide ranking cloud technologies independent developers invited propose projects platform even put games publication concentration operations functions company located one placed4 building headquarters teams teams working together di↵erent projects employees focusing game design devel oping testing marketing sales non core functions infrastructure management data center development testing environment network security management outsourced external service providers used cloud see l1 l2 employee decentralized corporation choose project team work roles competences required roles defined team members switch roles freely employee wants launch project create team micromanagement exists example founder company works within team thus employees considered one hierarchical level see mi2 mi3 coordination governance decentralized corporation teams coordi nate mutual adjustment mi2 form horizontal coordination mi3 ps3 decision making power distributed whole operative core mi1 mi3 l3 ps1 according mintzberg ch p organization corresponds type e vertical horizontal decentralization em ployees skilled free allows company produce innovative services form communication formal reporting defined teams use direct communication type communication linked mutual adjust ment di\u0000culty coordination corrected immediate discussion teams see mi2 mi3 ps2 key part organization decentralized company mainly lies operative core need technostructure analysts adapting processes team modified time better coordination projects enterprise modeling decentralized corporation consider project integration new supporting design development games virtual reality vr format decentralized corporation project launched one multiple teams new project team formed roles distributed team members many organizations characteristics decentralized corporation correspond centralization decentralization according table decentralization implies less formal relations communication patterns thus information company functioning scattered distributing roles within em project team di↵erent compared centralized company group also form project team share role project leader em facilitator tool experts external consultants company maintains focused set skills em field expertise want develop house consultants join company project work modeling collaboration employees decentralized corporation voluntarily participation project one main principles thus experts assigned nominate participation modeling session implementation 4em process steps also vary compared centralized company first decentralized corporation process imposed manager agreed upon con ducting modeling sessions step refining models step require participation di↵erent employees rely strongly interest project willingness cooperate due distributed knowledge gathering background information step take time e↵orts creating 4em sub models decentralized corporation would also face challenges since executive level company setting corporate goals definition business rules concepts processes done collaborative process employees project specific team specific concepts separated core concepts accepted company whole avoid information overload teams local goals priorities always related corporate goals conflicts interests need considered cases whereas corporate processes required support smooth collaboration teams ensure corporate goals met team specify pro cess es working style since actors resources identified project teams based current needs change time relations actors resources elements corporate goal model become di\u0000cult capture within single corporate actors resources model discussion work identified problems need systematically resolved applying 4em method decentralized organizations problems related – distributing roles within em project – implementation modeling process defined 4em steps – creating 4em sub models decentralization5 depending degree described problems less apparent distribution roles implementation modeling process defined original 4em challenging decentralized organizations lack explicit knowledge use informal communication overcome advanced methods knowledge management communication around project employees choose participate project compared assigned manager therefore e↵orts made promote em project explain importance potential stakeholders collaborative nature work requires specific communication platforms tools social networks groupware etc order reduce time needed reach agreement inform interested participants overcome challenges related creation main sub models defined 4em propose following extensions illustrated figure propose decouple local created team corporate created whole organization models propose create goal model loop specifies dependencies local corporate models propose add relations actors resources concepts models propose add relations business processes actors sources technical components requirements models idea behind separation local corporate models explored fea segments core mission area business services ch fea fea perspective ea segments may local shared according scope two types corporate models possible concrete model containing various local models parts implicit model based lateral communications peers using local models work explore first one model built upon local models maintain corporate vision full organization choice close federated model matches compromise two cases pre sented centralized case use corporate model decentralized case flexibility modeling goal model business rule model business process model models seen corporate level business unit bu team level decentralized organiza tions yellow rectangles figure goal model allows sharing common values across company example increasing number players considered corporate goals shared game development team cloud client team new console development team teams use local goal model define internal goals goals support corporate goals complement defined independently evaluation degree decentralization given company remains beyond scope work simplicity one consider company decentralized exhibits decentralized characteristics table fig extended 4em decentralized organizations role corporate business process model decentralized organization specify processes shared bus including core business processes standard bus collaborative processes activities sub processes performed di↵erent bus teams supporting pro cesses ensuring coordination communication among bus bu also local processes example di↵erent teams follow process order fulfill sub process corporate process corporate concept model specifies concepts shared bus required communication teams local model specifies local concepts specific bu team project similarly corporate local versions actors resource model technical components requirements model defined order identify local internal goals team related shared corporate goals add cyclic relation loop lo cal corporate goal models loop specifies local goals defined corporate goals well corporate goals defined local goals indeed compared centralized organization cor porate goals define local goals team decentralized organizations need consider situations team goals leveraged corporate level example innovative solution new game console set goals game developers distributed decision making l3 ps1 acknowledged since team decides locally goal model decentralized organization resources actors shared teams compared traditional centralized organizations resources actors teams define resources actors corpora tion way round reflected relation corresponding models figure also add relationship actors resources concepts models since concepts also attached owners creators company relationship reflects concept direct communication defined mi3 ps2 create local model internal meetings made regularly ask questions change processes new objectives could work optimized thereby team decides internally way working decentralized context representatives team meet oc casionally together establish corporate goals acknowledge change services interfaces services o↵er teams like api devel opment version control system etc thus team needs use create service may check another already serving duplication extend way working may assume subscription external services implies subscription updates least one component must shared whole organization services catalog supported centralized decentralized technologies process assumes teams collaborating capacities make meetings physically collaboration communication important decentralized organizations discussion limited presented cases empirical work experimentation required conclusion perspectives paper study decentralization impacts enterprise modeling methods organizations gather centralization decentralization cri teria table propose four extensions em methods order better capture specifics decentralized organizations illustrate proposal example 4em figure described corporate model updated meeting representatives team composing organiza tion ways may explored peers review productions decisions continuously work step larger research project study ing decentralization impact organizational studies post modern organizations business models done better un derstand possibilities o↵ered modern technologies p2p mobile cloud virtualization etc",
  "2016-Dall": "introduction article describes recent advances information systems research main support users mobiles devices tablets smartphones goal provide users better guidance daily use interfac es objective generate recommendations adapted given user context take account objectives recommendations systems also take account experience system users order make possible show information evolving context users organized analyzed context management also de scribe original approach called intention mining analyzes traces users actions system extracts goals intentions finally explain adequate process modeling formalism allows personalized recommendations therefore adaptive scenarios order optimize users experience infor mation system far approaches mostly applied business process models second objective work study interest video games particu lar urban games combine physical real worlds context management context management information systems state art one size fits way using information systems iss work users expect systems context aware e adapt users specific contexts baldauf et al context represents information used characterize situation entity person place object considered relevant interaction user application dey generally consider context everything surrounds center interest individual provides additional information help stand focus mostefaoui et al gamers playing urban game sensitive contexts playing game evolve outdoors real word result modify behavior match context instance gamer heading particular place rain starts pouring certainly delay walk thing else rain stops exchange another gamer try solve clue activity done inside instead outside building management context information become strategic context perva sive information systems kourouthanassis et al najar et al villalon ga et al data generated systems observing user interactions environment take place extremely valuable systems designers service providers serves basis enhance systems services ac cording user context e g location date time past current activities case urban games context composed geolocation gamer time day night proximity gamers weather forecast etc analyzing impact context information user actions becomes key aspect successful pervasive information systems data mining techniques used end order extract relevant information support decision pre diction fayyad et al chen et al several works ramakrish nan et al considering data mining techniques analyzing context data techniques play important role understanding discovering intrinsic relationships data among formal concept analysis fca priss wille represents interesting method conceptual clustering helps extracting implicit knowledge finding natural data structure asso ciating user actions observed context elements describe following sec tion fca used manage context information use formal concept analysis context management ways mobile interfaces used depend lot user context geographical loca tion time day day weeks meteorological conditions quality network connection etc understanding influence context elements makes possi ble propose better personalization recommendation features improve adaptation mechanisms however identifying relevant context elements given user highly heterogeneous collected context data challenge data heterogeneity also relevance personal may vary significantly user user context analysis methods necessary order establish context relevance given user earlier work jaffal et al used formal concept analysis fca end shown inter est cluster context elements regard associated user activities vice ver sa overlapping classes table example formal context values parentheses correspond number times applica tion used context noitatropsnart emoh kaerb snoitacilppa kaerb tnaruatser ytisrevinu noonretfa gninrom gnineve stnerap eeffoc hcnul emoh g3 gmail sms tele phone vdm flappy bird youtube input fca algorithms binary relation called formal context set objects set attributes describes objects table shows formal context objects applications executed user tablet used1 attributes describe context applications example youtube used home also 3g network morn ing note possible values formal context reflect real numbers time various applications used indicated parentheses sms associated university restaurant similar way formal context although number sms sent location different fig galois lattice generated formal context table figure represents galois lattice generated formal context table cluster lattice called formal concept groups objects attributes common example lattice shows flappy bird sms tele phone applications used morning afternoon evening transport 3g network home context elements com mon applications one interest terms recommendation user happens similar context future information system automati cally personalize interface according user preferences e g display game foreground screen user enters metro station note concepts become specific going top bottom lattice concepts many applications sharing context ele ments concepts applications sharing many context elements indeed concept containing flappy bird sms telephone applications specialized concept contains flappy bird sms applications two addi tional context elements coffee break university lattice provides clustering applications according context elements associated conversely context elements described regard data comes dataset built questionnaire filled master students university goal survey know context using appli cations social networks games emails etc tablets week applications associated notice lattice 3g connec tion morning context elements appear concepts means significant taken account recommendations specific user conversely sms application used context ele ments therefore context independent proposed methodology reflect fca results relative importance context elements user activities refining input data using semantic fre quency measure order build formal context collected data formal concept analysis quires replace numeric values table binary values order represent relationships objects formal context attributes concept lattice table followed simplistic approach directly replacing null values indicated users zero positive value one elaborate methods exist pensa et al pensa et al use cut threshold replace val ues greater equal threshold values rest method et al set threshold δ turn context binary one replacing values less δ others however thresholds calculated based numerical values formal context regardless semantic link attributes originality frequency measure described jaffal et al semantic measure relies context ontology illustrated figure fig context ontology lattice represented figure obtained refinement process pro pose interesting original lattice figure recommendation personalization purposes clusters applications context elements generated leading finer grained classification figure example flap py bird sms telephone vdm youtube applications common context elements 3g home morning whereas separated concepts figure gmail vdm youtube associated 3g morning flappy bird tele phone vdm youtube associated 3g home means finement strategy flappy bird telephone longer associated morning therefore considered likely used morning also notice context elements disappeared lattice sufficient impact user applications coffee break restaurant parents home lunch break interesting remark number concepts lattice increases despite disappearance context elements shows preci sion obtained results indeed increased significantly regard initial lattice fig galois lattice obtained semantic refinement strategy formal context interest video games shown previously semantic refinement strategy proposed leads better understanding context impact understanding represents im portant step towards personalization recommendation features urban games many common features pervasive information systems users interact system transparent mobile way examples context elements could relevant urban games shown figure fig example context elements urban games application approach proposed previous section illustrat ed figure fig context management applied urban games methodology could could interesting order make following ac tions possible analysing gamers behaviour similar contexts figure instance imagine gamers located specific place use specific device systematically choose perform precise activity whereas context changes instance place device choose something else information gamers behavior according context useful game designers order propose different kinds services accord ingly imagine expected behavior one obtained use smartphone propose new clue tablet users help perform expected activity fig analysing gamers behaviour similar contexts analysing contexts generating similar behavior figure similar way game designers could interested knowing contexts leading behavior let us consider key activity game set players lot difficulty perform analysis players contexts may highlight combinations context elements confuse gamers prevent completing task correctly previous example game designer could decide offer clue players within contexts help go game fig analyzing contexts generating similar behavior recommending specific actions according gamer context figure context analysis performed run time also way recommend ac tivities gamers according current context instance taking account weather modifications gamer proposed door door quests keep interest game playing comfortable conditions fig recommending specific actions according gamer context digital traces analysis intention mining although context management essential understand interactions users information system similarly actions performed players video games believe also necessary capture intentions users perform actions indeed claim actions executed information sys tem users follow strategy aims satisfying intention within specific con text context management addressed previous section know focus identification users intention process call intention mining described section process intention mining state art analyzing activities information technologies context lucrative business surfing websites activities—products services search es line game activities comments posts blogs social networks among others—are traced analyzed propose us adapted advertisements games kind software leave digital traces users ob served stored analyzed illustrated figure video computer gaming become increasingly popular branches entertainment industry lots traces generated due large variety available games players plethora choices user selection influenced content games quality services popularity games choices game friends etc retaining players longer player lifetime yield revenue game com panies ways player interacts game friends well game play strategy also interesting facts analyzed traces tracing gaming activities user become source lot knowledge analyzing game traces allows understanding characteristics games player behaviour suznjevix et al ducheneaut et al traffic analysis chen et al kinicki et al resource management chambers et al denault et al etc traces stored specific repository archive2 game trace allows analyzing large public game traces datasets guo et al fig digital traces capture player behavior user behavior also described process process defined process models approach tracing analyzing activities used great success field process mining particular enhancing software development weijters van der aalst pro posed methods tools based petri nets α type algorithm analyze events logs traces order discover process models process mining approaches aim modelling users behaviors terms sequences tasks branching auto matic way van der aalst et al agrawal et al cook wolf datta van dongen herbst resulting e mined process flexibility3 models activity oriented however activity oriented models lack processes also seen teleological ralph wand teleological process process takes account teleological behaviors process en actment behavior attached notion goal describes intentions goals objectives associated result individual wants obtain many research works intentional process modelling demonstrate fundamental nature processes mostly intentional processes modelled inten tional point view davis et al plihon rolland et al notion context also plays key role intention since given intention http gta st ewi tudelft nl discuss process models section emerges given context promotes appearance also influ ences realization intention rolland process mining applied tentional process models called intention mining heart solu tion original concept intention mining aims automatically discovering intentions traces user activities hug et al using pattern mining zaki hidden markov models technique baum et al specific type dy namic bayesian networks used map miner method khodabandelou et al khodabandelou moreover epure et al proposed ap proach using unsupervised technique knowledge tree build intentional process models low level abstraction information user intentions within specific context together knowledge user behaviors intentions similar contexts key provide adapted recommenda tions potential interest intention mining area video games section describe intention mining techniques presented previously could applied context video games player behaviors traces analyzed intention mining techniques could particular make following activities possi ble discovery underlying player intentions strategies hidden trac es intention mining allows identifying whether exists generic behavior players identification players usual activities usual ordering activities shown figure instance gamers usually change direction finding clue information could useful game designer order offer new services adapted generic behavior instance auto matically display map user enters clue device moreover marketing point view knowing gamer general behavior add high lighting information designing ads game fig extraction general player behavior conformance checking comparison observed behaviors players expected game designers actual behavior players identified possible compare one expected game designer shown figure unexpected issues may appear gamer intention never achieved strategy never used new intention expected game designer etc fig comparison actual expected players behaviors enhancement gaming process model observed player behavior consistent game designer goal e g paths never followed game designer add features game guide players towards paths see figure conversely strategies used players efficient ones expected game designer expected model enriched adding identified new behaviors model fig refinement player process model recommendation specific steps gamer run time based sup posed reasoning performing activities based current context possible recommend next activity gamer following percentage players executed activity exhibiting behavior earlier game see figure instance generic behavior consists exchanging information gamers specific step device used gamer propose action automatically next step option game become adaptable gamer behavior run time fig recommendation players based context intention state oriented adaptive process modeling sections paper dedicated analysis user context inten tions elements allow personalizing user interaction mobile inter face supporting relevant recommendations based context intentions previous experience focus adequate way model underlying scenarios followed users interaction mobile interfaces first discuss chal lenges game scenario modeling briefly overview modeling formalisms used domain software engineering business process management final ly discuss interest statecharts life sequence charts lsc modeling formalisms domain urban games challenges game scenario modeling objective multi player game create virtual semi virtual case urban games mix virtual real worlds environment players placed game players follow scenarios order achieve one multiple goals communicating collaborating game scenario needs specify objects positions virtual world e g maze puzzle solved task carried induces par tially ordered set actions player must perform gal et al general game scenario description main game phases navigation tween main challenge game scenario remain unpredictable player driving player towards probably implicit goal unpredictability im portant first similar situations occur often reaction game environment objects predicted player may get bored rapidly scenario game needs evolve together player unpredictability extremely important urban games mix real virtual worlds artificial life needs bear resemblance real life real life rich unpredictable evolving player needs feel simulated game envi ronment situations encountered player look unique also opportunities player particular situa tion defined dynamically embedded scenario game scenario therefore needs unfold progressively run time players also considered scenario designers game scenario thus compared process requirements flexibility unpredictability support also relevant game designers fore reuse process modeling languages model game scenarios following section review existing modeling paradigms used business process manage ment process modeling state art conventional activity oriented formalisms process modeling represent process sequence activities formalisms mentioned section popular examples formalisms include bpmn uml activity dia grams formalisms mostly prescriptive provide limited support process adaptability run time goal oriented another group modeling formalisms compared activity oriented formalisms represent process sequence goals map modeling notation mentioned earlier paper example goal oriented languages context driven goal oriented process models rolland et al soffer yehezkel pohl weidenhaupt support automated recom mendations user guidance providing goal situations states goal achievable known urban games might face unpredictable sequences events non repeatable execution scenarios would therefore hard possible model relations various process situations goals activities must executed order achieve goals literature several major perspectives process models specified ja blonski bussler control flow perspective captures temporal ordering process tasks events decision points data perspective cap tures lifecycle data objects creation usage modification deletion within process resource perspective describes process carried within organization deals roles resource assignments operational per spective addresses technical aspects process execution specifies elementary process tasks assignment concrete applications application components organizations context perspective describes attributes related process execution context performance perspective addressing process cost effectiveness flexibility along control flow data resource perspectives widely addressed modeling languages e g bpmn eps c iepc declare enable specification processes activities skipped repeated ordering cho sen depending context run time languages e g configurable mod els c iepc la rosa et al allow dynamic resource data manage ment flexibility along context operational perspectives however still challenging flexibility along operational perspective would allow player example select activity execute predefined list also propose alternative probably even thought design search formalism would support flexibility appeal main complex reactive systems according harel et al design games complex reactive systems share common set challenges need construct system set many interacting small units importance emergent properties unique char acteristics global system behavior emerge interaction small units always evident rules behavior com ponents crucial role visualization graphics need provide strong tool support frees mind encourages creativity designers allowing focus big picture important parts rather implementation details games multiple players placed virtual reality e artificial life object actor game specified random automaton send ing receiving stimuli objects global behavior results interactions local ones gal et al allows simulating complex behaviors avoiding repetitive scenarios specification unpredictable flexible game scenarios state oriented modeling paradigm formalisms statecharts harrel beneficial applying statecharts modeling formalism game processes within state oriented paradigm process game case described set states transitions states game starts initial state terminates final state state transition triggered condition fulfilled sequence states transitions leads initial state final state seen game scenario activities carried player depend current state system game environment case game scenario adapted run time according evolution game examples state oriented modeling formalisms include state machines uml rumbaugh et al generic state transition systems state machines fsm plotkin petri nets murata statecharts harel harel created specification analysis complex discrete event systems core difference state oriented goal oriented formalism way specify transition states goals within process whereas formalisms e g petri net state transition result execution activ ity others e g statecharts state transition result triggering event first case activities need explicitly modeled thus formalisms provide much flexibility compared activity oriented formalisms mentioned whereas second case desired undesired triggering events specified activities produce events may remain unknown defined run time provides supplementary degree flexibility along operational perspective required urban games following paradigm game scenario specification divided two parts state transition part defined set states transitions states triggering events activity part defined list activities specified preconditions outcomes process enactment seen dynamic selection activities produce outcomes events make process pro gress towards desired final state rychkova et al proposed basis implementing state oriented formalism statecharts modeling case management processes case management scenario similarly game scenario depends lot context requires flexibility kushnareva et al elaborated basis propos ing approach interactive modeling simulation based analysis process specifications crisis management crisis handling easily considered subject game approach based statecharts formalism tools4 yakindu statecharts yakindu statechart tools version eclipse luna http statecharts org state oriented paradigm allows us exclude activities process design state activity good soon produces desired outcome particular enables deferred activity planning gives freedom pro cess participant choosing activity adapted concrete situation system based statecharts model considered management sys tem automatically defines executes scenarios rather recommenda tion system advises process participant scenario planning drives sequence predefined steps formalism also beneficial game design vision priory statecharts specification game analyzed using graph theory algorithms objective analysis search optimize path current state statecharts model target state representing goal game result best next state visit best next transition fire consequently possible activities execute recommended play er state oriented model address internal behavior objects involved multi player game simulated virtual world internal behavior object describes object react external stimuli context e situa tion model complemented model inter object behavior harel et al describes object interacts objects particular situa tions harel marelly inter object behavior modeled scenari os specify interactions objects harel et al authors state approach makes possible de scribe behaviors different parts system using different reactive system design languages tools among advantages approach ability use exist ing analysis tools understand game behavior design time run time ability easily modify behavior use visual languages allow various stakeholders involved early stages building game let us illustrate approach simple example inspired urban games figure represents statechart specifies gamer view game state chine defined three hierarchical levels higher level two states defined disconnected connected transitions states trig gered events produced gamer e1 – gamer connects game e2 – disconnects fig example statechart inspired urban games connected second hierarchical level gamer one three exclusive states navigation player moves physical environment e g walking street visiting buildings shown third hierarchical level objective pursue another player reach specific place defined mission search clue communication player meets actor another player communicate order search clue ex ploration gamer explores environment around e g building order search clue transitions states defined logical expressions events e1 e2 … list events presented fig events occur result player actions events prefixed player diagram produced game environment events game prefix black circle diagram identifies substate entered default parent state visited example navigation state entered first time substate street activated black circle h symbol means entering state history example gamer leaves communication exploration state returns previous position navigation state fig events list main idea activities gamer execute specified model specifies events trigger state transitions player free perform activities assuming lead generation desired event example navigation state gamer walk run stop turn take metro ride bicycle etc along lines exploration state gamer use means disposal order search clue means concrete activities defined player based particular situa tion especially important urban games game taking place real environment obviously example simple scenario becomes complex specific events associated game mission defined player behavior specified details using new hierarchical levels statechart represented figure modeled yakindu open source environment modeling simulating statecharts model simu lated refined providing details game new hierarchical levels states events transitions specified conclusion perspectives presented context management intention mining state oriented adaptive process modeling could beneficial game process analysis model ing order better understand behavior players gaming experi ence provide relevant recommendations section first summarizes contributions presented article finally recent advances presented article developed independently present one perspectives future work consists integrating single solution conclusion overall approach overall objective various contributions presented article provide users information system relevant recommendations take ac count context intentions illustrated figure propose build recommendation system based model user behavior using state oriented modeling formalism integrates context information intentions users user intentions extracted traces intention mining algorithms whereas context management relies formal concept analysis obtained statecharts used order identify next best state process according current situation user recommend efficient path towards next best state fig overall approach perspectives towards integrated solution achieve autonomic computing ibm suggested reference model autonom ic control loops ibm usually called mape k monitor ana lyze plan execute knowledge loop illustrated figure mape k loop similar generic agent model proposed russel norvig intelligent agent perceives environment sensors analyzes ob tained information determine actions execute environment mape k loop adaptive system represents software hardware source adapted better responds changing context thus adap tive system example operating system specific software component application e g query optimizer database cluster machines grid environment wired wireless network middleware also adaptive game fig mape k loop architecture elements mape k loop interactions presented follows monitor function collects details internal external managed resources instance managed resources urban game metrics e g offered capacities powers throughput network distributed games score configuration property settings addition monitor function periodically aggregates correlates filters information sends analyzer regard contributions presented article monitor responsible context management monitored resources appear context ontology case analyzer function performs intention mining moreover evaluates whether changes required adaptive system e whether rec ommendations needed game according gamer intentions information provided monitor function usually changes required current system satisfy constraints provided monitor better solution exists satisfies new constraints case analyzer charge finding next best state statecharts process model relying context information gamer intentions part knowledge changes required system e game change request sent planner planner function structures actions needed achieve goals objec tives planner creates selects procedure enact desired alteration managed resources planner role identify path taken order reach next best state thereafter plan passed ex ecutor executor function changes structure behavior adaptive sys tem game sometimes also adaptive context sawyer et al according information provided planner case consists actually providing users recommendations knowledge base contains data shared monitor analyzer planner executor functions shared knowledge created updated moni tor analyzer executor case gathers particular context ontolo gy behavior model",
  "2016-KRLG": "introduction case management process cmp characterized following driven emergent knowledge case subject environment largely based human expertise highly unpredictable difficult replicate hard analyze improve howtos available cmps multiple applications crisis situations handling patient care insurance application computer games development etc features case management support system often include case artifact organizer repository task scheduler report generator document sharing business calculator based business rules etc definition assessment alternative scenarios decision making remains responsibility human expert case manager scenario prescribed given situation prescribed one implemented one reason another case manager identify relevant parameters affect scenario e g events resources lessons learned previous situations guidelines manuals etc ii assess situation based observed parameters evaluate compare scenarios iii make decision course action number influential parameters high number complexity possible scenarios grows exponentially capacity process received information compare multiple scenarios extended using supporting systems e g data analytics whereas capacity identify relevant parameters make decision iii relies strongly experience person automated assistance scenario evaluation activity planning ii provided information systems business process management bpm widely developed today systems mainly exploit activity centric paradigm process described flow activities process flexibility one preoccupations modern bpm system existing solutions support coordination human actors adaptation scenario run time example ordering activities scheduling skipping repeating configured runtime activity also parametrized particular variant selected run time based situation ensure flexibility various mechanisms proposed including ad hoc subprocesses defined bpmn process variability variation points however main challenge activity centric paradigm process variants variation points activities follow defined advance design time cmp always case case manager needs decide order activities execute run time may also propose new activities fit situation currently model semantics based activities specify latter previous work discussed state oriented paradigm operational semantics cmp based statecharts statechart diagram depicts set states transitions states triggered event combination events statechart model process defined terms results milestones one needs achieve modeled states conditions events required achieve whereas events resulted conditions met thanks execution activities latter part model several important differences activity centric models state oriented model transitions happen goals achieved result certain external events happening environment example case flood considered previous work crisis terminated water level subsides normal independently activities executed case manager state oriented model requires results process goals known advance states model activities executed order achieve defined run time state oriented model several paths current state target state goal process usually exist would equivalent activity centric model variation points defined task demonstrated state oriented approach statecharts models successfully used describe visualise case management processes created model flood management process yakindu statecharts tool illustrated multiple scenarios created execution process work formalise state oriented process models higraphs higraph mathematical graph extended include notions depth defined hierarchy orthogonality cartesian product partitioning makes combination extension euler graphs hypergraphs euler cirles venn diagrams higraphs semantics provides mathematical foundation statecharts eventually enables wide panoply graph algorithms process analysis particular explore algorithms path search optimization graphs used order support run time decision making adaptive scenario planning unstructured non workflow processes higraph semantics statechart higraph transformation central part research illustrated fig whereas statecharts used visualisation simulation non workflow process underlying formalism higraph allows run time process analysis optimisation paper report transformation statecharts diagrams higraphs ii discuss graph algorithms e g shortest path used order identify best scenario iii run time analysis higraph help case manager choose propose activity would lead realisation scenario research paves road creation automated recommendation support case manager latter use state oriented model fix milestones main goals process states define conditions milestones goals reached transitions run time current state model reflects current situation process current state proposed algorithm identify next milestone contributes best main process goal also suggest list activities execute case manager may choose one suggested activities may define activity selected activity fails another external event occurs target milestone may achieved case new alternative milestone defined reminder paper organised follows section ii explain motivation introduce higraphs statecharts related theories section iii describe state oriented approach modeling analysis nonworkflow processes particular discuss importance formal semantics higraphs within approach section iv present transformation statecharts higraphs section v covers higraph analysis methods automated recommendations enabled statecharts higraph semantics section vi presents conclusions ii background motivation bpm approaches based activity centered paradigm remain mainstream paradigm process support systems design within paradigm process specified ordered set activities system carries execution provide better support process flexibility activity oriented formalisms extended declarative parts constraints configurable elements ad hock subprocesses bpmn allow specification activities without giving particular order execution main challenge activity centric paradigm activities available execution predefined included process model always work unstructured process cmp davenport defines case management process cmp process predefined repeatable instead depends evolving circumstances decisions regarding particular situation e case reported numerous efforts create efficient cmp support industry compromised attempt deal cmp way regular business process e representing case management workflow focusing predefined sequence tasks several research groups report approaches design specify case management processes approach combines state activity oriented paradigms presented case handling paradigm presented authors outline present solutions case management position intelligent assistance guidance knowledge workers one main challenges next generation tools intelligent enough bring right needed information knowledge worker right time proactive manner e g recommend course action identify new relevant sources information may impact decisions made course case etc providing intelligent support guidance scenario planning main purpose work work represent state oriented models higraphs order guide case manager suggesting best process scenario exploit algorithms graph analysis b higraphs higraphs combination extension euler graphs hypergraphs euler venn diagrams graph simplest case defined set nodes set edges edge connecting pair nodes binary relation hypergraph graph edge hyperedge connects pair subset nodes higraph quadruple h b \u0000 ⇡ e b finite set elements called blobs e set edges binary relation b e b b ✓ ⇥ subblob function u defined \u0000 b 2b assigns blob x b set \u0000 x subblobs restricted cycle free partitioning function ⇡ defined ⇡ b 2b ⇥ b associating blob x b equivalence relation ⇡ x set subblobs \u0000 x really rigorous way specifying breakup x orthogonal components defined equivalence classes induced relation ⇡ x euler venn diagram consists simple closed curves drawn plane inside region curve depicts set outside region curve depicts elements belong set respectively curves whose interior zones intersect represent disjoint sets two curves whose interior zones intersect represent sets common elements therefore diagram illustrate logical relations sets subset disjoint nonempty intersection node higraph called blob represents curve euler venn diagrams allow reasoning inside outside regions using visual topological representation blobs higraphs connected edges hyperedges therefore compared regular graphs higraphs visually distinguish structural set theoretical domain specific relations defined nodes former relations depicted blobs topological configuration latter depicted hyper edges blobs furthermore higraphs extend euler venn diagrams possibility represent cartesian product another structural relation nodes graph compared regular graph higraph provides superpolynomial saving size description formal syntax semantics higraphs defined harel makes accessible wide spectrum techniques algorithms qualitative quantitative analysis well optimisation validation verification algorithms analysis higraphs proposed shortest path minimum cover problems calculating distance hamiltonian cycle bipartition test algorithms graph theory applied higraphs well c statecharts number applications higraphs discussed particular higraphs suitable knowledgerepresentation structural domain specific relations must defined language statecharts application higraphs modeling behavior complex event driven systems cartesian products specify orthogonal concurrent states system statecharts higraph based extension standard statetransition diagrams blobs represent states arrows represent transitions statecharts state diagrams depth orthogonality broadcast communication depth represented insideness blobs orthogonality dual xor decomposition states essence decomposition captured partitioning feature higraphs unordered cartesian product iii higraphs tool case management processes cmp fig illustrates state oriented approach modeling analysis non workflow processes consists four interconnected parts application domains • theories • models • tools • application domains depict different cases stateoriented approach used example statecharts higraphs originally used modeling industrial control systems domains also considered models depict formalisms chosen represent problems application domains statechart operational semantics used visualise simulate process e g yakindu sct higraph denotational semantics provides underlying formalism process analysis tools theories e g graph theory etc used create algorithms build tools selection tools algorithms depends given problem concrete application domain analysis performed needs interpreted application domain overall objective approach create toolbox various types analysis originated graph theory related theories approach propose model cmp statechart paradigm illustrated arrow application domains models fig stateoriented paradigm specify concrete activities executed process process scenarios discussed business oriented terms fig state oriented approach modeling analysis non workflow processes goals milestones modeled states constraints requirements modeled events conditions statecharts provide simple notation visualizing process focusing uniquely done instead implemented one also simulate statecharts model playing different process scenarios testing improbable cases improving understanding process problem planning course action case manager reformulated terms statecharts follows given current state c process target state desired objective would best1 sequence states best process scenario would lead us c activities executed c order lead realisation best scenario solve problem one able reason process mathematical rigour formalism higraphs discussed provides required mathematical foundation enables set tools process analysis illustrated arrow models tools fig particular interested graph algorithms executed iteratively defining new current state c best scenario state defined state oriented model contain activities describes effects postconditions required order trigger transition one state another definition activities supported application domain illustrated arrow tools application domains fig potentially tools also used order reason model higraph statecharts quality illustrated arrow tools models fig 1we specify criteria best scenario vary depending situation e g cheapest fastest scenario states x avoided etc next sections explain higraph created statechart diagram higraph explored using graph algorithms example classical algorithm shortest path illustrate best process scenario identified answer first question formulated show best sequence states identify best activity recommended case manager answer second question formulated iv statecharts higraphs use yakindu sct modeling statecharts models stored xmi files tree structure statechart model includes regions vertices outgoing incoming transitions specific attributes e g id name type label etc resulting models define complex structure may include hierarchy e regions vertices placed one inside many times required orthogonality e regions vertices placed parallel many times required order find recommend case manager next best step running process transformed statechart model higraph used python language programming order get data yakindu sct output files sct transform higraph created parser parcing yakindu statechart model extract process states ids names types parent children relations transitions ids names outgoing states incoming states labels relations regions developed higraph constructor statechart higraph transformation create higraph representation python networkx software package used particular constructed directed graph self loops multiple edges two nodes terms networkx called multidigraph started constructing list vertices verticelist going deeper states nesting levels region statecharts model specifying current region depth level depth direct parent state parentvertice inner states constructed list transitions transitionlist via specifying outgoing incoming states statecharts formalism allows adding entry pseudo states region start process subprocess scenario would indicated multidigraph however use anything similar entry pseudo states explicitly connected super state situated result verticelist consists actual states statecharts model transitions connecting entry pseudo states states statecharts model replaced transitions connecting direct parentvertice state transformation algorithm shown create multidigraph vertice verticelist verticedepth add vertice bloblist else verticename find parentvertice verticename parentverticename verticename add vertice bloblist internalbloblist add nodes bloblist multidigraph add attributes depth parentblob nodes multidigraph transition transitionlist sourcevertice bloblist targetvertice bloblist add transition sourcevertice targetvertice edgelist else sourceverticedepth find parentvertice parentvertice bloblist add transition parentvertice targetvertice edgelist add edges edgelist multidigraph graph internal data structures networkx based adjacency list representation implemented using python dictionary datastructures graph adjaceny structure implemented python dictionary dictionaries outer dictionary keyed nodes values dictionaries keyed neighboring node edge attributes associated edge dict dicts structure allows fast addition deletion lookup nodes neighbors large graphs underlying datastructure accessed directly methods programming interface api class definitions functions hand manipulate graphlike objects solely via api methods acting directly datastructure design allows possible replacement dicts dicts based datastructure alternative datastructure implements methods illustrate transformation results several abstract examples order verify datastructure relation elements modified correct manner first example fig shows simple combination states hierarchy entry c states lie b superstate proposed within algorithm get rid entry pseudo state rename c states b c b b state direct parent end higraph nodes edges ex1 hierarchy higraph model example nodes depth b depth e depth b c depth parent b stop depth b depth parent b start depth edges b b b c b e e b e stop b c fig hierarchy statechart model example ex1 fig concurrency statechart model example ex2 e b c b b e start second example fig focuses concurrency property statecharts model super state b contains regions r1 r2 reached time starting sub processes parallel cut entry pseudo states r1 r2 construct higraph nodes edges according algorithm ex2 concurrency higraph model example nodes depth b depth e depth b c depth parent b stop depth b f depth parent b b depth parent b start depth edges b b b c b e b b f e b e stop b c e b c b b f e b e start fig deep hierarchy statechart model example ex3 third example fig complicated version hierarchy example nesting levels note triple named blobs among deepest level direct parent blobs taken account renaming ex3 deep hierarchy higraph model example nodes depth b c depth parent b stop depth parent start depth b depth parent e depth parent b depth parent b edges b b c e b c b start b b c e stop b b c thus transformation algorithm captures main properties statecharts reflects form higraph representation therefore enabling usage graph algorithms model analysis v exploring higraphs process analysis transformed statecharts higraphs show higraph formalism applied cmp analysis decision making support defining best process scenario order identify best process scenario figure run time analysis higraphs help case manager choose propose activity would lead realisation scenario first need understand apply graph algorithms higraphs despite applications discussed little work carried algorithmic properties higraphs definition higraphs extension ordinary graphs decomposition vertices several blobs reached time sets blobs called configurations defined configurations talk semantics higraphs terms induced graph vertices higraph configurations edges vertices exist appropriate higraph edge approach semantics allows us work higraphs means ordinary graphs thus shortest path two blobs higraph defined shortest path induced graph configuration containing source blob configuration containing target blob example consider ex1 fig higraph list every possible path start stop blobs start b e stop start b b c e stop start b b c b e stop start b e b e stop start b b c e b e stop start b b c b e b e stop since cycle higraph path list first iteration considered shortest path case first one minimal number transitions specified default weight transition equals except parent child blob transition equals since higraph represents non workflow process shortest path calculation might simple statecharts models consist states transitions representing combination events process running events might might happen therefore making corresponding transitions un available result chance transition b e available point path list shortest path reach target stop blob case manager best process scenario corresponds sequence milestones contribute best main process goal manager select one scenarios several available decide upon activities execute scenario alternatively activities also recommended algorithm b best scenario best course actions considering best scenario defined shortest path higraph need go back application domain answer question activities executed order lead realisation best scenario link activities scheduled case manager state oriented model statecharts expressed follows manager perspective process execution scenario consists activities activity characterised results events produced upon execution often referred postconditions event occurs trigger state transition state oriented model terms state oriented model describes produced event postcondition order trigger transition required best scenario activity application domain matches description considered best activity recommended case manager2 alternatively case manager define activity also matches description listing illustrates list available activities specified application domain define activity names preconditions e set states activity executed postconditions combination triggered events activities names activity pre activity activity pre activity activities list activity pre activity post activity pre activity post activity pre b activity post event activity pre b b activity post event activities pre activity pre activity pre activity enabled b states triggers event executed activity available b b states triggers event given state configuration states list enabled activities automatically defined example process scenario reaches state activity becomes enabled executed upon execution event produced fact activity enabled execution state mean activity executed postcondition event example matches best scenario identified analysis higraph activity suggested execution case manager one best activity case manager decides use activity instead recommended one add activity list run time reuse later vi conclusion perspectives previous work demonstrated case management process modeled simulated statecharts state oriented formalism invented david harel used modeling real time event driven systems compared 2here consider list activities associated process defined application domain bpm approaches statechart process model specify concrete activities objectives constraints met thus approach prescribe describe activity executed next manager define activity fit description fly based experience intuition select activity list e g recommended activities activities previously executed similar situations order ensure desirable process scenario process complexity grows definition desirable scenarios comparison alternatives selection best scenario run time becomes complex automated guidance case manager big advantage paper propose approach analysis nonworkflow processes including case management processes based higraph semantics example classical shortest path algorithm show graph algorithms used provide automated guidance best scenario definition higraph analysis algorithms limited shortest path computations include much connectivity checking clustering cycle finding communicability algorithms algorithms explored future work among main challenges presented approach consider relation application model tool domains fig translation real life process statechart model identification relevant tools algorithms model analysis interpretation obtained results order provide meaningful recommendations expressed terms application domain important questions going consider next proposed approach overcomes shortcomings activity centric models activities defined runtime process configured state depending situation compared predefined number variation points conventional process models process evolve result external event making certain scenarios irrelevant proposed algorithms help case manager make better decisions restraining creativity",
  "2017-RLGS": "· · introduction process aware information system pais software system manages executes operational processes involving people applications information sources basis process models workflow management systems bpm systems classic examples pais b · · rychkova b le grand c souveyet université paris panthéon sorbonne place du panthéon paris france e mail irina rychkova univ paris1 fr url http www univ paris1 fr centres de recherche cri b le grand e mail benedicte le grand univ paris1 fr c souveyet e mail carine souveyet univ paris1 fr © springer international publishing ag advances intelligent process aware g grambow et al eds information systems intelligent systems reference library doi rychkova et al started f taylor h ford pursuit process optimization automation resulted creation workflow concepts process specified predefined flow tasks workflows provide powerful formalism structured design simulation analysis well management execution activity oriented processes today practitioners express increasing need information systems sup unstructured data oriented processes case management processes porting cmp object management group omg defines case management coordinative goal oriented discipline handle cases opening closure interactively persons involved subject case case man ager case team davenport defines case management process process predefined repeatable instead depends evolving circumstances decisions regarding particular situation e case claim processing residence permit issuing crisis management organization events examples cmp pais supporting case management gaining momentum nowadays among manager papyrus computas3 isis successful solutions ibm advanced case center4 ibm intelligent operations cited many solutions supporting case management developed reported community practitioners promoting adaptive case management acm explicit process specifications play important role pais allow better communication stakeholders enable process analysis support redesign efforts methodologies specification languages environments workflow modeling analysis widely presented literature recognised practitioners contrast current cmp supporting solutions mostly focused process configuration execution little support cmp modeling analysis provided chapter define state oriented formalism incremental inter active modeling simulation cmp formalism grounded statecharts developed harel particular explain statecharts suitable formalism cmp b statecharts adopted adapted specifying cmp also show c executable statecharts specifications used cmp simulation enable predictive analysis recommendation support case manager statecharts originally created visual fully executable formalism specification design analysis complex discrete event systems case man agement processes share number characteristics complex discrete event systems continuously interact environment respond 1http www ibm com software products en category advanced case management 2http www isis papyrus com 3http www computas com 4http www ibm com software products en intelligent operations center towards executable specifications case management processes unexpected events interrupts many possible operation scenarios par ticular cmp compared reactive system main challenge identify appropriate activity group activities perform reaction given internal external stimulus given situation context however contrary goal conventional reactive systems cmp reached several alter native scenarios moreover decisions scenarios cmp typically made human actor case manager therefore cmp supporting system seldom automatically execute activities enable recommend execution statecharts formalism combines intuitive concise visual notation rhapsody5 precise semantics rhapsody ibm rational sct examples statecharts model open source yakindu statechart tools ing environments visual statecharts specifications created executed adopt main concepts statecharts following points stated states state hierarchies transitions triggering events concurrency broadcast communication cmp specification order address cmp specific extend statecharts formalism features notions goal path also revisit semantics behind triggering events introduce concept event duration advantages statecharts specifications perceived design cmp execution explain chapter • statecharts specifications allow incremental cmp design • executable statecharts specification used simulation based testing cmp scenarios • executable statechart specifications pave road automated recommendations cmp apply proposed formalism specify example cmp crisis flood management process defined hauts de seine department france remainder chapter organized follows sect intro duce example provide terminology used chapter terminology spans across two domains complex systems case manage ment sect present discuss related work cmp management modeling sect introduce statecharts formalism draw parallels complex discrete event systems cmp sect demonstrate statecharts formalism adopted extended order provide fully exe cutable specifications cmp sect discuss prospective added value executable cmp specifications trace roadmap future research draw conclusions 5http www ibm com software products en ratirhapfami 6http statecharts org index html rychkova et al fig scope flood management process case management process example terminology section provide example cmp—a crisis management process designed handle floods call flood management process french department hauts de seine also briefly introduce terminology used chapter illustrate example figure shows scope flood management process crisis management cases flood flood overflow water submerges land happens example increase flow river provoked significant rainfalls risk major flood main natural risk ile de france region particularly paris7 confronted winter period november march cities like risk flood occurs important damages expected affecting thousands people floods considered harmful water level seine river 7see http cartorisque prim net dpt ip html towards executable specifications case management processes exceeds according scale austerlitz bridge paris hauts de seine department risk flood considered particularly important since goal flood management process maintain proper operation city infrastructure water supply electricity telecommunication road networks pub lic transport protect people facilities flood consequences process typical example cmp • demands interaction multiple actors government public services vol unteers etc • driven dynamic context case e flood development current status vulnerable areas rescuing operations rather predefined sequence activities flood emergency begins water level rises austerlitz bridge supposed keep rising according weather forecasts stage centers crisis management set emergency plan specialized floods epsf triggered city services rescue fire fighters police etc therefore carry specific activities accordingly regional authorities monitor crisis situation coordinate operation evacuation population facilities procedures following major areas temporary accommodation public transport road traffic water supply electricity supply telecommunications according flood severity epsf identifies different phases flood emergency seven areas specifies procedures control situation protect population facilities example water level exceeds drinking water supply reduced towns saint cloud garches vaucresson marnes la coquette ville avray water level reaches drinking water supply towns completely disrupted therefore provisioning distribution bottled drinking water start soon water level austerlitz bridge reaches case limited supply prioritized water provisioning organized along lines depending water level various procedures launched partial complete interruption public transport sncf paris rive gauche rer c ratp deviation blocking main highways a86 a14 n14 etc evacuation people health care childcare facilities resources available crisis management also need constantly monitored case deficiencies equipment manpower problems compro mise crisis handling one several areas specific measures mobiliza tion volunteers federal alert raising taken model resources specific area epsf 8source préfecture des hauts de seine plan de secours spécialisé sur les inondations hauts de seine sidpc available http www ville neuillysurseine fr files neuilly mairie services techniques plan secours inondation pdf rychkova et al terminology used chapter case situation e g flood crisis requires resolution described set elements relevant involved cmp within case define system boundary distinguish called system elements context elements belong environment case system description environment system description sud described set elements controlled case management public services equipment infrastructure administration etc also includes case management supporting system cmss case manager sud reacts various stimuli events produced environment e g change temperature water level incidents performs activities order maintain functioning city infrastructure protect people facilities flood consequences sud produces internal events messages reports alerts sent agents via radio mobile network indicate success failure mission resource deficiencies emergency situations environment described set elements interact sud controlled monitored using specific equipment e g meteo stations monitoring weather embedded sensors measuring water level video cameras measuring traffic social networks collecting information areas affected flood environment behavior unpredictable brings uncer tainty cmp environment produces external events accidents traffic jams electric outages malfunctioning telecommunication case management process cmp describes behavior sud defines order achieve objectives e ensure safety security people goods flood emergency case management element fig depicts subsystem sud responsible coordination suds activities includes case manager case management supporting system cmss case management supporting system cmss pais case manage case manager ment human actor uses cmss order monitor case take decisions regarding case handling scenario coordinate activities sud related work section discuss adaptive case management—for prominent paradigm cmp support also review existing modeling paradigms formalisms process specification capacity model cmp towards executable specifications case management processes adaptive case management concept adaptive case management acm defined infor mation technology exposes structured unstructured business information business data content allows structured business unstructured social organizations execute work routine emergent processes secure trans manner parent one major challenges identified acm community attempt deal cmp industry way regular business process—i e representing case management workflow focusing predefined sequence tasks view implies data emerges evolves within process according predefined control flow similarly product evolving conveyor belt collection data according acm cmp must organized around artifacts case tasks ordering shall adapted run time according evolution case circumstances case related data body knowledge acm extensively developed practition ers best solutions regularly reported book series wfmc global awards excellence case management however methodologies formalisms cmp modeling rarely discussed modeling paradigms cmp specification important role modeling pais discussed following general process modeling paradigms identified literature activity oriented product state oriented decision goal oriented choice modeling paradigm depends conceptual properties process e g flexibility vs control according literature case management processes cmp following conceptual properties cmp unstructured non repeatable execution scenarios cmp data centered organized around collection data artifacts case cmp reactive event driven activities carried reaction given internal external event cmp must considered within context boundary system environment scope process must clearly specified cmp goal oriented flexible goals set modified added removed execution 9http www xpdl org nugen p adaptive case management public htm rychkova et al cmp knowledge intensive decisions process scenario made human actor—a knowledge worker—and based knowledge experience intuition cmp unpredictable—they deal events handle situations planned even imagined section discuss capacity activity product state goal oriented paradigms express conceptual properties cmp activity oriented paradigm within process specified ordered set activities system carry examples activity oriented formalisms include bpmn yawl activity diagrams uml languages based workflow concepts activity oriented process modeling implies data emerges evolves within process according predefined control flow events supposed occur processed specific moments execution predefined model paradigm suits predictable highly repeatable processes cmp unpredictable processes events process inputs occur time execution order activities predefined depends current situation behavior therefore captured workflow formalism order increase process flexibility better address unstructured knowledge intensive processes like cmp activity oriented formalisms extended declarative parts constraints business rules configurable elements formalisms handle process variability within potentially large number configurations scenarios however either scenarios must well identified upfront set business rules configuration elements must regularly maintained expert seen limitation cmp techniques frameworks analysis activity oriented process models widely presented literature provide automated process analysis activity oriented modeling languages often annotated translated formal specification languages declare framework constraint based system uses declarative language grounded temporal logics state oriented formalism petri nets used workflow specification analysis petri nets semantics bpmn presented business process model mapped nondeterministic state machine analysis product oriented state oriented paradigm according process seen product life cycle set product states transitions states examples product oriented modeling formalisms include statemachines uml generic state transition systems state machines fsm petri nets statecharts harel created specification analysis complex discrete event systems within paradigm carried activities depend current state product process scenario adapted run time according evolution product paradigm suits well reactive systems specification since system response event shall defined type event also current situation system e state towards executable specifications case management processes several research groups reporting approaches design specification unstructured knowledge intensive processes including cmp based product oriented paradigm process instances represented moving state space process model represented set formal rules describing valid trajectories compared proposal based statecharts approach grounded theory automated control systems group researchers ibm incorporates process data centered perspectives approach based concept business artifacts case management model notation presented specification intended capture common elements case management products use also taking account current research contributions case management product based workflow design presented approach explores interaction product data model reflects product design process manufacture product represented workflow authors present case handling paradigm supporting knowledge intensive business processes recognise lack flexibility workflow management systems acknowledge important role played product —the case—in case handling view case however remains activity oriented proposed case definition explicitly includes list activities precedence relation assuming known advance formalisms based state machines suitable automated analysis including simulation formal validation model checking algorithms graph theory used order analyse states reachability dead states path search optimisation path represents process execution scenario operational semantics guard stage milestone presented semantics explains interactions business artifacts formalized following declarative principles earlier work define formal semantics cmp using alloy specification language alloy analyzer tool allows us simulate validate cmp model also provides visual diagrams compared statecharts however alloy model difficult construct product oriented paradigm seems good choice specifying cmp however support decision making since define notion objective goal decision goal oriented paradigm extends product oriented view process successive transformations product looked upon con sequences decisions leading goal goal oriented modeling formalisms support decision making specifying goal hierarchies tracing decision within hierarchies examples include kaos map goal oriented formalisms extended notion context presented formalisms link decision expressed goal situation decision taken product state state set achievable non achievable goals identified vice versa goal expressed terms states product reach formalisms also connect goals activities must carried order achieve goals rychkova et al generic process model gpm example context driven goal oriented formalism captures process context allows reasoning process goals also suitable automated process analysis context driven goal oriented process models support automated recommenda tions user guidance providing goal situations states goal achievable known due unpredictable sequences events non repeatable execution scenarios cmp however hard possible model relations various process situations goals activities must executed order achieve goals relations though discovered using process mining techniques interesting subject lies behind scope work analysis existing modeling paradigms corresponding formalisms shows activity oriented paradigm hardly provide flexibility required cmp expressed conceptual properties 1–3 5–7 listed con figurable specifications business rules used overcome rigidity traditional workflow based formalisms addressing properties 1–3 respectively nevertheless support variability process scenarios within boundaries defined number business rules configurable elements thus fail address properties cmp goal oriented paradigm offers flexibility supports knowledge workers however goal modeling formalisms typically suitable early phase system modeling abstract system design formal analysis simulation testing priorities addressing properties cmp would lead extremely complex model product oriented state oriented paradigm addresses conceptual prop erties cmp except 5th one—goal orientation—as paradigm define notion goal hand compared goal oriented formalisms state oriented modeling formalisms typically focus concrete system design followed validation testing supported plethora techniques tools model simulation formal analysis therefore modeling cmp adhere product oriented paradigm finite state machines hierarchical state machines statecharts explained chosen product oriented paradigm modeling cmp according paradigm state transition system state machine rep resents knowledge case evolution choice concrete modeling formalism within selected paradigm related purpose modeling e g communication support high level design simulation formal validation verification diagnostics improvement recommendation optimisation process behaviour towards executable specifications case management processes section discuss selection existing formalisms based state machines focus statecharts cmp specification cmp versus complex discrete event systems cmp shares following characteristics complex reactive systems behavior defined continuously interacts environment inputs outputs often asynchronous may occur evolve unpredictably time must able respond high priority events interrupts operate react inputs respect strict time regulations many possible operation scenarios depending current mode oper ation current values data well past behavior often based interacting processes operate parallel reactive system main challenge case manager identify appropriate activities perform reaction given internal external stimulus given situation context state machines popular choice specifying behavior reactive soft ware systems therefore consider finite state machines finite state machine fsm specifies machine one state time perform state transition result triggering event group events guarded condition defined finite set states set triggering events transition trigger state transition execution activities observation contextual events required traditional fsms corresponding state transition diagrams effi cient tackling small problems however complexity fsm model tends grow much faster complexity problem represents makes simulation automated reasoning model extremely difficult state explosion problem phenomenon called hierarchical state machines statecharts state explosion problem overcome introduction multiple hier archical levels states transitions indeed hierarchy gives possibility reuse common behaviors across many states thus reduce model rychkova et al complexity idea explored formalism statecharts invented david harel 1980s statecharts formalism specifies hierarchical state machine hsm extends classical fsm providing depth—the possibility model states multiple hierarchical levels notion abstraction refinement levels ii orthogonality—the possibility model concurrent independent subma chines within one state machine iii broadcast communication—the possibility synchronize multiple concurrent submachines via events internal produced system external produced environment event instantaneously broadcasted statecharts fsm abstraction orthogonality broadcast communication state oriented approaches e g petri nets associate transition execution one concrete activity group activities contrary statecharts associate state transition occurrence triggering event deferred activity binding combinations events allowing thanks deferred binding design time process scenario seen sequence events concrete activities produce events selected invented run time process enactment seen dynamic selection activities produce outcomes events make process progress towards desired final state visual notation statechart notation states depicted rectangular boxes rounded corners figure illustrates high level diagram flood man agement process example substate–superstate relation depicted boxes activation crisis centers epsf encapsulation exclusive substates flood emergency flood emergency state state case either flood emergency one substates entering state activation crisis centers first time substate entered default —this depicted arrow black circle pointing substate epsf figure shows detailed diagram state fig areas epsf separated dashed lines represent concurrent substates super epsf state state case simultaneously eight concurrent substates seen separate statechart state hierarchy thus fig high level view flood management process towards executable specifications case management processes detavitca si fspe eht ecno ssecorp tnemeganam sisirc eht gniyficeps margaid trahcetats gif rychkova et al introduction concurrent substates convenient mechanism specify logi cally different areas case management public transport management water supply management road traffic management etc active configuration set active states concurrent substates called statechart replaces term current state conventional flat fsm transition terminates circle h stands entering state pt1 pt2 history transition fig example specifies pt2 public transport insured case recovers state pt1 emergent functioning enters state—the last active configuration latter selected default one transitions states statecharts depicted arrows labeled expressions specify triggering events optionally actions carried transition triggered example triggering events mostly represent external internal events details statecharts notation found semantics statecharts cmp presented details sect execution statecharts specifications operational semantics statecharts originally implemented statemate system described statecharts formalism also adopted uml community form uml statemachine diagrams rhapsody ibm rational rhapsody open source yakindu stat echart tools sct examples statecharts modeling environments statecharts specifications created executed intuitive interactive way statecharts semantics case management processes explained adopt formalism statecharts specification case management processes sect also propose extensions statecharts sect create statecharts specification flood management process based description provided emergency plan specialized floods epsf practical knowledge resource management floods resulting diagrams shown figs states—flood start high level view process described two emergency stabilization—and flood transitions fig emergency state entered water level austerlitz bridge raises activation crisis centers epsf contains two substates transition stabilization end crisis state triggered specific conditions identified met diagram fig specifies main areas crisis management concur epsf rent substates state purpose work show towards executable specifications case management processes water supply public transport road traffic resources substates detail model refined providing details crisis management sce narios operation procedures statecharts semantics cmp specification explain following concepts defined statecharts formalism adopted specification cmp • state state hierarchy state decomposition • abstraction refinement • basic states • entering state default history • state configuration • internal external triggering events • activity • broadcast communication • inter level transition state state hierarchy state decomposition cmp state seen specific situation case management process requires reaction abstract level states compared business milestones defi nition right set states process subjective reflects current understanding process evolves time work states h flood crisis management process characterized level water states represent critical points different management areas defined epsf sect given state work done order maintain state order leave state enter another state note statecharts specify exactly work performed activities executed order another means modeling activities needed statecharts example complemented activity charts paper discuss activity modeling detail rt0 rt1 rt2 fig three states specify main phases road traffic control emergency plan epsf triggered • rt0 normal functioning default state upon triggering epsf water level disrupt road infrastructure region normal functioning maintained • rt1 emergency traffic control—this state attained flood affecting road traffic specific measures must continuously taken state order maintain road safety rychkova et al • rt2 heavy traffic —this state reached road traffic degrades due accidents traffic jams point crisis management becomes compromised e g rescue teams arrive endangered areas etc hierarchy state consists possibly empty substates representing possibly concurrent state machines substates provide details parent state superstate rt1 rt1 fig four different substates defined based flood severity upon entering states city executes scenario deploying equipment marking deviations blocking roads informing drivers etc substate belongs one superstate surrounding state also nearest ancestor state hierarchy call relations superstate substates abstraction refinement relations abstraction refinement state abstraction consists clustering states superstate according similarity criteria mechanism allows one describe problem multiple abstraction levels hiding introducing details necessary refinement opposite abstraction consists decompos ing state substates according discrimination criteria refinement formally xor decomposition state superstate means exactly one exclusive component substates one substate marked default state visited time parent state entered public transport emergent functioning state pt1 fig specified three exclusive substates corresponding three different management scenarios h pt1 activated based water level default scenario visualization standpoint clustering states allows economical rep resentation avoids duplicating transitions model logical structure appears clearly decomposition results specification orthogonal concurrent components parent state decomposition models situation state means one combinations components possible combinations make orthogonal product basic states statecharts formalism defines three types states basic states state state contains two orthogonal substates state state contains one exclusive substates state basic substates water supply ws1 emergency water supply consider fig damage reaction state contains two concurrent substates substates model damage due flood reaction e emergency water ws1 provisioning entered concurrent substates activated damage state state contains two exclusive substates specify ws1 ws1 details water supply towns reduced water supply totally disrupted reaction ws2 water state state contains two exclusive substates provisioning ws3 suspended water supply towards executable specifications case management processes ws1 entered ws1 ws2 ws2 substate entered default emergent water provisioning ws2 defines specific measures provide areas drinking water normal provisioning ws2 prioritized provisioning e1 ws3 ws2 case limited stock drinking water event state suspended water supply substates—it basic state refers sit uation emergent water provisioning longer guaranteed instance result severe road conditions insufficient stock bottled ws1 drinking water supply available e case e2ore3ore4ore1 inws1 state indicated transition label entering state default history default indicator used identify substate visited parent state entered alternatively many cases useful enter superstate history e enter recently visited substates configuration substates examples include transition ws3 ws2 back fig problem solved emergency water ws2 supply restored latest visited substate necessarily state configuration compared conventional flat fsm hierarchical state machines depicted statecharts multiple states activated time configuration statecharts define term state system active configuration state set basic substates activated current moment intuitively active configuration replaces con ventional term current state defined fsm h state ws1 fig consider water provisioning functions normally would correspond following active configuration ws1 c f w s1 w s1 w s2 sequence active configurations resulting execution statechart trace specification represents cmp internal external triggering events internal events produced system fig results carried activities e1 insufficient stock drinking water fig event specifies internal event result water distribution activity generated activity like stock verification external events produced environment context case case context consists various objects influence case affect handling fig water level weather forecast current situation roads incident sensed reports examples contextual parameters system flood ws0–ws1 ws1 1–ws1 fig state transitions taken certain value h water level reached exceeded consider change water level external contextual event triggering event e c e occurs c holds interpreted transition ∈ e e event must occur order take place event ∈ c c logical combination events triggers transition condition e needs true transition taken occurs ws2 ws3 fig triggering event transition described e2 e4 e1 ws1 expression transition taken tracks rychkova et al transporting bottled water available road concerned area blocked stock drinking water place insufficient towns longer regular water supply operational information resources ws1 traffic conditions corresponds contextual internal events condition ws1 specifies substate active specify work done statecharts use concept activity activity state dependent activities statecharts formalism defines linked throughout within directly state carried first case activity starts entering state terminates leaving second case activity starts entering exiting activity terminated yet stopped system valid interpretation case management process example ws2 upon entering state fig activity water provisioning must pt1 started must continue within state upon entering activities closing throughout concerned stations must carried state relations activities states defined statecharts characterized throughout within mandatory activity linked state relation must carried state therefore state associated possibly empty set mandatory activities broadcast communication broadcasting allows communication synchro nization concurrent sub machines according statecharts internal broadcasted external events meaning one single event trigger tran sitions multiple orthogonal substates broadcast communication allows coordination different management road traffic resources epsf areas cmp example substates react external event reporting hard traffic particular road section along lines blocked roads insufficient water supply internal events may trigger evacuation people facilities concerned area inter level transitions transitions cross state boundaries called inter level transitions statecharts purpose model interruptions situations process react matter state activity performs end crisis example event occurs fig matter configu epsf ration substates activities executed areas stabilization terminated new state presumably entered process towards executable specifications case management processes adaptation extension statecharts formalism cmp specification discuss specific features cmp captured original statecharts concepts therefore propose adaptations extensions statecharts formalism kinds extensions needed despite similarities identified sect exists number characteristics makes cmp significantly different conventional reactive system cmp goal reaction given stimuli given situation case manager searches scenarios could steer case towards goal thus compared reactive system next state active configuration defined current state given situation next state cmp also defined process goal cmp knowledge intensive process decisions e g scenario planning task assignment typically made case manager consequence cmss compared business intelligence systems bi rather auto mated control systems latter preconditions satisfied automatically executed activity cmss preconditions enabled execution mandatory satisfied unless explicitly stated case manager decides weather carried whereas events relevant immediately occur e g button pressed events occur remain relevant valid period time whole execution cmp e g document received permission granted order faithfully represent complexity cmp propose extend statecharts formalism following concepts final configuration path path selection path reinforcement relevance validity interval events mandatory versus optional activities briefly describe concepts remainder section final configuration goal similarly express process terms target state configuration state transition system reach maintain strategies possible scenarios achieving goal seen sequences states visit state transitions fire current target states analogy active configuration defined statecharts define final configuration cmp final configuration state set basic substates want enter maintain upon cmp termination example goal process support areas affected flood protect population flood consequences statechart rychkova et al ws3 pt2 rt2 cc2 cc3 fig configuration critical states active considered final configuration e maintained crisis path path selection path reinforcement path define statecharts sequence active configurations terminates final configuration example one concurrent submachines entered critical state path sequence configurations would lead submachine back cc2 insufficient resources one non critical states example state resources substate active two paths submachine bring −→ −→ −→ cc2 cc1 cc2 cc3 cc1 back cc1 given active configuration path towards final configuration calculated optimal path selected using criterion e g cheapest path shortest path path highest probability realized p consider optimal path current active configuration final enforcing path p configuration means executing activities order enable take state transition lead next active configuration p cc2 insufficient resources resources consider state submachine −→ cc2 cc1 active path optimal path enforcing path cc2 cc1 means enabling transition transition taken e11 e12 e13 least one events added manpower added supplies added equipment occurs enforce path mobilizing volunteers relocating supplies manpower equipment considering activities generate e11 e12 e13 result relevance validity interval events take transition execution process activities observation contextual events required process formalisms including statecharts define triggering event single event group events occur simultaneously instantly trigger state events available step transition particular statecharts specify directly succeeding generation instantaneous call events events continuous distinguish events observed remain valid reacted upon asynchronously multiple steps validity interval tv e define event period time moment event first observed moment becomes irrelevant process e define validity interval event associate time ê e system resides state occurrence another event cancels tv e tv e validity interval event state means e sensed first time one substates valid system leaves higher state state hierarchy longer validity interval tv e ê tv e ê validity interval event event means e ê sensed valid occurs towards executable specifications case management processes approval received example event starting evacuation procedure flood emergency shown statechart fig valid long e6 ê6 active traffic jam event valid fluid traffic event received instantaneous validity interval specified event event event triggering event e c extend definition triggering event follows ∈ e e transition event must occur take place combination events absence events observed period time ∈ c c validity interval triggers transition condition needs e true order transition taken occurs definition allows us take account immediate events also relevant events observed past email received approval obtained etc mandatory versus optional activities statecharts formalism activities state dependent considered e state associated list mandatory activities carried state activities also automatically executed preconditions met situation reaction relax coupling allow state independent flexibility process execution propose define activities statecharts—activities executed configuration preconditions met unless explicitly stated otherwise thus state associated two possibly empty sets activities mandatory set activities must carried state dependent enabled set optional activities defined dynamically based within throughout statechart status optional activities executed state order ensure right progression case towards goal specification activities beyond scope chapter perspectives roadmap future research benefits proposed formalism numerous cmp executable statecharts specifications allow interactive design simulation based testing simulation based recommendations future features could integrated part cmp supporting pais order provide intelligent decision support functionalities case managers conclude chapter discuss perspectives outline directions future work design simulation based testing interactive design cmp statecharts specification created based priori knowledge cmp e g norms regulations best practices etc fig 4a thanks concept hierarchical state model extended rychkova et al fig incremental design cmp refined integrating experience case manager new states state transitions specified reflecting new situations way deal fig 4b concurrent substates added order increase scope rhapsody10 open source yakindu state process fig 4c ibm rational sct examples statecharts modeling environments chart tools statecharts specifications created executed intuitive interactive way however creating detailed statecharts specification real life cmp challenging task explained using clustering techniques statecharts improvement although statecharts designed represent states hierarchical way formalism specify states organized abstraction levels cases clustering states performed manually process designer clustering algorithms gather entities e g states state machine clus ters according similarity criteria include complex sets parameters formal concept analysis fca well known clustering technique successfully used many areas including knowledge discovery representation sharing fca obtained clusters organised lattice using gen eralisation specialisation relationships could used identify state hierarchy statecharts significant advantage fca resulting clusters may overlap whereas many traditional clustering techniques build partitions fca therefore used clustering states helping define hierar chical structure within statecharts specification various attributes may chosen describe states pre conditions post conditions contextual parameters combination result fca concept cluster explicitly labelled set attributes characterize objects cluster considered starting point model analysis improvement detection missing states state transitions identification similar states activities etc simulation cmp specifications statecharts combine intuitive concise visual notation precise semantics thanks semantics statecharts 10http www ibm com software products en ratirhapfami 11http statecharts org index html towards executable specifications case management processes fig simulation based testing cmp scenarios specifications already simulated early design stages providing instant visual feedback later design stages serve basis simulation based testing explained statecharts specification executed test event log e pre recorded sequence events defining flood development scenario allowing sim ulation testing various handling scenarios two simulation modes defined • fully automated mode fig 5a statecharts specification executed test event log includes contextual events e g raise water level traffic jam system events e g successful deployment equipment empty stock drinking water events event log processed stat environment12 triggering state transitions simulation echarts simulation result sequence visited states • interactive mode fig 5b test event log contains contextual external events emulates environment case manager reacts external events executing enabled activities e g deploying equipment making task assignments —these activities represent steps case handling scenarios similarly computer simulator games interactive statecharts simulation iterative process case response simulated step taken case manager pre recorded external events internal events resulting case manager decisions trigger state transitions statecharts specification sx new current state entered new step starts simulation result sequence visited states executed activities received events case crisis management process multiple scenarios played automatically interactively used basis trainings drills improvement formal operation procedures e g procedures described epsf 12development modeling simulation environment cmp addressed future work rychkova et al conversely possible case development scenarios calculated sequences events acceptable state machine representing cmp could help analyse process reveal scenarios considered simulation based recommendations gartner hype cycle emerging technologies report provides cross industry perspective technologies trends assessment maturity adoption predictive business benefit according reports analytics technologies already reached plateau productivity currently becoming mainstream technology whereas complex event processing cep big data content analytics currently rolling peak inflated expectations reach maturity plateau years makes run time situation analysis recommendations case managers next challenge cmp supporting pais recommendation systems supporting process modeling process man agement presented literature process mining widely recognised technique predicting best process scenario based analysis past exe cution logs approach reported uses constraint based programming generate recommendations process execution strategies example cmp solution integrating intelligent support case manager reported authors introduce concept user trained agent uta recommends best next actions based actions taken case managers previous similar situations proposed recommendation technique based pattern recognition integrated part isis papyrus platform whereas approaches recommendations mentioned based past experience process logs propose alternative technique based execution cmp specification simulated process environment vision priory statecharts specification cmp analysed using graph theory algorithms objective analysis search optimize path current state statecharts model target state representing goal process result best next state visit best next transition fire consequently possible activities execute recommended case manager main advantage analysis recommendations provided based • current knowledge process represented executable statecharts specification • current knowledge process environment represented real time event buffer event log 13gartner http www gartner com newsroom id http www gartner com newsroom id towards executable specifications case management processes fig run time recommendations cmp activity planning past experience represented log past process executions required makes cold starts possible real time statecharts specification could initialized executed using event log e contextual external system internal events occur sx st real time given current state statecharts desired target state paths sx possible case management scenarios calculated alternative st statecharts diagram scenario seen sequence correct state transitions resulting execution corresponding activities fig alternative scenarios activities need executed order rein force scenarios could recommended case manager integration cmp executable specifications analysis tools part cmp supporting pais could provide intelligent support case managers explained enhancing cmp supporting pais recommendations agile activity planning vision figure illustrates intelligent cmss introduced earlier works describe main components system dynamic context manager dcm navigation manager nm activity resource repository log history dynamic context manager role select measure monitor rele vant contextual variables cmp internal external events collected event log activity resource repository stored stores definitions activities performed case handling resources log history used component registers ongoing process scenario e sequence executed activities received events visited states navigation manager heart system provides intelligent support case manager recommending best scenario handling executable statecharts specification case contains cmp recommendation component uses graph theory process mining clustering algorithms order provide recommendations case manager rychkova et al fig intelligent cmss navigation manager provides recommendations best scenario based current state process list valid events executable statecharts specification behavior cmp models sud environment executed collected real time events possible case management scenarios described sequences states statecharts model lead current state target state represents cmp objective recommendation component provide case manager insight situation might develop possible strategies paths statecharts activities groups activities carry bring situation control recommendation mechanism uses activity resource repository define list activities enabled given situation identified current configuration state statecharts model since activities independent states new activities added activity resource repository run time used recommendation component without needing change model intelligent cmss sketched grounded statecharts spec ifications enabling incremental interactive process design simulation based testing recommendations according statecharts formalism case management process represented hierarchical state machine process scenario dynamic choice activities objective trigger good seen state transition would move case current state towards target state representing case management goal development prototype intelligent cmss future work",
  "2017-RZ": "towards decentralized governance public sector capability oriented approach irina rychkova centre de recherche en informatique university paris pantheon sorbonne rue tolbiac paris france irina rychkova univ paris1 fr jelena zdravkovic department computer system sciences stockholm university borgarfjordsgatan kista sweden jelenaz dsv su se modern public organizations undergo important transformation becoming part dynamic innovative ecosystem co create value citizens government policy makers institutions information technology plays central role transformation getting value becomes intrinsic part organizational mission information technology governance itg important instrument ensures organization succeed mission efficient yet adaptive itg indispensable respond increasing service demand public organizations require resources capacities lay outside organization co production engagement citizens partner organizations open innovation – major challenges meeting challenges public organizations need master new governance styles overcome shortcomings hierarchical structures centralized decision making work define model adopt theory public value order reason different contexts itg mechanisms proposed capabilities distinguish three itg styles centralized federated decentralized thereby provide rationale allowing public organizations identify itg style fits best value creation context corresponding capability patterns reusable ways implementing governance introduction today technologies emerging evolving ever increasing rate e government distance hybrid education e g mooc e health e commerce examples influential applications information technologies shape strategies private public sector getting value increasingly important organizational competency weill ross view information technology governance itg instrument ensure organization meet strategic goals weill ross defines governance part corporate governance focused specifying decision rights accountability framework encourage desirable behavior using itg persisted organization set organizational arrangements patterns authority addressing major areas organizational sambamurthy zmud de haes van grembergen authors emphasize importance governance organization integral part corporate governance overseeing definition implementation processes structures relational mechanism organization enable business people execute responsibilities support business alignment creation business value enabled business investments chapter examine governance context public organizations according moore strategies public sectors focused long run short attending large issues big impact performance rather small issues impacts productivity concentrating ultimate ends rather needs missions public organizations mostly associated important social outcomes require long term strategies strong commitment operational areas including whereas opportunities limitless resources scarce complexities growing order successful creating value modern public organizations ensure continuous analysis aimed value including social political impact ii continuous engagement beneficiaries clients customers citizens setting objectives evaluation results iii continuous engagement partner organizations co producers standard creation use weill ross moore moore khagram meeting requirements challenging due inherently hierarchical structure public organizations centralized decision making also applies according mintzberg centralization tightest means coordinating decision making organization decisions made one individual one brain implemented direct supervision whereas efficient closed stable environment centralized decision making shows serious drawbacks open environments driven innovations modern public organizations need become part dynamic innovative ecosystem co create value citizens government policy makers public private organizations institutions succeed missions public organizations need master governance styles overcome shortcomings hierarchical structures centralized decision making whereas centralized organizational structures long dominating past governance styles weill ross gordon organizations adopting federated decentralized decision making gaining attention last decade morgan dumoulin decentralized style itg rely traditional structures executive committees boards management hierarchies rather broad participation stakeholders decentralization however confused anarchy accepts neither structure control modern decentralized organizations support hierarchies based merit experience position administrative ladder adopt decentralized communication coordination control following principles social peer peer enabled value creation depends strongly organizational context effectively develop itg structures processes relational mechanisms organizations need first define context governance identify governance style fits best context adopt public value approach strategic management public sector developed moore moore khagram public value describes value organization contributes society public organizations value developed individual citizens communities organizations provisioning new services improving existing services including services services enabled thus consider public value important concept itg creation propose examine following elements order define itg context public value organization going produce sources legitimacy support would authorize organization act capabilities organization need order deliver result identify four context models map models three itg styles – centralized federated decentralized fig facilitate value context based formalization itg consider organizational capability context business planning becoming recognized fundamental component describe core business particular ability delivering value beneath business strategy ulrich rosen interest reasoning itg organization terms capabilities twofold itg capabilities describe value ability delivering value encouraging context specific relevant behaviors using b itg capabilities support configurability itg structures processes relational mechanisms higher level distinguish three itg styles centralized federated decentralized styles imply use different itg capabilities define corresponding itg capability patterns regular repetitive means implementation three itg styles patterns used simplify guide context specific description itg structures processes fig presents short overview chapter linking together underlying theories ellipses established concepts rectangles contributions rounded rectangles fig organization chapter rounded rectangles depict main contributions chapter ellipses depict main theories rectangles depict main concepts address reminder paper organized follows section present relevant theoretical background section discuss results section illustrate results case higher education sector section provides concluding remarks directions future work theoretical background section present main theories concepts leaded us definition governance capability addressed next section first provide definition governance acknowledge several frameworks governance particular focus governance framework developed center information systems research sloan school management mit section framework widely recognized academics practitioners provides important foundation work discuss challenges governance public organizations section order understand nature challenges discuss organizational structures section experience observations show modern public organizations complex structures tend exhibit properties centralized federated decentralized organizations thus adopting relevant governance styles vital importance capacity ability organization execute various governance mechanisms depending value creation context considered governance capability discuss capability driven approach section governance related frameworks according organization economic cooperation development oecd corporate governance provides structures determining organizational objectives attaining objectives monitoring performance oecd part corporate governance weill ross governance focused management use achieve corporate performance goals needing address three questions decisions must made ensure effective management use make decisions decisions made monitored implementing itg organization identify scope main areas issues decisions made define decision making structures e organizational units specific roles committees responsible making decisions design implement processes decision making monitoring ensure desired behaviors using eventually specify mechanisms supporting active participation collaborative relationship among entities appointed defined governance structures according organizational governance style weill ross de haes van grembergen years number frameworks emerged iso iso iec international standard corporate governance highest level organizations understand fulfill legal regulatory ethical obligations respect organizations use cobit isaca cobit provides framework governance control process focus aligning business bsc grembergen de haes theory balance scorecard used performance measurement system governance enabling strategies improvement itg framework designed implemented effectiveness itg measured based indicators example effectiveness itg perceived increased effectiveness efficiency organizational improved biz alignment risk management etc de haes van grembergen wiedenhöft et al study focused single perspective itg e patterns different organizational governance styles ranging centralized decentralized aiming design new framework ground proposal well established itg theory weill ross provided weill ross governance framework weill ross peter weill jeanne w ross center information systems research sloan school management mit proposed approach toward designing implementing governance based extensive research experience large number organizations working private public sector weill ross main concerns approach following decision domains five interrelated decision domains principles architecture infrastructure business application needs investment prioritization principles define desirable behavior professionals users architecture organizing logic data application infrastructure aiming achieve desired level business technical standardization integration infrastructure foundation shared capabilities technical human business application needs includes decisions specific needs directly generate value investment prioritization consist choosing initiatives fund much spend governance archetypes describe combination people roles decision rights provide input one several decision domains described weill ross define six archetypes business monarchy monarchy feudal federal duopoly anarchy except anarchy archetypes strongly rely hierarchical structure organization requiring involvement cxo bu leaders also imply decisions main areas done within organizational boundary involve external stakeholders e g partners clients government employees besides two monarchy archetypes refer centralized organization already name three non monarchy archetypes e federal feudal duopoly also rely leaders business organization specify decentralization anarchy archetype specifies input provided decision made business unit owns business process project team end users supporting structure control reason anarchy archetype rarely adopted organizations corroborates empirical data collected weill ross many sources literature implementation mechanisms approach provides three categories mechanisms specify decisions made identified individuals groups enacted decision making structures alignment processes communication approaches decision making structures clarify responsible accountable decisions examples structures committees project security architecture steering committee executive teams business unit leaders leaders heads functional areas key business process owners alignment processes ensure effective input decision makers implementation decisions examples processes formal performance measurements service level agreements slas kpi knowledge management communication approaches allow disseminating governance processes responsibilities concerned actors examples approaches cio announcements web portals focused groups meetings co location cross training implementation mechanisms reflect fit governance style defined archetypes thus much support decentralized decision making open innovation defined governance public organizations public organizations deliver services considered public good established government policy whereas private organizations value translates client satisfaction public organizations interested achieving social outcomes always associated client satisfaction e g law enforcement tax collection etc client public governmental organization becomes mean end rather end private organizations moore khagram weill ross moore khagram authors recognize following challenges public organizations need addressed designing itg measuring performance value value translate revenues customer satisfaction measurement concrete outputs activities e g number customers visiting web page number submitted closed demands etc often used alternative inefficient organizations need study measure social outcomes measurement requires continuous communication beneficiaries citizens engagement setting objectives well evaluation results funding prioritization programs funding prioritization decisions programs challenging hardly rely performance measurement due moreover funding decisions often made political power holders may directly benefit program service prioritize investments infrastructure services analysis aimed value beneficiaries required interoperability partner engagement create benefit co production opportunities public organizations need develop promote interoperability main challenge encourage external co producers participate standard creation invest standard compliant systems processes strong engagement partner organization required recently dfogit governance framework cipfa ifac based iso iec emphasized key principles governance public organizations commitment integrity ethical values openness comprehensive stakeholders engagement followed well need outcomes terms economic social environmental benefits management risks performances implementing good practices etc work presented juiz et al utilized framework illustrate way implement iso iec standard public high education sector assess maturity organization governance well refine principles governance public sector suggested dfogit framework janahi et al authors proposed conceptual approach management itg public sector strategic organizational objectives human resources resources processes activities seen main concepts well defined interconnection relations proposing capability oriented itg patterns took consideration outlined principles concepts well seen section organizational structures decentralization terms centralization decentralization often refer power decisions made organization according mintzberg power decision making rests single point organization structure called centralized extent power dispersed among many entities structure called decentralized military organizations typically examples centralized organizations explicit hierarchy responsibilities decision making power clearly defined fixed positions within hierarchy many public organizations hierarchical structure federated decision making decisions made group individuals board committee appointed authority government also applies centralized federated organizations stable robust respond easily change slow act mintzberg information flow organizations also issue organization grows decisions understood one center mintzberg people see new opportunities understand needs done adapt always sitting top organization according morgan following mintzberg morgan summarize following reasons decentralization decision making powers need shared power placed cid knowledge innovation requires extreme agility organizations making cid decisions locally improves agility reduces time needed address issue creative people require considerable room maneuver resistance new cid technologies due lack understanding fear put risk existing position often comes center jeopardizes new opportunities decentralized decision making number organizational structures supporting decentralized decision making recently emerged became used structures often addressed post modern organizations organizations often grounded principles social p2p bauwens implementing peer production peer trust peer review peer vote mechanisms decentralized communication decision making examples post modern organizations include collaborative network cn virtual organization coopetitions sociocratic organizations distinguish centrally federally governed organizations anarchies collaborative network cn virtual organization refer group independent business entities complete organizations share resources skills achieve goals camarinha matos afsarmanesh coopetition describes complex relationship two organizations simultaneously competition cooperate together bengtsson kock sociocracy method governance used public private non profit community organizations associations represents alternative traditional organizational structure based cybernetic principles e system feedback loops buck villines decision making power distributed within organization romme three fundamental principles sociocracy include decisions made consent participants e objections sociocratic organization composed hierarchy semi autonomous circles circle linked one one via individuals acting links functiononing full members decision making double linking endenburg 1998a endenburg 1998b compared regular committee board sociocratic circle self managed committee members might appointed authority individuals elected roles sociocracy circles open discussion using consent criteria used policy decisions currently socioracy used public private non profit community organizations associations represents alternative traditional organizational structure based hierarchy one hand flat management hand new branches incorporate endenburg principles sociocracy include holacracy examples holacratic organizations include sun hydraulics valve github zappos among core principles behind post modern organizations self organization peer peer p2p extensively studied literature idea process based self organization equipotent participants proposed computing peer peer distributed application architecture peers make portion resources processing power disk storage network bandwidth directly available network participants without need central coordination servers stable hosts schollmeier peer peer architecture also explored social science concept commons based peer production social production proposed alternative mode socioeconomic production benkler according principle large number people work cooperatively contrast traditional firm production tasks delegated central authority bauwens describes p2p template human relationships relational dynamic springing throughout social fields dynamics based free participation equipotent partners engaged production common resources without recourse monetary compensation key motivating factor social p2p deny authority fixed forced hierarchy therefore accepts authority based expertise related concepts include open innovation paradigm assumes looking advance technologies organizations use external ideas well internal ideas internal external paths market chesbrough conclude would like illustrate organizational decentralization examples decisions made five main domains defined governance framework weill ross see section details examples principles supported decentralized organization cid include knowledge management technology supported open innovation use open standards co creation standards interoperability compliance industry standards examples architecture decisions include distributed p2p architecture cid data integration standard interfaces communication high cohesion low coupling soa examples infrastructure decisions include use cloud computing cid grid computing public infrastructure e g internet telecom networks shared standard applications erp crm scm etc shared standard application communication coordination social networks knowledge sharing platforms groupware voip etc capability driven approach capability notion originates competence based management military frameworks advancing traditional enterprise modeling approaches representing organizational designs result based perspective business perspective capability describes business creates value customers represents design result based perspective including various dimensions including organizational values goals processes people resources notion growing presence current business alignment frameworks starting business oriented business architecture business modeling towards alignment oriented represented enterprise architecture ea enterprise modeling em brief emergence use capability notion seems following motivations context business planning becoming recognized fundamental component describe core business particular ability delivering value beneath business strategy ulrich rosen b supports configurability operations higher level services process according changes operational business context b cid rziša et al following consider governance capabilities abilities capacities organization ensure maximum value given context define itg capability patterns provide guidelines practical adoption governance styles centralized federated decentralized public organizations itg capability public organizations decentralization governance following weill ross consider three distinctive governance styles centralized c decentralized federated f centralized itg relies business monarchies decision cid areas governance style relevant high degree standardization required cost efficiency one primary value sources federated itg relies duopolies federal governance structures cid style beneficial organizations seeking cost efficient use assets enabled innovation decentralized itg fits organizations focusing innovation time cid market tendency delegate decision making center local units project teams weill ross relate itg value organization seeks create provide explicit link organization environment value created modern public organization seen part dynamic ecosystem maintains relationships different nature organizations individuals fig order successfully achieve goals complex environment organization needs master different governance styles use according context fig organizational ecosystem c centralized decentralized f federated characterize relationships organization parts environment applying theory public value defining itg context order identify context public organizations adopt theory public value proposed moore khagram identifying three main characteristics public organizations public value authorizing environment providing legitimacy support core organizational capabilities internal external required produce value public value describes value organization contributes society value public result evaluations basic needs individuals groups society whole influenced relationships involving public meynhardt whereas private value associated satisfying individual desires public value mostly focused achieving social outcomes center technology government published report studied five u international governments examining full value government investments cresswell et al results research demonstrate investments generate public value two distinctive types value improvement internal government operations processes e g improving quality service cost reduction value broader political social outcomes enabling new services creating working places contributing individual community well generalize findings propose distinguish value delivering specific benefits directly citizens value improving organization public asset value types associated one multiple value sources cost saving increase quality service enabling new services intrinsic enhancements e changing environment providing political social cultural impact improving general quality life individual group legitimacy support public organizations free choose market authorized provide services environment comprises government customers employees suppliers local communities citizens policy makers controlling organizations etc authorizing environment provides organizations legitimacy support may vary depending scope project aimed value example public organizations mandated authorizing environment deliver specific service ensuring compliance regulations recommendations standards return benefit support financial legislative providing services required core capabilities public organizations need develop manage core capabilities functionalities order deliver results compared private organizations much capacity required produce public value lay outside public organization thus direct control succeed missions public organizations need develop internal capabilities controlled organization also explore co production opportunities external partners e g public private organizations volunteers associations etc means external capabilities examine three elements public value legitimacy core capabilities order define itg context asking questions important public value seeking produce sources legitimacy support authorize agency wider system take action provide resources create value core capabilities agency service provider require deliver result propose model fig represents four different situations value creation contexts itg public organizations links three itg styles c centralized decentralized f federated define contexts based two parameters type aimed public value horizontal axis type required core capabilities vertical axis four models value creation context depicted four quadrants plane separated dashed lines four context models give example value source source legitimacy support context model bottom left programs aiming improving organization cost saving efficiency services ex electronic registration residence permit marriage certificate receiving legitimacy support authority controlling organizations government authorizing organizations also main clients requestors programs provide funding organization case focus compliance regulations standards creates foundation internal operational capabilities full value may comprise increased transparency organization improved reputation context model top left programs aiming improving organization enabling new services ex line real time transport schedule route planner receiving legitimacy support authority controlling organizations government employees external suppliers organization creates foundation internal external operational capabilities using co production organization enables new capabilities internally externally community co producers etc full value program expand organizational boundaries impact society fig model links itg context itg style context model top right programs aiming delivering benefits customer co creation value external partners ex mooc receiving legitimacy support local communities organization creates foundation shared operational capabilities using co production intrinsic enhancements enabling new services communities main focus context model bottom right programs aiming delivering benefits customer enhancing local capabilities ex etax fatca receiving legitimacy support authority controlling organizations government authorizing organizations typically main requestors mandated services intrinsic enhancements quality service main focus three itg styles c f correspond areas solid curves accordingly areas overlapping covering single quadrant indicates governance style appropriate different context models order encourage desired behavior using one interpret figure follows context model requires mostly decentralized itg context model requires mostly centralized itg since high control required resources provided authority context model requires centralized federated itg context model federated decentralized itg whereas centralized federated itg widely addressed literature supported empirical study weill ross governance arrangements mechanisms decentralized itg gaining attention discussed section itg framework proposed weill ross relies mostly centralized governance archetypes considering increasing interest organizations decentralized decision making open innovation co creation value find justified extend list governance archetypes proposed weill ross cover gap monarchy feudal federal anarchy archetypes decentralized decision making extending list governance archetypes public organizations benefit stability robustness embedded centralized federated structures however meet reality modern society operating public organizations need master governance styles overcome shortcomings centralized decision making collaboration innovation opportunities driving factors modern organizations foster innovation modern public organizations need encourage different behaviors respect exploiting wide range governance structures particular archetypes surmounting hierarchical structures supporting decentralized decision making great interest dismantling fixed hierarchies necessarily lead anarchy absolute lack control bauwens introduce sociocracy endenburg governance archetype consider cover gap centralized monarchy based archetypes anarchy sociocracy inputs decisions provided various stakeholders including project leaders domain experts customers employees suppliers local communities representatives controlling regulating organizations policy makers governance archetypes defined weill ross specify decision making rights either appointed specific fixed positions organization ex c level executives business process owners undefined user please anarchy archetype sociocracy specifies another way stakeholders self appointed peer appointed peer voted provide input participate decision making consider representatives controlling organizations play mostly advisory role providing input areas project teams contrast provide input make decisions areas partners co producers provide input make decisions regarding architecture infrastructure business application needs consider stakeholders provide input business application needs area participate decision making regarding prioritization funding distributed decision making p2p extending list governance implementation mechanisms following identification decisions specification input decision rights organization must decide detailed decision responsibility accountability alignment occur information communicated throughout organization support decentralized itg arrangements specific alignment processes communication approaches go beyond traditional organizational structure need defined example responsible accountable relations formally defined hierarchical organizations might need replaced principles self organization relations based trust reputation p2p provides foundation governance mechanisms supporting decentralized decision making practical implementation sociocracy relies use technology application cooperation social software groupware social networks integrated part example provide input facilitate decision making business application needs area organization might need create innovation labs magadley birdi define peer review peer trust peer voting crowdsourcing howe processes consider decentralized itg relying upon decentralized structures adopting p2p principles decision making least one area decision made business applications funding prioritization primary candidates sociocracy describes decentralized structures p2p provides foundation mechanisms based context federal duopoly monarchy archetypes used decision making regarding principles architecture infrastructure next section explain organization design itg capabilities following three generic capability patterns reflecting centralized federated decentralized governance itg capability patterns idea behind itg capabilities specify public organization able ensure viability adopt governance strategies propose capability high level functional concept e ability capacity section ensuring set organizational values turn determine context well set goals realized processes resources formalized outlined concepts relationships model figure context represents information used characterize cid situational environment public organization context itg capability defined analyzing public value organization aims create sources legitimacy support core capabilities section eventually lead goals achieved processes resources support goals legitimacy core capabilities support defines defines context public values defines valid lead actors itg capability goals fulfills responsible supported contains itg processes resources require fig model governance using capability based organizational values context goal desired state affairs needs attained realize cid established value goals refined sub goals forming goal model refining desired behaviors using cost effective use effective use growth effective use business flexibility actor person even part organization holding responsibility cid achievement goal itg actors may organization executives decision makers etc process series actions performed order support one cid established goals itg domain processes concern decision making coordination processes monitoring performance management resource initiated process perceived engage consume cid resources people materials software itg processes rely example actors involved decision making enactment monitoring well needed entities – technology infrastructure supporting processes execution well coordination communication involved actors formalize itg capability patterns specify elements model fig following centralized federated decentralized itg styles based vision public value e improving organization direct delivering benefit customer sources legitimacy support required core capabilities e internal co production public organization could specify context goals actors processes resources required define itg section table capability pattern centralized governance public sector context using delivering direct benefit customer community value sources may range improving user experience existing public services providing new services unavailable broader impact society via intrinsic enhancements e g improving quality life ecology economic growth sustainability using improving organization e organizational business processes applications infrastructure value comes improving efficiency effectiveness organization resulting reputation public opinion government controlling organizations policy makers main funding source main client program project authorize program project support form appropriate recommendations laws directives standards example mobile radio communication standards regulations privacy security partner organizations provide capacities non core operations achieving broader social impacts individual citizens become means end customer satisfaction always priority goals cost effective use compliance provided business technology standards high process standardization high process integration centralized data management centralized change management exception handling actor governance structures follow monarchy feudal federal archetypes – relevant actors c level executives representatives authority corporate unit leaders heads functional areas key business process owners process performance measurement based kpis portfolio management slas formal communication coordination processes based hierarchy steering committees boards resource actors see enterprise wide standard solutions providing centralized reporting business intelligence erp crm scm itg backend organizational plays role integrated value capability creating system supporting business logic organization creates foundation internal core capabilities table capability pattern federated governance public sector context using improving organization value comes improving efficiency effectiveness organization e g cost saving improved processes enabling new internal services resulting reputation public opinion using delivering direct benefit customer community value sources include improving user experience existing services enabling new services citizens enabling cooperation opportunities partnerships organizations broader impact society via intrinsic enhancements government controlling organizations policy makers main client program project authorize program project support form appropriate recommendations laws directives standards example mobile radio communication standards regulations privacy security communities citizens indirectly evaluate outcomes expressing opinion organization whole goals cost effective use effective use asset utilization effective use growth high process integration centralized data management actors governance structures follow duopoly feudal federated archetypes – relevant actors c level executives representatives authority project leaders internal external domain experts internal external representatives controlling organizations processes performance measurement based kpis slas processes conflict resolution local control co producers global control organization authority coordination central local production semi formal processes communication coordination horizontal level focused groups discussions communities practice supported technology resources internal production co production based shared resources knowledge technology infrastructure services infrastructure solutions supporting coordination within levels e groupware social networks standard solutions providing centralized reporting business intelligence erp crm scm itg organizational plays role mediator service bus coordinating capability controlling inter organizational processes partners organization provides standards ensure coordination communication co producers also links co producers end users citizens table capability pattern decentralized governance public sector context using delivering direct benefit community value sources may range enabling new capabilities co production cooperation opportunities innovative ways service delivery broader impact society via intrinsic enhancements e g improving quality life ecology economic growth sustainability using improving organization e organizational business processes applications infrastructure value comes improving communication knowledge sharing organization within extended organizational environment e g organizational learning communities practice social networks resulting increased creativity motivation commitment individual employees government controlling organizations policy makers authorize program project support form appropriate recommendations laws directives standards example mobile radio communication standards regulations privacy security value creation organization rely uniquely upon internal operational capabilities e g respond demand required expertise partner public private organizations community individual citizens associations provide external operational capabilities expertise required co produce value e g service providers mobile service providers non organizations etc communities individual citizens participate evaluation program project e providing opinion feedback liking sharing discussing browsing using etc evolution goals effective use growth business flexibility distributed data management interoperability open technology standards peer production support open innovation actors governance structures follow federated sociocracy archetypes – relevant actors project teams representatives representatives controlling organizations c level executives domain experts internal external processes focus decentralized decision making mechanisms p2p based efficient communication collaboration processes supported technology processes include peer voting peer trust management peer review resources co production based shared resources knowledge technology infrastructure services infrastructure solutions supporting cooperation e groupware social networks itg organizational plays role frontend providing means capability information knowledge service discovery sharing stakeholders defined context organization creates foundation internal external core capabilities based p2p promotes interoperability supports co creation standards innovation technology internally externally well open innovation itg capability patterns presented provide organizations practical guidelines support configurability itg structures processes relational mechanisms higher level efficiently design adopt itg mechanisms organization needs define governance context using context models shown define fitting governance style c f adapt governance design specify centralized decentralized governance structures mechanisms enact governance instantiating governance pattern fill values context determine goals actors processes resources based generic types table itg capability patterns defined meant provide guidelines facilitate application itg mechanisms whereas elements vary strongly patterns remain similar example need respect regulations follow standards radio telecom development etc present three patterns whereas way regulations met compliance control totally different study results last years higher education sweden analyzed zdravkovic et al objective observe alignment organizational structure governance rules use common universities include number entities faculties faculty departments units nowadays entities becoming independent due geographical dislocation decentralization management formal well informal communication patters use universities therefore show obvious need adjust governance according organizational structure decision making place providing education conducting research activities two core missions university creates public value following three cases illustrate itg capability patterns previous section instantiated support first mission – education case improving education management swedish university delivers standard education service students infrastructure systems managing student subscription university curriculum results typical examples investments university aimed public value case expressed improving quality educational service well intrinsic improvements community e social cultural financial impacts envisaged corresponds context model bottom left fig government high education policy makers country level considered authorizing environment issuing directives related learning objectives degrees quality requirements local communities professionals provide directions indicating skills needed university develops internal capabilities order create aimed value according context centralized itg fig relevant implies instantiation centralized itg capability pattern presented table organizational takes role backend supporting effective management studies followed documentation related goals nowadays target cost effective use centralization standardization software platforms centralized data management analytics reporting actors level rector group high level administration officers centrally managing activities making decisions spread faculties departments corresponds business monarchy archetype processes resources supporting main service standardized controlled performance measurement based top organization kpis portfolio management case enabling student mobility another example illustrates use federated itg capabilities universities sweden actively involved national international programs support mobility undergraduate graduate doctoral students faculty members joint master programs erasmus exchange programs etc aimed public value improve service quality enable new capabilities universities students communities co creation value partners another organizations universities required context ensure comparable compatible coherent systems higher education partners co producers need comply bologna process wikipedia bologna process compliance requires significant changes organizational therefore sources legitimacy support context include university authorities policy makers country european level bologna process corresponds context model top left fig federated itg relevant implies instantiation federated itg capability pattern table organizational plays role mediator coordinating controlling also links partner inter organizational processes partners universities students data integration universities standards data exchange main interest actors include university international office head faculties program managers faculty members department corresponds duopoly federal archetypes processes resources supporting main service standardized controlled european representatives university authorities order ensure compliance examples processes slas formal transformation local grades bologna grading systems etc case personalized educational program everybody last example illustrates use decentralized itg capability concept open education wikipedia open education describes institutional practices programmatic initiatives broaden access learning training traditionally offered formal education systems open education programs include distant learning e learning mooc adoption technologies processes developing programs strategic goal many universities aimed public value provide wider access education direct service customers implies important social impact intrinsic improvements source legitimacy support comprises communities individual citizen willing benefit program co creation capabilities required corresponds context model top right fig according context consider decentralized itg relevant implies instantiation decentralized itg capability pattern table organizational play role frontend opencourseware ocw example courses supporting materials created universities published free via internet interoperability main focus university needs use open standard co create standard universities line course delivery ex https studyinsweden se news moocs swedish universities mooc platform swedish organization creates foundation internal external operational capabilities based p2p e g peer review social platforms discussions actors include faculty teams creating content collaborating web designers experts students university authorities federal sociocracy archetypes used itg processes resources supporting main service standardized compared previous example standards provided peer voted co created participants conclusions values created public organizations particular expand boundaries organizations therefore modern public organizations need seen part dynamic ecosystem maintains relationships different nature individuals organizations fulfill goals public organizations need adapt context exhibiting consequence various behavior using study proposed value driven solution governance public organizations distinguishing centralized federated decentralized structures whereas centralized federated governance structures well covered palette governance archetypes proposed weill ross observed lack decentralized governance structures anarchy mentioned empirical studies demonstrate rarely used organizations narrow gap business monarchy feudal duopoly federal archetypes anarchy defined sociocracy governance archetype sociocracy variants e g holacracy used public private organizations examples valve w l gore morning star github zappos sociocracy supports self organization decentralized decision making next organization needs examine context public value desires provide authorizing environment e authorize support value provisioning benefit eventually kind core organizational capabilities required elements interrelated provide understanding context governance enacted suggested model governance become centralized decentralized according context considered governance organizational capability defined three itg capability patterns reflect centralized decentralized federated itg styles accordingly itg capability pattern seen guideline define governance support desired public values driving different context situations illustrated governance patterns instantiated case higher education public sector sweden motivating assumption public organizations need master wide range itg mechanisms deploy depending value creation context particular identified discussed mechanisms decentralized itg consider findings interesting organizations public private already experienced negative effects centralized governance decision making e g project failures due lack commitment poor adoption bad user experience etc work also interest organizations explicitly move towards decentralization seeking adjust itg model proposed fig provides organizing logic help organizations position justify govern projects consistent way based public value concept however deliberately show itg styles mutually exclusive several styles used value creation context plan elaborate guidelines recommendations future conducting multiple empirical studies collaborating practitioners itg capability patterns presented tables intended facilitate application itg mechanisms provide general idea concrete recipe elaborated particular organization future work envisage design approach measurement efficiency itg respect itg style relevant kpis integrated itg capability patterns presented work",
  "2017-ZR": "introduction information technologies evolving business use endlessly increasing extent e government distance hybrid education e health e commerce e collaboration examples influential applications shape strategies private public business sector getting value increasingly important organ‐ izational competency context governance instrument aimed ensure business organizations meet strategic goals governance part corporate governance focused specifying decision rights accountability framework encourage desirable behavior using authors emphasize importance governance organizations inte‐ gral part corporate governance purpose governance concerns over‐ seeing design implementation processes structures relational mechanisms organizations enable business people execute responsibilities © springer international publishing ag metzger persson eds caise workshops lnbip pp 39–49 doi j zdravkovic rychkova support business alignment well creation business value enabled business investments study examine governance context public organizations values public organizations notably associated important social outcomes require therefore long term strategies strong commitments opera‐ tional areas including whereas opportunities limitless resources scarce operations complexities growing order successful creating values modern public organizations ensure continuous engagement bene‐ ficiaries citizens setting objectives evaluation results well continuous engagement partner organizations co producers standard creation use meeting requirements challenging due inherently hierarchical structure public organizations centralized decision making also applies management whereas efficient closed stable business environments centralized decision making shows serious drawbacks open environments driven innovations modern public organizations need become part dynamic innovative ecosystem co create value citizens government policy makers well public private organizations institutions succeed missions public organizations need master governance styles overcome shortcomings hierarchical structures centralized decision making public value describes value organization contributes society public organizations value developed individual citizens communities organizations provisioning services including lately increasing extent online services enabled thus consider public value foundational concept structuring governance public sector furthermore enabled value creation heavily depends organizational context – effectively designing governance structures processes relational mechanisms public organizations need define context governance aside organization value influ‐ enced core functionalities involved authorities legislations consider governance organizational capability research study interest reasoning governance organization terms capabilities twofold capability operationalize value defining ability delivering value compounding context specific relevant behaviors using b capability support configurability use mapping governance struc‐ tures processes relational mechanisms organization remainder paper organized follows sect present relevant theoretical background sect describe approach structuring gover‐ nance capability sect illustrate results case higher education sector section provides discussion concluding remarks directions future work capability oriented approach governance background organizational styles terms centralization decentralization often refer points power decisions made organization according power decision making rests single point organization center structure centralized called power dispersed among many organizational entities decentralized structure called decision making shared federated center organizational entities structure centralized organizations stable robust respond easily change typically slow acting also applies following summarize following reasons decentralization – decision making powers need shared power placed knowl‐ edge – innovation requires extreme agility organizations making deci‐ sions locally improves agility reduces time needed address issue – creative people require considerable room maneuver resistance new tech‐ nologies due lack understanding fear put risk existing position often comes center jeopardizes new opportunities governance public organizations implementing governance organization identify scope main areas issues decisions made organization define decision making structures e organizational units specific roles committees respon‐ sible making decisions design implement processes deci‐ sion making monitoring ensure desired behaviors using eventually specify mechanisms supporting active participation collaborative rela‐ tionship among entities appointed defined governance structures years number governance frameworks emerged iso cobit study aiming design new framework rather consider reusable governance solutions different organizational styles ranging centralized decentralized types centralized governance fits business monarchies applied decision areas governance style relevant high degree stand‐ ardization required cost efficiency one primary value sources federated governance follows duopolies federal governance structures style beneficial organizations seeking cost efficient use assets time enabled innovation decentralized governance fits organizations focusing innovation time market tendency delegate decision making center local units project teams modern public organization seen part dynamic ecosystem maintains relationships different nature organizations individuals fig successfully achieve business goals complex environment j zdravkovic rychkova organization needs master different governance styles use according given context fig organizational ecosystem c centralized decentralized f federated characterize relationships organization parts environment capability driven approach capability describes business creates business perspective value customers represents design result based perspective including various dimensions including organization values goals processes people resources notion obtaining growing presence business alignment frameworks starting business oriented business architecture business modeling towards alignment oriented represented enterprise archi‐ tecture ea enterprise modeling em brief emergence use capability notion seems following motivations – context business planning capability becoming recognized funda‐ mental component describe core business particular ability delivering value beneath business strategy – capability supports configurability operations higher level services process according changes operational business context following consider governance capabilities abilities capacities organization ensure maximum value given context capability oriented approach governance itg capability public organizations public value describes organization contributes society value public result evaluations basic needs individuals groups society whole addressed relationships involving service provisioning whereas private value associated satisfying individual desires public value mostly focused achieving social outcomes generalize findings investments generate public value propose distinguish value delivering specific benefits directly citizens value improving organization public asset value types associated one multiple value sources cost saving increase quality service enabling new services intrinsic enhancements e changing environment providing political social cultural impact improving general quality life individual group public organizations free choose market authorized provide services environment involves government employees suppliers local communities citizens policy makers controlling organizations etc legitimacy support authorizing environment provides organizations may vary depending scope project aimed value example public organizations mandated authorizing environment deliver specific service ensuring compliance regulations recommendations standards core capabilities public organizations need develop manage order deliver results compared private organizations much capacity required produce public value lay outside public organization thus direct control succeed missions public organizations need develop internal capa‐ bilities controlled organization also explore co production opportu‐ nities external partners e g public private organizations volunteers associations etc means external capabilities governance context view three elements together define answering public value organization seeking produce support b sources legitimacy support authorize provide consume resources create value c core capabilities place deliver main service organization given context determined three constituting elements itg capability used specify public organization able ensure support context means processes resources turn support organization goals measured kpis key performance indicators indicators also highly important public organizations stakeholders state munici‐ palities citizens want ensure implementation delivers values measured corresponding kpi formalized effectively outlined concepts relationships model fig legitimacy support • organization authorized provide services gets support j zdravkovic rychkova core capabilities • describing organization essentially public values • describe organization aims contribute society context • represents information used characterize situational environment public organization context governance capability public value defined analyzing organization aims create sources legitimacy support core capabilities eventually lead goals achieved processes resources support goals goal • desired state affairs needs attained realize established value goals refined sub goals forming goal model refining desired behaviors using cost effective use effective use growth effective use business flexibility key performance indicator kpi • measurable property seen target achievement goal actor • person even part organization holding responsibility achievement goal governance actors may organization executives decision makers etc process • series actions performed order support one established goals governance domain processes concern decision making coordination processes monitoring performance manage‐ ment resource • initiated process perceived engage consume resources people materials software governance processes rely example actors involved decision making enactment monitoring well needed entities – technology infrastructure supporting processes execution well coordination communication involved actors core capabili cid es legi cid macy defines define context defines public values kpi measured valid lead itg capability fulfills goals responsible actors supported contains itg processes require resources fig model governance using capability based organization values context capability oriented approach governance governance capability • ability capacity ensure maximum value given context explained sect organizations may follow different organizational styles centralized federated decentralized essential addition new styles emerging proposed different governance solutions using capability notion fit organizational styles obtain patterns could applied concrete cases forming adequate governance structure study differs way elaborate case public sector student mobility see sect governance capability pattern federated organization style applies table table federated governance public sector capability pattern using improving organization context value comes improving efficiency organization e g cost saving improved processes enabling effectiveness new internal services resulting reputation public opinion using delivering direct benefit customer community value sources include improving user experience existing services enabling new services citizens enabling cooperation opportunities partnerships organizations broader impact society via intrinsic enhancements government policy makers controlling organizations main client program project authorize program project support form appropriate recommendations laws directives standards example mobile radio communication standards regulations privacy security communities citizens indirectly evaluate outcomes expressing opinion organization whole cost effective use effective use asset utilization effective use goals growth high process integration centralized data management measures goals kpis cost total cost number processes integrated centralized data data actors governance structures follow duopoly feudal federated archetypes – relevant c level executives representatives authority project leaders internal actors external domain experts internal external representatives controlling organizations performance measurement based kpis slas processes conflict resolution processes local control co producers global control organization authority coordination central local production semi formal processes communication coordination horizontal level focused groups discussions communities practice supported technology internal production co production based shared resources resources knowledge infrastructure solutions supporting technology infrastructure services coordination within levels e groupware social networks standard solutions providing centralized reporting business intelligence erp crm scm itg capability organizational plays role mediator service bus coordinating controlling inter organizational processes partners organization provides standards ensure coordination communication co producers also links co producers end users citizens j zdravkovic rychkova example case enabling student mobility universities including ones authors paper work show increasing need adjust governance according organizational structure deci‐ sion making place example focus federated governance style corresponding capabilities erasmus programme european region action scheme mobility university students european union eu student exchange programme estab‐ lished see also wikipedia erasmus programme erasmus students spend one three academic years another european country studying making internship another host university universities sweden france actively involved erasmus mobility aimed public value improve service quality enable new opportunities universities students communities co creation value partners organizations universities required context one basic rights exchange student full recognition courses passed successfully abroad home university leaving home university participating student signs learning agreement document describes programme studies followed host university end stay host university prepares student document called transcript records confirms completed studies programme results documents legally binding parties involved e home host university student face problems recognition student seek help student organizations make courses validated practice erasmus requires tight coordination university international department university administration faculty administration european authorities following issues illustrate need flexible yet explicit governance mecha‐ nisms supporting erasmus program universities course planning learning agreement typically allows student choose courses different master programs different levels study e g master first second year sometimes even offered different university departments planning courses allowing maximum flexibility exchange students require tight collaboration coordination different administration levels departments involved universities grading grade mapping different approaches education cultural specifics language local grading systems hard merge map single objective evaluation greed even though bologna system offers one needs adjusted locally according university country specifics ensure comparable compatible coherent systems higher education partners co producers need comply bologna process compliance requires significant changes organizational therefore sources legiti‐ macy support context include university authorities policy makers country european level bologna process context reveals capability oriented approach governance federated governance relevant table previous section implementing federated governance capability pattern presented table organizational plays role mediator coordinating controlling inter organizational processes partners also links partner universities students data integration universities standards data exchange main interest actors include university international office head faculties program managers faculty members department processes resources supporting main service standardized controlled european represen‐ tatives university authorities order ensure compliance table instantiating federated governance pattern supporting student mobility context value comes efficient processes services managing mobility programs e g providing incoming students accommodation insurance transport cards easy access university facilities language courses etc coordination planning curricula providing supporting material english courses local language etc internal services course planning incoming student selects modules different programs departments faculties university administration faculty administration european level authorities considered main client erasmus mobility programme authorize program support form appropriate standards e bologna agreement communities citizens indirectly evaluate outcomes expressing opinion organization e university whole goals high process compliance integration centralized data management order ensure compliance bologna seamless coordination communication partner universities host universities – home universities kpis number processes integrated number compliant processes centralized data data actors relevant actors european committees higher education erasmus coordinators european country university levels faculty administration representatives controlling organizations processes performance measurement based kpis slas processes conflict resolution local control universities faculties global control universities european level organizations coordination central local production following bologna semi formal processes communication coordination universities translating mapping academic records according bologna rules etc many issues solved case based local program coordinators e mail resources internal production co production based shared resources knowledge technology infrastructure services infrastructure solutions supporting coordination within levels experience shows weak automation far itg capability organizational e host home university student management systems plays role mediator service bus coordinating controlling inter organizational processes partners also links partner universities students j zdravkovic rychkova discussion conclusions future work values created public organizations particular expand boundaries organizations therefore today public organizations need seen part dynamic ecosystems maintain relationships different nature individuals organizations fulfill goals public organizations need adapt context exhibiting consequently various behavior using next organization needs examine context public value desires provide authorizing environment e authorize support value provisioning benefit eventually kind core organ‐ izational capabilities required elements interrelated provide understanding context governance enacted suggested model governance could become centralized decentralized according context therefore considered governance organizational capability proposed use governance capability patterns different organi‐ zational styles governance capability pattern seen guideline define governance support desired public values driving different context situa‐ tions illustrated governance patterns instantiated case student mobility higher education public sector eu motivating assumption public organizations need master wide range itg mechanisms deploy depending value creation context model proposed fig provides organizing logic help organiza‐ tions position justify govern projects consistent way based public value concept however argue governance styles mutually exclusive several styles used value creation context plan elaborate guidelines recommendations future conducting multiple empirical studies collaborating practitioners gover‐ nance capability patterns intended facilitate application governance mechanisms different governance styles provide general idea concrete recipe elaborated particular organization",
  "2018-RR": "introduction business process models treat participating actors deterministic machines given fork options available change time one problems models take account mindset participating actors forces people narrow decision paths however know experience people tend change behavior sometimes one instance business process execution another adding socio technical perspective attempt explore mindset actors understand reasons range options may consider decisions may reach paper briefly explain homeostasis appreciative system show applied business process modeling statecharts use example recruitment process doctoral student phd university professor example based personal experience kind process preliminary work stage idea work intend demonstrate practical utility appreciative system models instead would like show feasible model appreciative system statecharts link business process model therefore enlarge technical scope business process modeling social mindset perspective edited kowalski p bednar bider proceedings stpis section present cannon framework homeostasis explain affects decision making vickers appreciative system section introduce example phd recruitment process statechart model extend model appreciative system statechart section discuss model show new scenarios emerge section propose conclusions section homeostasis appreciative systems business process often associated achievement several well defined goals seen direct implementation cybernetics defined rosenblueth wiener bigelow rosenblueth collaborator cannon 1920s coined term homeostasis order explain animal body maintains steady states basis survival cannon explained living organisms somehow found way maintain steady states even though made unstable internal elements live unstable external environment maintenance less stable internal states maintain living identity therefore survival cannon work explained goal achieved maintenance steady states rosenblueth wiener bigelow simplified cannon work defined teleological purposeful behavior achieving well defined final state use negative feedback mechanism however whereas early work cybernetics involved study man made systems quickly applied socio technical systems business process management one example goals achieved business processes modern day descendants early teleological work writing social process perspective vickers took work created cybernetics expanded maintenance mind time writing maintenance relationships instead states maintenance relationship fact maintenance relationship given state vickers wrote attaining maintaining eluding relationships maintaining eluding relationship seen keeping specific state either close distant vickers work relationships maintained respect norms states remain less time like homeostasis maintenance less stable states vickers norm holding different goal seeking goal achievement today parlance goals achieved determine well defined end point whereas norm holding defines going activity matching current state affairs relevant desired state norm holding beginning end survival subject like homeostasis long animal alive strives maintain identity maintaining steady states results vickers called appreciative setting may also refer homeostatic state ©copyright held author proceedings stpis example university professor wishing recruit phd student norm holding requires understand maintenance scientific production team researchers rather outcome goal writing scientific paper recruiting phd student vickers appreciative system contains distinct interrelated elements reality judgments rj value judgments vj action judgments aj reality judgments correspond people perceive situation value judgments correspond compare reality judgments relevant norms action judgments correspond relevant behavior selected repeated exercise appreciative system leads vickers calls readiness components readiness see rj readiness value vj readiness act aj given moment readiness defines specific state appreciative system vickers calls appreciative setting vickers detailed stages value judgment component attaching reality judgment existing category thereby defining relevant norm matching evaluating reality judgment state affairs present future relations help norm weighing creating new category future exercises appreciative system innovating appreciative system model seen cognitive model process participant explains decision making e decisions act act cancel alter already started course activities behind phd recruitment within process example university professor may reality judgments number phd student resources available support may value judgments compare states relevant norms decide recruit another phd student comparison shows needs one phd student support model explained present statechart version appreciative system model quite simplified approximate example relevant norm selected reality judgment innovation stage create new categories years several simplified models vickers appreciative system proposed notably example phd recruitment process phd recruitment work use example phd recruitment process university process involves three actors faculty member fm – professor leading research group graduate student gs searching phd position doctoral school ds distributes funding phd manages phd candidates graduation ds releases calls phd proposals receives revises submissions fms attributes number grants edited kowalski p bednar bider proceedings stpis gs applies phd sending application fm fm approve reject gs based application assessment fm approves candidate ds accepts phd proposal gs gets recruited phd fm prepares submits phd proposal includes presentation research subject file phd candidate optional fm also eligible supervising phd e g must habilitation exceed quota phd students group etc phd proposal accepted ds recruitment process starts fm already approved candidate candidate becomes formally accepted doctoral school pursues phd otherwise fm searches candidate phd proposal rejected fm revise subject resubmit proposal next call statecharts yakindu sct statecharts model phd recruitment process using statecharts defined harel compared workflow paradigm widely used process modeling specify process set states transitions states allows us omit specification concrete activities associated recruitment focus process goals milestones state transition paradigm also applies representing homeostasis reality judgment value judgment action judgment modeled states adjusting norms acting acting stopping action main interest captured states transitions thus statecharts provide uniform modeling notation reason business process specified process participants cognitive process associated decision making participant statecharts formalism statecharts formalism specifies hierarchical state machine hsm extends classical finite state machine fsm providing hierarchy depth possibility model states multiple hierarchical levels notion abstraction refinement levels ii orthogonality possibility model concurrent independent submachines within one state machine iii broadcast communication possibility synchronize multiple concurrent submachines via events fsm states transitions central concepts statecharts state specifies state modeled system state behavior describes actions taken conditions transitions states triggered events transition takes place event e occurs – e called triggering event transition triggering events complemented guard conditions e c case say transition takes place e occurs c holds execution state machine state active passive due hierarchical structure several sub states embedded parent state multiple states statecharts activated given moment execution states called active configuration state machine compared fsm ©copyright held author proceedings stpis transition statechart transition seen change one active configuration another yakindu use yakindu statechart tools yakindu sct modeling simulation analysis process yakindu modular toolkit developing simulating generating executable finite state machines fsm yakindu statecharts organized regions hence possible organize multiple state machines different regions run concurrently regions contain states transitions state turn contain one regions turning composite state contains one region orthogonal state contains two regions state define behavior form one several trigger guard effect statements statements provide declarative non prescriptive specification behavior execution order applied triggers events complemented guard condition guard effect executed trigger occurs guard condition holds effect include one several actions assigning value variable raising event calling function example see fig ds sendcall n1 raise vj ds sendcall event occurs n1 variable assigned vj event raised simulate statechart models simulation view yakindu stc framework allows us manually raise events inspect modify variables running simulation observe model behavior sequence active configurations triggered use simulation tool play discover different process scenario advanced features model simulation available yakindu scope paper modeling phd recruitment statecharts fig presents statechart model phd recruitment process developed yakindu diagram consists three regions – fm ds gs – representing process actors region contains statechart describing behavior corresponding actor gs region describes behavior graduate student applies phd position statechart specified four states phdapplication default starting state rejected approved accepted states state transitions depicted arrows states triggered corresponding triggering conditions trigger guard expressions attached arrows satisfied à example transition phdapplication rejected triggered rejectcandidate event raised guard specified ds fm regions describe behavior doctoral school faculty member respectively whereas states model atomic e substates preparation recruitment states fm region composite states preparation state orthogonal state two concurrent edited kowalski p bednar bider proceedings stpis regions called subject candidate regions specify subject candidate selection two independent concurrent behaviors faculty member ds fm gs statecharts running concurrently statechart reacts events raised others internal events environment external events table present list events defined phd recruitment process table events phd recruitment process event description gs apply application graduate student received ds sendcall call phd proposals sent doctoral school defsubj reviesubj faculty member fm defined revised phd subject approvecandidate phd candidate approved rejected fm rejectcandidate submit resubmit phd proposal submitted resubmitted fm stop fm stopped submission accept reject ds accepted rejected proposal notifyaccept notifyreject notification ds received fig statecharts model phd recruitment ©copyright held author proceedings stpis appreciation phd recruitment extend statechart model phd recruitment fig model illustrates appreciative system internal regulative process one process participants – faculty member fm model explains fm decisions within process e decisions act act cancel alter already started course activities appreciative system modeled supplementary region statecharts diagram called fm complete statecharts diagram consists four regions address statechart model phd recruitment fig statechart model fm appreciative system fig statechart model appreciative system consists one composed state called maintenance maintenance state represents appreciative setting homeostatic state actor associated set norms n actor seeks maintain state affected interaction environment maintenance state contains three substates reality judgment rj value judgment vj action judgment aj states connected transitions reflecting appreciative system model objective regulative process also called appreciation maintain appreciative setting homeostatic state actor state behavior specified list trigger guard effect statements codify norms integer variables n1 n2 use guard effect parts explained fig appreciative system model faculty member fm edited kowalski p bednar bider proceedings stpis statecharts model appreciation model stable state identity faculty member following norms n1 ensure scientific production n2 ensure team cohesion size skills n3 ensure originality relevance researched topic n4 ensure mentoring management team interactions fm ds gs described phd recruitment statechart model may affect identity fm rj state fig fm interacts environment makes observations event relevant one several norms occurs – corresponding norm variable n1 n4 assigned transition value judgment state vj fm statechart triggered expressed behavior statements rj state fig example gs apply n2 raise e statement describes behavior triggered fm receives application graduate student gs apply observed event relevant norm n2 ensuring team cohesion new member eventually join team thus n2 set transition vj triggered n2 raise e effect behavior table provide list events observed rj vj state current situation evaluated threat opportunity isthreat isop variables statecharts model actor stable state combination isop isthreat used aj state decision making table provide list assessments outcomes perceived impact stable state example fm cand isgood isop raise aj – statement describes behavior faculty member examines application believes candidate good fm cand isgood model perceived opportunity followed transition aj isop raise aj aj state model visible decision making logic fm faculty member decide acting nothing triggers transition rj assessing situation triggers transition vj table reality judgments observed relevant events event relevant description norm gs apply n2 application graduate student received example career change may impact fm getpromoted n4 capacity recruit phd students ds sendcall n1 call phd proposals received phd proposal accepted funding notifyaccept n1 doctoral school notifyregect n1 phd proposal rejected doctoral school ©copyright held author proceedings stpis table value judgments situation assessment assessment outcome opportunity threat fm cand isgood qualification candidate fm cand isbad professional situation fm status isnok impact role fm status isnok n1 research group leader fm subj isgood n1 quality current research subject fm subj isbad fm phd isrequired size efficiency group fm phd isnotrequired ajàvj model transition triggered whenever changevj event raised used simulation order mimic human process decision making essence appreciation indeed individual may undertake vjàajàvjà thorough reflection cycle various assessments concurrently raising dropping isop isthreat flags moment satisfied value judgment conversely individual make hasty conclusion vjàajàrj making judgment based one parameter passing action fm terminates reflection cycle makes decision modeled event one trigger guard effect statements specified aj state executed statements trigger event guard specified combination n isthreat isop values effect consists raising set events trigger transition aj rj vj fm appreciative system statechart captured processed staechart model phd recruitment table provide details decision making logic implemented current model note situation assessment table decision making logic table validated authors based experience fms detailed empirical study part future work example isop isthreat raise changevj statement specifies decision taken condition opportunity threat perceived behavior following effect switch value judgment reassess situation example n1 isop isthreat n1 raise defsubj raise reviewsubj raise submit raise resubmit isop raise act statement specifies decision taken following conditions opportunity perceived scientific production n1 isop threat perceived isthreat behavior following effects based current active configuration phd recruitment process definition revision subject submission resubmission proposal resetting variables n1 isop triggering transition rj raise act edited kowalski p bednar bider proceedings stpis table decision making logic fm norm opportunity threat effect change value judgment nothing change value judgment act n1 defsubj reviewsubj submit resubmit act defsubj reviewsubj submit resubmit change value judgment n2 act approvecandidate defsubj act reject candidate n3 act definesubj reviewsubj act reviewsubj change value judgment n4 act defsubj reviewsubj submit resubmit act stop cancel process change value judgment model analysis identification new scenarios statechart model phd recruitment fig considered external view phd recruitment process model assume intentions process participants fm ds gs explicit studied formalized transformed requirements traced process model traditional approaches kind model provision expressing process participants appreciation situation appreciation often tacit therefore hidden view even though hidden appreciation determines decisions participants may make business process therefore affect outcome propose extend external process model internal cognitive model sheds light appreciation following vickers replace idea process participants make decisions within business process order achieve goal idea making decision order maintain desired elude undesired relationships results vickers called appreciative setting may also refer homeostatic state statechart model appreciation provides insight process participants intentions behavior result new possible process scenarios discovered work statechart model fig allows us study fm appreciation impacts decisions faculty member recruiting new phd candidate events raised based active configuration phd recruitment statechart events processed ignored ©copyright held author proceedings stpis design modeling appreciation made following observations appreciative system modeled fig independent phd recruitment process modeled fig means new iteration appreciation process triggered time phd recruitment process e g fm receives promotion new application regulation cycle appreciative statechart potentially affect ongoing phd recruitment process appreciative model perception threat opportunity subjective means outcome value judgment vj observed event vary one concrete person fm another one occurrence process another depending capacity person see see bright side things tendency think carefully take risks statechart model implemented declarative specification behavior assessing situation vj b possibility simulate reflection vjàajàvjà cycle desired length thus actor use one several assessments arbitrary order independently observation triggered assessment table example receiving application fm decide recruit candidate based application evaluation alternatively fm assess academic status motivation prospective research subject simulation propose following use complete model run regular scenarios phd recruitment process expected original formal process specification add noise triggering additional events events mimicking environment social system fm interacting examples noise events career opportunities health issues conflicts within group new ideas inspirations etc include two current model show socio technical system phd recruitment takes place closed state mind process participants fm case affected events directly related process using appreciation model show results fm interacting environment change perception situation make fm act act stop acting response fm decide cancel hiring resubmit proposal point case norm threatened e g judges subject challenging candidate qualified personal career situation threatened aspects modeled affects formal process scenario seen random bad decisions often referred human error safety critical strategic process show kinds decisions random driven process participants appreciation situation indeed seen studied human factor edited kowalski p bednar bider proceedings stpis applications appreciative system modeling considered process related design organizations propose model organization ecosystem individuals seeking maintain homeostatic states various interactions despite statechart models propose allow one learn organization stakeholders explicit implicit norms discover ground potential collaborations conflicts work model appreciative systems statecharts help process design phase parallel standard activities claim considering appreciative settings improve existing workflow business process management systems though think explain systems might work state orientation state orientation help order explain predict analyze decisions participants must could take process implement decisions activities use paradigm expressing cognitive model decision making process model appreciative system model vickers appreciative system explains human organizational behavior norm holding instead prevalent goal achievement focuses modeler attention relationships maintained participating actors instead outcomes want achieve different perspective help business process management system designers see scenarios predefine activities specify possible outcomes existing business process workflow management systems activities predefined analysis appreciative system model shed light situations process fails follow predefined scenarios reach predefined outcome models case model management notation cmmn bmm omg considered related work business motivation model models notations originate enterprise domain specific thus seen practitioners friendly cmmn bmm outcome oriented like bpmn process modeling notations norm holding paradigm vickers appreciative system provides substantially different way looking business process design statechart statechart generic notation reason state transition systems well suited modeling appreciative system model defined vickers inherently state oriented hand well suited modeling processes loosely structured context driven processes particular therefore approach use statechart common domain independent formalism extended process modeling omg case model management notation version omg business motivation model version ©copyright held author proceedings stpis yakindu yakindu sct provides useful features system modeling simulation efficiency shown examples various systems believe tool also useful modeling simulating appreciative systems conclusions paper propose extend traditional goal oriented process model model appreciative system process participant using appreciative system cognitive model decision making interactive processes triple interest process engineers take account process context social system formed process participants personal professional contexts gives opportunity consider complex interactive scenarios anticipate sources actions undesirable processes catastrophic consequences safety critical processes activities associated risk taking benefit socio technical approach process modeling analysis process participants model appreciation provides opportunity think norms values beliefs reflection cycles decision making routines experienced filling tables example identifying elements process participants better cope stress encountered activities better understand source effects stress possibly put place context person specific strategies stress management process managers understanding least aware appreciation process participants help process managers anticipate understand source conflicting situations execution interactive processes process manager better equipped propose conflict resolution strategy strategy may involve initiating new appreciative cycle maintenance state participants able change values vj find common vision situation three cases discussed lead discovering new process scenarios based interactions process participants environments practice reflected adding new transitions states formal process model example add new transitions corresponding scenarios fm cancels decides resubmit phd proposal statechart model considering information system supporting phd recruitment new interfaces supporting cancelation compensation activities integrated system work consider appreciative system one process participant – faculty member modeling appreciative systems participants would provide us better understanding complex interactions involving trust edited kowalski p bednar bider proceedings stpis conflict emergence resolution cooperation concurrency etc subject future work",
  "2019-BRLG": "introduction term process comes latin refers performed action something done achieve specific result surprise since adam smith frederick taylor de facto point view business processes activity centered business process represented set interrelated ordered activities tasks today era data new point view business processes emerged many processes success anymore predictability efficiency capacity adapt situation treat customer request unique processes require creativity collaboration execution depends data collected current process instance case knowledge expert handling case rather priori model knowledge intensive processes kip execute kip achieve specific result however way achieve universal sequence actions designed validated tested execution thus traditional activity centered point view kip challenging automate control execution improve various communities grown objective better study kip share practices acm adaptive case management community practitioners promoting methods tools adaptive case management opposed business process management wfmc global awards workflow management coalition case management recognizes focuses upon successful use cases within adaptive case management cmmn case management modeling notation omg case modeling standard also gathers community companies around representation support cases including ibm oracle tibco sap others adaptivecm international workshop adaptive case management dec2h decision hybrid approaches processes annual workshops researchers practitioners publish discuss kip non workflow approaches process management problems around automation collaboration flexibility compliance structure raised communities work new approaches like speech act ai4bpm artificial intelligence business process management business process management bpm discipline emerged order better manage optimize processes bpm explores activity centered view processes based assumption business process modeled possibly large sequence activities process activities according bpm interrelated ordered time known priori process model tested validated resulting process follow instantiate model execution activity centered view provides control processes ensures compliance design importance complexity kip exposed progress bpm within companies kip scenarios hardly predefined compliance kip ensured run time makes application traditional bpm practices kip difficult possible limits automation kip strategy models deciding important tasks plan key processes optimized rely organization goals goals modeling businesses stakeholders interested questions activities share common practices challenges kip goals important concepts keep mind information processing collaboration decision making regular steps assure compliance constraint executing process important work study analyze challenges practices kip management reported research literature objective highlight recurrent topics kip literature preferably recent works characteristics still unsupported spite reported advancements kip management remains challenging new research questions yet solved outline perspectives kip research particular discuss approach structural semantic analysis kip scenarios approach aims provide compliance support kip suggesting process fragments fitting execution context discussed solution contributes third group solutions outlined execution support based classification techniques used data science structural analysis ontologies semantic association rules behavior paper organized follows section ii presents bpm context defines kip section iii presents discusses three groups solutions identify literature bpm extensions theoretical foundations kip execution support solutions kip section iv outlines perspectives kip research section v presents conclusions ii business process management knowledge intensive processes cases business process management literature defines business process set interrelated activities performed coordination organizational technical environment order achieve business goal business process management discipline includes concepts methods techniques support design administration configuration enactment analysis business process bpm seeks manage optimize business processes order deliver best outputs product service bpm recognises phases process lifecycle process identification process discovery process modeling process analysis process redesign process improvement process implementation process monitoring controlling bpm uses activity centered point view processes activities define states process entities bpmn business process model notation epc event driven process chain examples modeling languages widely used academics practitioners modeling languages activities events defined explicitly ordered forming workflows executed modeling languages less restrictive also exist declarative paradigm languages propose constraints basis modeling support management optimization business processes multiple solutions developed process aware information systems pais systems support operational business processes combining advances formation technology recent insights management science workflow management systems wfms example pais systems process modeling automation process represented workflow model core wfms business process management systems bpms successors wfms support different features process monitoring use business intelligence process improvement b knowledge intensive processes process automation optimization pais exposed specific type processes difficult manage within established bpm paradigm industrial processes current service processes automation encountered knowledgeintensive economy since decades knowledge considered one important competitive advantage companies knowledge management km discipline studies knowledge created developed retained applied workplace enables organizational learning innovation context business processes specific human activities easily modeled regular process modeling languages therefore left dedicated activities sub processes processes knowledge key characteristics called knowledge intensive processes kip compared manual tasks defined bpmn process participant accomplishes manual task knowledge intensive activities tasks characterized intensity knowledge requirements use transform knowledge within processes kip emphasizes importance experience tacit knowledge process participants also called knowledge workers role knowledge workers accomplish specific activities characterized complexity require creativity km kip open fairly new research field many definitions characteristics co exist following characteristics kip defined kip embed lot knowledge tasks complex • decision making requires lot information processed simultaneously kip require lot human collaboration execute • process kip high degree uncertainty activities might • follow expected order activities initially planned might appear makes structure kip loose kip require creativity original ideas improvisation • traditional business processes may characteristics however case kip typically present making process difficult model manage within bpm paradigm concerning uncertainty distinction must done ordering activities unpredictable activities unpredictable activities depends context execution require improvisation based tacit knowledge example unique situations expected knowledge workers improvise try new actions based assumptions tacit knowledge several terms used kip literature knowledge intensive business process kibp artful process highlights fact art required execute would extremely difficult transpose within system article use term kip denote types processes c adaptive case management kip field grows exposes limitations bpm support attempts support kip within evolved around case paradigm community practitioners known acm worked specifically point view extent cases handle kip challenges following case management process cmp driven emergent knowledge case subject environment largely based human expertise highly unpredictable difficult replicate hard analyze improve howtos available cases differs slightly kip point view adopted within common points find unpredictability nonrepeatability kip allows process instance differs exactly like case unique deduce low nonexistent structure also knowledge intensive property knowledge workers kip case managers acm must deal lot information experience take decision mapping kip characteristics multiple definitions case management made major distinctions come goaloriented property case instance must one goals evolve time data centered property cases updated information given service human consulted also adds boundaries context scope case event driven activities executed following events beyond acm multiple case oriented applications investigated mentioned case handling initialized multiple approaches case idea case management adaptive case management dynamic case management production case management emerging case management another example case based reasoning cbr also tries solve problems relating similar previously solved problems past experiences stored case base using artificial intelligence cbr using problem description propose solutions iii motivation problems solutions knowledge intensive processes gather papers three main steps first search terms weakly structured knowledge intensive process models qualities google scholar relationships weakly structured knowledge models taxonomy extracted articles kept focusing kip km title abstract second searched within adaptivecm proceedings order extract acm works proposing practical solutions case point view preferred results first step directly coming acm community adopting point view chose point view proposed solution finally extra works previous researches modeling languages kip added kip papers may missing goal research evolves works talking processes without structure weakly one kip challenges organize papers three groups first group includes solutions grounded bpm practices works extend bpm order support kip provide appropriate level flexibility user support kip management second group discuss works exploit new paradigms kip management study characteristics propose theoretical foundations kip works kip management considered discipline alternative extension bpm third group works reflects pragmatic views kip discuss works focusing practitioners needs presenting concrete solutions kip execution support group specifically oriented already implemented solutions opposed theories characteristics second group derived bpm opposed first group extension bpm kip kip processes strongly rely human decisions collaboration knowledge always existed organizations bpm develop theory practices help organizations optimizing processes rapid expansion bpm process automation proliferation bpmn de facto standard process modeling beginning 2000s revealed kip limited support bpm van elst et al study kip supported process models workflow authors emphasize kip exploratory non repetitive detail completely known priori authors conclude nature kip supported traditional bpm yet bpm practices might improve quality efficiency knowledge work even improve process modeling activity herrmann et al also recognize flexibility kip crucial factor efficiency traditional bpms wfms require predefined structures optimize business productivity suitable kip management various kip supporting solutions based bpm extensions adaptations proposed last decade van der aalst et al propose declarative specification language workflows use constraints define space process execution scenarios along activities events declarative specification simplifies model less scenarios need modeled also leaves flexibility process executor activities chosen run time bpmn replaces predecessor defines several kip friendly concepts one ad hoc subprocess allows modeler define group activities without sequences features enable flexible scenario execution one specify sub process activities executed many time process executor requires new notation also allows explicit dependencies activities data riss et al study pais deployed increase productivity cost rigidity propose approach keeps flexibility control bottom process development evolution approach uses knowledge workers execution experience order make company bpm evolving however also state approach based static models reducing ability adapt quick changes happening real processes regulations shkundina et al study challenges user meets knowledge intensive process execution authors conclude process workflow provides context concrete task needs executed result user spends lot time searching relevant information guidance order make decisions authors propose enhance workflow tasks information context metrics measuring similarity tasks based execution contexts proposed moura et al state computing infrastructure adequate enough support user activities within kip collaboration support represents particular challenge propose approach tool recommend design time execute run time best dedicated communication services kip manfreda et al perform case study find bpm methods reused case kip globally main bpm phases compatible kip local adaptations required support innovation collaboration great number participants propose introduce methods dedicated kip bpm phases workshops initial modelling existing processes phases analysis phase qualitative methods preferred specific case study models required sallos et al linked bpm literature knowledge intensive entrepreneurship kie literature order build conceptual framework business process improvement bpi context kie gromoff et al outline multiple problems around kip management survey made russian companies problems concerned process transparency missing links kip events one instance another one knowledge intensive control making reporting inefficient absence knowledge intensive change management reducing predictability system approach hindering support parts organizations problems motivated authors support flexibility process management knowledge intensive perspective however authors support idea better process formalization lead better execution propose improve management kip self adaptive system system respects kip requirements flexibility within ideas process optimization methods bpms another addition bpm business rules management brm business rules management systems brms following rules explicit constraints behavior provide support behavior moreover explicitly declarative instead procedural applied business must kept within repositories order applied across processes procedures one objective rules separate acceptable business activities unacceptable ones brms repositories storing integrating business rules within organizations order facilitate business processes whereas significant effort made extend existing bpm theory practices order support kip works consider kip supporting solutions necessarily root bpm adaptation b theoretical foundations kip group discuss works study kip characteristics create foundations future artifacts kip supporting solutions is¸ik et al study differences kibp kip non kibp regular processes list used exposed characteristics found literature order test criteria unique kip three criteria discriminates two kinds processes kip usually complex non repeatable require creativity regular processes usually simple repeatable require lot creativity however following study structure automation discriminating precisely stated kip parts might automated kushnareva et al study limitations bpmn context specific case crisis management process decisions lead predefined activities unpredictability events proposed solution using statecharts formalism order change point view must done must done work formalized using higraphs mathematical graphs hull et al introduce guard stage milestone gsm meta model also called gsm artifact lifecycle models approach considered entity centric based four key constructs information model data events milestones concerning stage guard required events enter stage stage bodies container sub stages also composed guards milestones milestones business goal ends current stage instance activated execution evolves response events triggered milestones detected guards dos santos et al emphasize kip contain creative tasks tacit knowledge unpredictable decisions evolves dynamically following characteristics knowledge manipulation still difficult represent process models specific aspect hinders kip modeling traditional methods specific knowledge oriented techniques able describe aspects kip aspects simultaneously order handle useful concepts kipo knowledge intensive process ontology built following methodology kipo high level ontology based pre existing ontologies business process ontology bpo collaborative ontology co decision ontology business rules ontology bro knowledge intensive process core ontology kipco pre existing ontology describes specific point view based criteria gathered literature review kipo domain agnostic concepts enriched stereotypes unified foundational ontology ontology built using philosophical linguistics cognitive psychology theories concepts allow represent nearly part kip di ciccio et al note following research trend holistic system supporting knowledge workers process therefore acknowledge missing mapping characteristics system requirements kip mapping would ease choice existing approaches practitioners researchers following point view used kip authors gathered requirements induced characteristics kip characteristics derived literature review application scenarios following characteristics kip described knowledge driven collaboration oriented unpredictable emergent goal oriented event driven constraint rule driven non repeatable requirements organized within classes data knowledge actions rules constraints goals processes knowledge workers environment following authors requirements characteristics allow rethink process life cycle instead regular design execute monitor analyze design steps becomes easier think templates fragments reuse design execution adaptation continuum marin et al reuse di ciccio et al kip characteristics requirements order compare current case management definition test well cmmn implement kip case management definitions mainly support characteristics one slightly supported one definition characteristics kip classified categories modelling execution cmmn supports modelling characteristics kip fully partly making good candidate kip modeling zensen et al compare bpmn cmmn using example kip provide guidelines usage study four characteristics modeling language process structure routing control flow communications events data aspect data flow whereas bpmn perfect repetitive work data exchange exceptions strict workflow cmmn data centered allows flexibility ordering tasks within workflow findings show two languages complementary modeling language potentially integrate specific activity task hislop et al define gap theory practice km field propose directions future research km field based multiple papers according authors km benefit order increase socialising connectivity collaboration order create co create knowledge multiple technologies presented examples nevertheless biggest organizations modern ones still unable benefit technologies much information available within organizations multiple factors technical organizational hinder possibilities usage knowledge workers characteristics specific kip introduce new solutions represent alternatives bpm workflowinspired approaches c execution support kip di ciccio et al study informal communications processes generated fly certain situations propose mailofmine tool builds workflow structure collection mails order represent artful processes kip implicitly hidden behind communications based process mining workflow mining techniques extracts tasks presents graphically global local views local view task shown constraints time another task implication required tasks repeatability many times may done global view tasks presented interdependencies constraints orders tasks many times may achieved difference local global view lies readability criteria local view adapted check constraints one task global view adapted main view whole process kip therefore considered collection constraints moura et al aim support execution knowledge intensive activities requiring collaboration kip usually require collaboration multiple actors services authors argue infrastructures able support activities propose xcutekip semi automatic recommendation system collaborative services kip based previously shown kipo precisely using collaborative ontology collaborative activity kip mapped services order calculate appropriate collaborative service run process make people communicate adequately addition original solutions acm appeared new domain research particularities acm make interesting acm manipulates cases view • equivalent process instance instance case somewhat different another one following events cases stored finished reused via templates help knowledge worker make better decisions acm uses goals help knowledge worker choose • best action case might multiple goals sub goals offering multiple choices step acm data centric unpredictability instead • using activity centered view instance moving one state another one predefined workflow model following rules case seen file data added modified knowledge workers resources generate data acm community studied multiple characteristics point view proposed solutions handle cases within information systems huber et al study acm order fill gap left bpm kip bpm typically used increase performance processes standardizing repetitive work wfms kip unstructured nature require flexibility bpm unable correctly support increase efficiency however acm proposed fill gap giving general structure previous cases leave exact execution open change main problem idea apply acm practice within organizations questions around scaling large companies implied collaboration would work opened huber et al study acm context open innovation companies creating complex products services requiring cooperation multiple teams open innovation oi paradigm supporting collaboration includes creative activities unpredictable highly knowledge intensive authors try use acm support unpredictable knowledge intensive activities requires lot collaboration cognini et al study partially structure processes depending possible variances knowledge work predictable usually predefined structure available help knowledge worker take decision authors using cbr methodology order use process fragments propose solutions knowledge workers propose case based process fragment modelling language named business process feature model bpfm used case content representation modelling language bpfm compared bpmn cmmn declare modelling languages expose required features supported missing cbr used execution context bpfm used follow steps activities realized data used tran et al propose approach allow flexibility within processes checking compliance using logic rules acm therefore isis papyrus acm system extended support compliance checking design time usual methods model checking applied however run time goals evolve state based rules data based rules used propose predefined set possible goals tasks new tasks proposed generic templates case knowledge worker takes responsibility complying rules tasks completed results gathered create new compliance rules achieve goals tenschert et al present approach detect micro processes using speech acts instead monitoring actions progress knowledge work based interactions authors expect bridge gap structured semistructured ad hoc processes focusing interactions approach allows create templates reduces need seek information within documents help knowledge worker automatically fill partially fully data depending current case czepa et al discuss ease update compliance rules knowledge workers business users using constraints ontologies machine learning techniques used learn past cases recommend next actions routis et al propose directions upgrade cmmnenabled platforms authors stated limitations within platforms typically conditions data event supported closed cases well exploited reused knowledge workers make modification case model execution phase notion case learning introduced procedure improve case model context changes offering suggestions instead restrictions cmmn flow first goal would implement method could transform cmmn model case template vice versa second goal validate case learning procedure useful tool knowledge workers bider et al test patterns could used nonworkflow models precisely goals patterns within stateoriented business process modeling stobpm stobpm represents state process instance within dimensional space vector multiple types data embedded parameters process instance patterns used approach characteristics first activities tasks patterns order like workflow models second patterns rather semantic syntactic early test shown interesting positive results even specific stobpm goals patterns zasada proposes derive patterns legal texts using content analysis methods order help elicitation food industry compliance requirements patterns extracted legal texts using content analysis semi automated procedure stored regular expressions even method still fully automated generated rules machine readable knowledge reused sid et al focus flexibility kip using artificial intelligence planning techniques allow knowledge workers choose granularity level execution dynamically change goals solution aims support knowledge worker achieving goals instead giving much freedom control excessive restrictions given recommendations iv discussion spite recent advancements kip management remains challenging practitioners many research ques tions yet solved researchers section summaries challenges outline perspectives future research kip reported literature acknowledges various aspects kip make different regular business processes thus challenging automate manage already established methods tools based study following questions still need addressed researchers practitioners future illustrate questions example meeting deciding orientation take company meeting seen kip implies lot collaboration multiple participants creativity required bring new solutions decisions often made meeting unique manage efficiently effectively information knowledge manipulated e created used updated kip according many organizations struggle amount information manage lack information knowledge management practices tools lack integration knowledge management process management negative impact kip whereas acm proposes solutions address knowledge intensity design bpm solutions require extension example recording participants speeches documents used would help see decision made case team change however huge amount texts documents meetings hindering usage people time hear read everything one solution extend documents transcriptions adding relevant tags document used take decision another solution would follow adaptive open innovation phases instead b support collaboration context specific decision making kip collaboration knowledge workers participating kip remain challenging according organizations often preoccupied process standardization control supporting collaboration creativity priority excess control formalization negative impact knowledge workers kip offers help informal communications solutions collaboration support highly controlled environments yet developed illustrative example meetings usually made around table using pencils papers optionally video conference distant people forcing people use precise software instead tools might reduce creativity freedom therefore breaking goal meeting presenting sharing creative ideas order take decision known solutions combine standardization creativity homemade adaptations may work c integrate context information kip design perspective design build kip supporting system based priori model analogy bpms wfms attractive model simulation validation verification enable compliance design could save lot efforts implementation kip however contextor case sensitive execution scenario unique compared workflow execution kip execution considered unpredictable execution scenario driven context current situation b tacit knowledge expert group experts involved traditional workflow model provide enough flexibility support kip within current solutions workflow partially skipped organised flexible ad hoc subprocess however new activity added workflow run time planned advance declarative modeling languages propose partial solution activity violate predefined constraints executed example meeting precise objectives even main phases globally known agenda presentation discussion topic knowledge brought person might change agenda based internal external context company foreseeing information building agenda difficult situation evolves continuously based talks decisions constraints like prioritization time limits avoid unending talks unexpected useless topics sharing agenda main information meeting also reduce topic talks support compliance kip frequent changes regulations rules followed processes reflected corresponding pais brm brought solutions compliance managing rules within specific transverse repositories using dedicated languages rules declarative approaches allow create frame knowledge workers free long stay inside kip automated compliance checking challenge due context sensitivity compliance checking kip needs done run time activity created instantiated according execution context decisions next activity execute often made knowledge worker kip thus responsibility knowledge worker ensure activity comply regulations norms possibility analyze activity instance compliance potential impact process scenario would great value knowledge workers lack formalization regulations norms also makes compliance checking kip challenging regulations norms often specified unstructured text hard access use knowledge workers process execution formalizing regulations integrating pais improve situation help knowledge worker ensure compliance example order agenda might important responsibility participant present relevant ideas however difficult prevent discussions move another topic except agenda regularly reminded emergency cases might required change topics e support flexibility kip scenario flexibility kip studied multiple works works tried offer solutions managing flexibility bpm like however paradox organizations expecting standardize processes bpm respecting regulations giving enough freedom action knowledge worker still unsolved kip overlapping multiple fields research like bpm km allowing multiple points views illustrative example flexibility available nature meeting people talking following simple rules people raise hands speaking slot everybody accordance unexpected topic discussed even agenda however agreement found becomes difficult add topic two points view kip prevalent today activitycentered view process specified sequence activities data centered view process specified data also referred case requires manipulates using activity centered view process designer explore process kip execution logs order analyze process steps identify process structure activity centered view highlights structure focuses order activities high level structures patterns explored within data centered view kip seeks achieve one multiple goals collaboration participants kip managed using document case folder participant uses information case folder makes decisions based participants execute activities case based available inputs required outputs point view ensures flexibility decisions process scenarios compared workflow activity centered view two points view complimentary activitycentered view used provide global roadmap kip sequence steps achieve goal design time roadmap hindering local flexibility complex steps steps subprocesses detailed using data centered view run time conversely patterns complex highly prescriptive activities defined design time using activity centered paradigm run time knowledge worker choose pattern combination patterns appropriate maintaining global flexibility multiple ideas patterns applied kip acm discussed compliance patterns studied within legal texts transformed regular expressions order check compliance introduces goal patterns stobpm represented cases cbr bpfm order help knowledge workers proposing solutions based process fragments using activity centered point view illustrative example would give list topics talk strict vision would impossible talk something else current topic meeting nature flexible applying data centered point view allows change topic following information given participant topics might linked impact company must therefore addressed together precise order case linked topics added agenda seen fragments patterns f explore reuse process fragments kip idea studying past cases order identify reuse fitting fragments next instances like cbr kip highlighted seems great potential possible way help knowledge workers could provide patterns past solutions check compliance instance compared reference using combination mathematical technique ontologies expect compare logs activities current instance kip previous finished kip reference regulations standards similarly cbr searching close solution problem illustrative example based agenda topics order build next agenda specific topics already addressed past might useful reuse past fragments topics added initial agenda unexpected deviation talks might useful reuse order new agenda reminder context every participant several methods combined evaluate similarity business process models similarly three techniques combined order check structure semantic behavior process fragments order compare structure patterns propose use formal concept analysis fca fca method data structuring based deriving concept hierarchy collection objects properties method applied knowledge discovery databases kdd semantic comparison expected done using concepts babelnet semantic distance wordnet behavior comparison done using association rules like priori association rules generate rules describing conditions objects might appear based traces execution expect show first fca semantic analysis generate interesting fragments association rules propose order assembly first contribution extract fragments interest business based domain ontology second contribution propose knowledge worker combine fragments v conclusion knowledge intensive process management represents challenge modern organizations kip often complex context specific require flexibility involve collaboration rely creativity tacit knowledge participants product design change management problem solving diagnostics customer relationship management education apprenticeship examples kip strategic modeling activities share common practices challenges kip first priority goals information processing collaboration decision making usual steps importance compliance constraint executing process contributions kip domain bring answers practices strategic modeling article provided overview current work kip examined several groups contributions works defining kip management solutions • extension bpm solutions works use activitycentered point view kip add new concepts semantics order increase run time flexibility processes improve context awareness works developing theoretical foundations kip • considering kip management alternative bpm works explore alternative non workflow approaches process management data centered artifactcentered etc works proposing pragmatic solutions kip execu• tion support works driven practitioners needs focused implementation practical value first place spite significant efforts researchers practitioners domain research still required order enhance pais kip management capabilities major challenges concern run time flexibility standardization compliance support run time flexibility refers capacity pais add skip modify process tasks run time standardization compliance support refers capacity pais help knowledge workers respect regulations context specific guidance knowledge workers automatic identification compliant non compliant activities runtime possible solutions patterns kip process execution context studied literature identifying patterns previous activities resolved cases instances helpful developing recommendations knowledge workers example corresponding solution help knowledge worker identify activity fits situation time comply norms regulations defined current kip instance going develop idea future work",
  "2019-RRW": "introduction business process models treat participating actors alike deterministic machines human actors seen different automats producing results based predefined inputs psychological social dimensions characterize human behavior represented models article explore dimensions may added traditional business process model use vickers appreciative system model human behavior vickers created model show people made sense environment vickers feeling models based goal achievement give good description richness human interpretation complicated situations corresponding author © rychkova et al open access article licensed creative commons attribution license http creativecommons org licenses reference rychkova g regev wegmann extending business process models appreciation complex systems informatics modeling quarterly csimq pp 23–46 available https doi org csimq additional information author orcid id rychkova – https orcid org pii s225599221900104x received january accepted february available online april explain homeostasis vickers appreciative system show concepts applied business process modeling use example recruitment process graduate student candidates evaluated hired doctoral students use term phd abbreviation doctoral student use statecharts model process defined university process includes doctoral school faculty member graduate student candidate first create model call operational shows standard process model usually drawn automate behavior discuss operational model captures technical perspective process keeping social perspective process participants implicit make social perspective explicit vickers appreciative system call appreciative model model exposes social norms govern behavior process actors preliminary work extends previous publication stpis workshop work would like show feasible model appreciative system statecharts link business process model therefore enlarge technical scope business process modeling social perspective section introduce example doctoral student recruitment process provide basic concepts statecharts section present operational model doctoral student recruitment process defined university section present cannon framework homeostasis vickers appreciative system propose formalization appreciative systems harel statecharts extend operational model doctoral student recruitment process appreciative model section section discuss interest challenges formalizing appreciative systems section address future work conclusions running example introduction state charts section describes principle state chart models use describe operational model well appreciative model also introduces example use illustrate concepts propose include process modeling example phd recruitment process work use example phd recruitment process university process involves three actors faculty member fm – professor leading research group recruiting doctoral student team graduate student gs searching phd position doctoral school ds preselects phd candidates manages graduation process simplified view phd recruitment processes experienced authors article omits actors e g hr department dean university might also involved order recruited doctoral student university gs  accepted ds  approved prospective thesis supervisor fm gs start process either sending application ds directly contacting fm whose team aims join first case accepted gs needs apply positions different fms second case approved gs needs apply ds evaluation ds receives evaluates gs applications examining academic background track records ds accepts gs candidate candidate needs search thesis supervisor sending applications various fms supervisor found within predefined time frame gs recruited process stops fm evaluates gs applications mainly focusing candidate motivation skills related specific research topic approve reject gs fm approves graduate student candidate latter must also accepted ds ds rejects graduate student candidate gs recruited process stops double stage process designed order guarantee excellence graduate student candidates evaluate capacity integrate university doctoral school program specific research team also successfully finish training obtaining phd degree statecharts yakindu sct statecharts model phd recruitment process using statecharts defined harel compared workflow paradigm widely used process modeling specify process set states transitions states allows us omit specification concrete activities associated recruitment focus process goals milestones thus statecharts provide uniform modeling notation reason operational business process specified process participants cognitive process associated decision making participant statecharts formalism statecharts formalism specifies hierarchical state machine hsm extends classical finite state machine fsm providing  hierarchy depth – possibility model states multiple hierarchical levels notion abstraction refinement levels  orthogonality – possibility model concurrent independent submachines within one state machine  broadcast communication – possibility synchronize multiple concurrent submachines via events fsm states transitions central concepts statecharts state specifies state modeled system state behavior describes actions taken conditions transitions states triggered events transition takes place event e occurs – e called triggering event transition triggering events complemented guard conditions e c case say transition takes place e occurs c holds execution state machine state active passive due hierarchical structure several sub states embedded parent state multiple states statecharts activated given moment execution states called active configuration state machine compared fsm transition statechart transition seen change one active configuration another illustrate formalism notion model execution examples following sections yakindu use yakindu statechart tools yakindu sct modeling simulation analysis process yakindu modular toolkit developing simulating generating executable finite state machines fsm yakindu statecharts organized regions hence possible organize multiple state machines different regions run concurrently regions contain states transitions state turn contain one regions turning composite state contains one region orthogonal state contains two regions state define behavior form one several trigger guard effect statements statements provide declarative non prescriptive specification behavior execution order applied triggers events complemented guard condition guard effect executed trigger occurs guard condition holds effect include one several actions assigning value variable raising event calling function simulate statechart models simulation view yakindu stc framework allows us manually raise events inspect modify variables running simulation observe model behavior sequence active configurations triggered use simulation tool play discover different process scenarios advanced features model simulation available yakindu scope article operational model phd recruitment process phd recruitment process defined university provides details steps must taken starting point graduate student gs applies phd application done either sending application doctoral school university ds contacting professor fm phd recruitment process terminates recruitment rejection gs section model process phd recruitment described statecharts using yakindu stc explain model simulated yakindu call process model operational opposed social process model discussed next sections using statecharts process modeling model process collaboration three participants use statecharts describe role participant process statechart contains states transitions describing behavior corresponding participant illustrated figure graduate student figure doctoral school figure faculty member process model figure shows collaboration participants organized three independent regions process participants exhibit concurrent behavior communicate via messages statecharts diagram figure also statechart used part complex diagram creates hierarchy statecharts hierarchical statecharts successfully applied modeling complex real time systems thus consider also applicable real business processes figure statecharts model behavior graduate student gs within formal phd recruitment process defined university graduate student gs statechart figure describes behavior graduate student applies phd position statechart specified five states start recruitment default starting state applied ds applied fm rejected recruited states state transitions depicted arrows states triggered corresponding triggering conditions satisfied triggering conditions modeled condition guard effect statements condition specified boolean expression event raised statechart another process participant case guarded invariant effect describes happen along transition e g event raised operation executed optional triggering conditions shown next corresponding transitions arrows model instance transition  applied ds rejected gs figure triggered ds reject event raised guard specified model events prefix indicating statechart raising event ds corresponds ds statechart represented figure  transition applied ds applied fm gs figure refers case graduate student accepted ds apply faculty member fm statement transition ds accept active fm start recruitment raise gs applyfm reads follows ds accepts graduate student candidate ds accept event received graduate student candidate yet reviewed fm fm statechart starting state active fm start recruitment graduate student applies fm event gs applyfm raised event triggers transition fm state chart figure  transition applied fm applied ds gs figure refers opposite case – graduate student gets approved fm e fm approved received yet applied ds doctoral school ds statechart figure describes behavior doctoral school statechart specified five states start recruitment default starting state candidate review accepted rejected recruitment  transition candidate review accepted figure refers case ds accepts graduate student candidate yet approved faculty member thus ds waits decision terminate process statement transition ds accept active fm approved expresses behavior figure statechart model behavior doctoral school ds within formal phd recruitment process defined university  transition accepted recruitment figure refers case graduate student accepted ds state accepted ds eventually receives approval fm point view doctoral school recruitment conditions fulfilled procedures finalized gs notified recruitment statement transition fm approve raise notify gsrecruited expresses behavior figure statechart model behavior faculty member fm within operational phd recruitment process defined university faculty member fm statechart figure describes behavior faculty member statechart specified five states start recruitment default starting state candidate preselection approved rejected recruitment transition logic similar one described ds interaction process participants ds fm gs statecharts running concurrently statechart represents actor reacts events raised actors statecharts model figure present list events defined operational phd recruitment process internal operational process events user events manuall event gs applyds event gs applyfm event fm approve event fm reject event ds accept event ds reject simulated events event notify gsrecruited figure events defined operational phd recruitment process events except last one specified prefix ds fm gs identifies sender event last event notify gsrecruited raised either ds fm conditions recruitment fulfilled events represent observed results activities process simulation events specified model broadcasted every statechart model receives sees occur however modeler choice specify events ignored events statechart react modeler specify behavior triggered upon receiving event entering exiting resting state b transition states triggered model corresponding behavior statements triggering conditions shown state transitions see examples inside states explained next section operational model simulation model simulation yakindu allows visualizing different process scenarios simulation simulation window shows current active state statechart last triggered transitions highlighted color figure called current active configuration statechart simulation window also provides list events figure b raised simulation simple simulation mode user clicks events one time simulating occurrence statechart reacts changing active configuration discussed section events raised statecharts part behavior expression specified raise keyword simulation terminates final state final configuration reached complex simulation done yakindu different scenarios preconfigured played automatically driven program backend example user simulates event occurrence decide upon order note events effect current active configuration least one behavior statement describing reaction event specified configuration conversely behavior describes reaction event specified – event ignored statechart instance consider current active configuration shown figure user clicks notify gsrecruited event list – occurrence effect active configuration change clicking ds reject however immediately trigger transitions ds gs statecharts active configuration change example user plays roles different process participants thus respect logic order events raised participants thus model simulation starts user plays role graduate student gs applying either ds fm next simulate corresponding decision ds fm figure illustrates configuration statechart user raises gs applyds event simulation window clicking gs applyds gs statechart passes start recruitment applied ds state ds passes start recruitment candidate review fm remains start recruitment state configuration next step simulate decision made ds application raising ds accept ds reject events e user needs choose click corresponding event list illustrated figure b user plays role doctoral school ds process occurrence major events model simulated user events  automatically raised transition accepted recruitment ds statechart figure specified expression fm approve raise notify gsrecruited fm approve event need raised user clicking simulation window notify gsrecruited event raised automatically part behavior expression specified transition example scenarios play model gs applyds – ds accept – fm approve – notify gsrecruited – graduate student candidate applies doctoral school gets accepted applies faculty member gets approved eventually recruited gs applyfm – fm approve – ds reject – graduate student candidate applies faculty member gets approved applies doctoral school gets rejected gs applyds – gs applyfm – fm approve – ds approve – notify gsrecruited – graduate student candidate applies doctoral school faculty member waiting accepted gets accepted gets approved eventually recruited variants scenarios possible b figure simulation operational model yakindu represents three concurrent state machines b shows events sent person running simulation e actual decisions taken three actors discussion process efficiency – implicit gap graduate student candidate recruited two conditions fulfilled fm approves candidate ds accepts candidate known practice ds evaluates academic background graduate student candidate fm evaluates gs applications mostly focusing candidate motivation skills related specific research topic double stages process designed ensure graduate student candidate excellence university level level research team assumption made academic excellence gs defined doctoral school necessary condition successful integration gs research team completion phd training nevertheless faculty members struggle hire phd student within process creates gap conflict organization gap implicit model concrete evaluation ds fm making respective decisions graduate student candidate excellence implicit model order understand gap eventually improve process propose examine appreciative systems proposed vickers fm ds appreciative systems formally represented one appreciative model per actor next section discuss theories homeostasis appreciative system model appreciative systems ds fm statecharts creating social model phd recruitment process compared operational model discussed social model focused cognitive aspect recruitment shows process perceived fm ds decisions regarding graduate student candidate excellence made participants technical perspective social perspective business process appreciative systems homeostasis appreciative systems business process often associated achievement several well defined goals seen direct implementation cybernetics defined rosenblueth wiener bigelow rosenblueth collaborator cannon 1920s coined term homeostasis order explain animal body maintains steady states basis survival cannon explained living organisms somehow found way maintain steady states even though made unstable internal elements live unstable external environment maintenance less stable internal states maintain living identity therefore survival cannon work explained goal achieved maintenance steady states rosenblueth wiener bigelow simplified cannon work defined teleological purposeful behavior achieving well defined final state use negative feedback mechanism whereas early work cybernetics involved study man made systems quickly applied socio technical systems business process management one example goals achieved business processes modern day descendants early teleological work writing social perspective vickers took work created cybernetics expanded maintenance mind time writing maintenance relationships instead states maintenance relationship fact maintenance relationship given state vickers wrote attaining maintaining eluding relationships maintaining eluding relationship seen keeping specific state either close distant vickers work relationships maintained respect norms states remain less time like homeostasis maintenance quasi stable states vickers norm holding different termed goal seeking goal seeking known today goal achievement requirements engineering achievement goals met determine well defined end point example accept reject phd candidate two end states phd recruitment process norm holding defines going activity matching current state affairs relevant desired state accepting rejecting phd candidates steps overall going activities ds fm structures must kept alive regulating mutual relationships requirements engineering concept maintenance goal suggested represent going activity concept maintenance goals defined earlier desired state described set steady states called norms norm associated threshold e g human body temperature maintained approximately 37°c associated threshold fraction degree action taken whenever actual state sensed outside threshold well known process regulation beginning end operates long subject survives responsible survival results homeostatic state unlike animal machine norms often pre defined either evolution design norms held organization result going process appreciation therefore generated maintained process govern considered immutable given designer vickers distinguished two segments regulation process first segment current state compared norm resulting information fed second segment action taken correct state outside threshold associated norm vickers notes second segment received much attention system engineering problem solving first segment policy making observes major difficulty first segment segment challenge define criteria capturing current state evaluating multiple potentially inconsistent norms attention first segment distinguishes norm holding goal seeking vickers conceived appreciative system model policy making norm holding give attention first segment vickers appreciative system composed distinct interrelated elements reality judgments rj value judgments vj action judgments aj reality judgements value judgments seen comprising first segment action judgments seen belonging second segment reality judgments correspond people perceive situation value judgments correspond selection norms relevant reality judgments actor compares reality judgments norms resulting realization situation acceptable vickers detailed stages value judgment component  attaching reality judgment existing category thereby defining relevant norm matching  evaluating reality judgment state affairs present future relations help norm weighing  creating new category future exercises appreciative system innovating action judgment prompted situation unacceptable order bring acceptable form action directed inwards order change inside system norms value judgments reality judgments outwards order change outside system environment change anything thus action judgments correspond choice relevant behavior activities within selected response strategy vickers describes overall functioning appreciative system process optimizing balancing optimizing geared toward vickers calls functional service relationships attempts keep relationships actor external entities relatively good state akin simon satisficing concept balancing tries prevent depletion resources vickers calls metabolic relationships maintenance requisite functional relationships dependent metabolic relationships vice versa thus appreciative system continually tries provide good service possible external stakeholders optimizing available obtainable resources balancing inputs outputs repeated exercise appreciative system leads vickers calls readiness components readiness see related rj readiness value related vj readiness act related aj given moment readiness defines specific state appreciative system vickers calls appreciative setting modeling appreciative systems section describe generic appreciative model shows concepts defined vickers e norm threshold reality judgment value judgment action judgment modeled statecharts generic actor next section use generic model define appreciative systems faculty members doctoral school actors phd recruitment process appreciation model illustrated figure consists one composed state called setting setting represents appreciative setting actor associated one norm set norms n actor seeks maintain e keep unchanged norm n associated tolerance threshold threshold crossed system homeostatic state respond regain acting environment appreciative setting represent reality judgments rj value judgments vj action judgments aj sub states setting state regulation process captured states transitions states define behavior triggered upon entering exiting remaining state list trigger guard effect statements figure depicts list variables events captured raised appreciative model events variables used trigger guard effect expressions behavior specification step actor reality judgment rj default starting state regulative process rj state actor captures events e figure raised environment e another actor transforms reality judgments show details transformation reality judgments used vj state situation assessment transition tovj vj state triggered step actor value judgment vj state actor evaluates situation selecting relevant norms compare reality judgments r1 r2 concluding corresponding thresholds crossed thus ri take value ok nok still figure model value judgments events r1isok r1isnok r2isok r2isnok simulating value judgment yakindu r1isok raised r1 considered within threshold r1isnok raised otherwise current model value judgments must raised user simulator view potentially automated yakindu value judgment automatically triggers transition aj state toaj event raised automatically see figure order make one value judgment user need raise addvj event aj state figure generic appreciative model optimizing balancing internal event tovj automatic raised rj created event toaj automatic raised vj made event addvj raised used make new vj event decision raised user decision making finished response types automatic based optimizing balancing event nochange event actseize event actavoid event changevj value judgments manual raised user event r1isok event r1isnok optimizing balancing var op integer var th integer observations inputs –user events manual event e actions affecting reality outputs – simulated events event action1 event action2 event action3 event action4 figure events variables used appreciation statechart define optimizing balancing function f r1 transforms combination value judgments riok rjnok pair op th op indicates much actor perceives overall situation opportunity something wish seize take th indicates much actor perceives situation threat something wish avoid perception situation whole defines type response actor eventually produces figure illustrate optimizing balancing value judgment made use table optimizing balancing indicates much value judgment opportunity much threat summing obtained scores value judgments made situation obtain op th respectively call optimizing balancing factors figure optimizing balancing distinguish several response types based total op th scores op ≠ th – response directed outwards order change system environment producing impact captured external actors particular op th – actor act seize sees opportunity op th – actor act avoid sees threat op th – observed situation represent neither threat opportunity response neutral change anything op th ≠ – situation unclear actor response directed inwards order change appreciative setting e norms value judgments reality judgments optimizing balancing factors example change optimizing balancing factors r1ok obtain op th situation result op th– act seize response type appreciative model figure optimizing balancing shown vj state r1isok op op raise toaj r1isnok th th raise toaj r2isok raise toaj r2isnok th th raise toaj raise toaj stands transition aj state reflect real cognitive process evaluation assume number value judgments considered simulation addvj events raised many times order mimic human process appreciation one individual may undertake thorough reflection vjajvj cycle various assessments concurrently increasing decreasing op th moment satisfied assessment conversely individual make hasty conclusion making judgment based one parameter passing action vjaj step actor action judgment action judgments correspond choice relevant behavior concrete actions corresponding selected response type statechart figure model following statements decide op th op op th raise changevj decide op th raise action1 raise action2 op th raise actseize decide op th raise action3 raise action4 op th raise actavoid decide op th op raise nochange simulation aj state user raises event decide stands executing response use op th variables guard expression select right response matches guard changevj response brings statechart back vj state resets op th values – simulate change value judgments current model illustrate type inward changes changes appreciative settings simulation since settings changed fly require modification statechart actseize actavoid responses correspond outward response actions e g action1 action2 executed th op reset actions define exactly actor interact environment e actors order seize opportunity avoid threat respectively simulates change environment results change rj limitations model make closed loop reality action made environment sampled rj appreciation statechart set initial rj state next cycle regulative process nochange response resets appreciation statechart bringing initial rj state without change environment appreciative settings extending operational model model appreciative systems phd recruitment process extend model operational phd recruitment process presented section appreciative models faculty member fm doctoral school ds examine reasons issue observed operational process – fact faculty members struggle order recruit phd student within process formalize regulative processes support decision making phd recruitment define two statecharts ds figure fm figure statecharts represent appreciative systems doctoral school ds faculty member fm respectively instantiate model explained previous section add statecharts initial model available figure two separate regions forms extended model illustrated figure present list events defined ds fm appreciative system models figure events defined operational model figure remain unchanged however distinguish events raised operational model used observations appreciative systems gs applyds gs applyfm applies responses raised appreciative models figure used decisions operational model ds accept ds reject fm approve fm reject appreciative models explain observations transformed responses norms thresholds ds fm begin identifying norms affect decision accept graduate student candidate ds decision approve graduate student candidate fm doctoral school ds norm formulated follows ds norm ensure strong background graduate student candidate research areas defined school define one aggregate variable v corresponds norm allows assessing graduate student candidate excellence example variable graduate student candidate gpa grade point average score specific modules science mathematics etc norm expressed gpa assume threshold associated norm meaning special cases graduate student candidate minimum admitted well threshold expressed follows gpa faculty member fm norm ensure team cohesion rather abstract norm lead two concrete norms fm norm motivated graduate student candidate fm norm graduate student candidate relevant skill set fm define two variables correspond norm graduate student candidate motivation particular subject defined fm skills developed relevant area thresholds expressed follows graduate student candidate expresses interest subject e g motivation letter interview graduate student candidate least years experience working area next sections explain transformation observations responses detail ds fm statechart model ds appreciative system statechart model ds appreciative system shown figure step ds reality judgment rj state define event observation triggers regulating process ds gs applyds event raised operational model figure corresponds gs application doctoral school event captured rj e graduate student candidate application received relative reality judgments created analogy ri section case ds corresponds graduate student candidate gpa e g based track academic records – figure ds appreciation statechart ds step ds value judgment model two events correspond positive negative evaluation graduate student candidate respect threshold specified isgpaok raised graduate student candidate gpa within threshold isgpanok raised threshold crossed optimizing balancing order understand value judgments transformed response important refer context phd recruitment process model process based assumption ds searching graduate student candidates terms exists norm related desired number phd students defined ds regarding norm threshold ex phd x shown model embedded context – reason university runs phd recruitment process ds participates process first place figure illustrates evaluation graduate student candidate application e gpa leads decision ds e optimizing balancing figure optimizing balancing appreciation statechart ds graduate student candidates gpa higher considered opportunity doctoral school maintain norm regarding desired number phd students whereas graduate student candidates gpa represent threat recruited might fail complete phd program statechart figure optimizing balancing specified corresponding statements ds isgpaok ds op ds op raise ds toaj ds isgpanok ds th ds th raise ds toaj step ds action judgment aj define responses triggered based optimizing balancing ds decision ds op ds th raise ds accept ds op ds th raise ds actseize ds decision ds op ds th raise ds reject ds op ds th raise ds actavoid case opportunity graduate student candidate accepted raise ds accept case threat graduate student candidate rejected raise ds reject response types e nochange changevj defined model since optimizing balancing simple based one value judgment statechart model fm appreciative system appreciative system fm presented figure step fm reality judgment rj state define event observation triggers regulating process fm gs applyfm event raised operational model figure figure corresponds gs application sent directly faculty member event captured rj relative reality judgments created analogy ri section case fm corresponds graduate student candidate motivation based motivation letter skill based cv step fm value judgment model four events correspond evaluation results variables ismotivok raised graduate student candidate express interest subject motivation letter see section ismotivnok opposite case idem isskillok raised graduate student candidate cv shows years experience relevant area isskillnok raised otherwise figure fm – appreciation statechart fm optimizing balancing important refer context phd recruitment process make assumption faculty member fm interested recruit phd student team thus exists norm related desired number phd students team defined fm regarding norm threshold ex phdteam shown model embedded context reason fm participating phd recruitment process first place figure illustrates evaluation graduate student candidate application e skill motivation leads response fm e optimizing balancing figure optimizing – balancing appreciation statechart fm model fm gives clear priority graduate student candidate skills isskillok contributes opportunity isskillnok contributes threat motivation contrast necessary sufficient condition graduate student candidate approved good motivation alone represent neither threat opportunity fm represented b factor ismotivok b factor ismotivnok statechart figure optimizing balancing specified corresponding statements fm ismotivok raise fm toaj fm ismotivnok fm th fm th raise fm toaj fm isskillok fm op fm op raise fm toaj fm isskillnok fm th fm th raise fm toaj actor may choose evaluate two variables one prior define response example fm receives application evaluates motivation first motivation convincing ismotivnok – optimizing balancing terminate op th response avoid threat however fm proceeds evaluation skills e adds another value judgment finds satisfactory isskillok – optimizing balancing result op th response seize opportunity optimizing balancing factors affect way decisions made details subject however scope article step fm action judgment aj define responses triggered based optimizing balancing fm decision fm op fm th fm op fm op fm th raise fm changevj fm decision fm op fm th raise fm approve fm op fm th raise fm actseize fm decision fm op fm th raise fm reject fm op fm th raise fm actavoid fm decision fm op fm th fm op raise fm nochange case opportunity graduate student candidate approved fm raise fm approve case threat graduate student candidate rejected raise fm reject example shows decision depends valuation process find important highlight complexity valuation process subjectiveness since related social nature appreciation whole study process future work appreciative operational models working together figure illustrates three actors operational model appreciative model phd recruitment process operational model considered technical perspective appreciative model social perspective appreciative models illustrate decisions regarding accepting approving rejecting graduate student candidates taken related social norm held corresponding process actors extending operational model appreciative model allows one separate decision making process decision results observed process reason process efficiency isgpaok isgpanok gs applyfm gs applyds operational appreciative ismotivok ds accept ds reject ismotivnok isskillok fm approve fm reject isskillnok figure extended model phd recruitment process interactions operational model appreciative model illustrated bold colored arrows showing corresponding events model simulation simulating extended model yakindu allows visualizing process scenarios operational process model events need raised user using simulation interface automatically raised statechart ds fm statecharts representing social perspective figure capture two events raised operational process gs applyfm gs applyds events trigger regulative processes fm ds respectively explained sections regulative process ds fm make value judgments isgpaok nok isskillok nok ismotivok nok respectively operational perspective ds fm gs statecharts capture four events raised ds fm response ds accept ds reject fm approve fm reject events affect formal process way models figure figure figure figure – illustrates configuration statechart corresponds configuration figure – user triggers gs applyds event simulation window configurations ds fm gs statecharts correspond operating model phd recruitment process change fm statechart bottom right starting state rj ds statechart top right vj state gs applyds triggered value judgment configuration next step simulate appreciative system ds ds user needs evaluate graduate student candidate application raise iscandok iscandnok event ds interface simulator window figure b interface ds event tovj automatic raised rj created event toaj automatic raised vj made event addvj raised user make new vj event decision raised user decision making finished response types automatic based optimizing balancing event nochange event actseize event actavoid event changevj value judgments manual raised user event isgpaok event isgpanok optimizing balancing var op integer var th integer interface fm event tovj automatic raised rj created event toaj automatic raised vj made event addvj raised user make new vj event decision raised user decision making finished response types automatic based optimizing balancing event nochange event actseize event actavoid event changevj value judgments manual raised user event ismotivok event ismotivnok event isskillok event isskillnok optimizing balancing set automatically var op integer var th integer internal process events interaction operational social process perspectives event gs applyds operational gs social ds raised user event gs applyfm operational gs social fm raised user event fm approve social fm operational raised automatically event fm reject social fm operational raised automatically event ds accept social ds operational raised automatically event ds reject social ds operational raised automatically event notify gsrecruited raised automatically events represent actual figure list events extended process model judgmen ts made mind actor simulation corresponding events triggered manually decision accepting rejecting graduate student candidate selected automatically simulator list statements defined aj state ds ds statechart aj state user raise decision event ds interface simulator window decision executed automatically based optimizing balancing result explained previous section thus ds accept ds reject events raised automatically statecharts representing operational process react upon accordingly first case gs applyfm raised evaluation graduate student candidate fm simulated second case graduate student candidate rejected process stop ds interface b appreciative operational interaction figure simulation extended process model yakindu phd recruitment efficiency discussion – explaining gap vj states appreciative systems fm ds show overall decision depends evaluation three variables graduate student candidate background ds motivation skills fm phd recruitment process efficiency related capacity provide equal opportunities university professors recruit doctoral students thus technically fm chances recruit phd student within process considering extended model see possible variables measured vj states ds fm independent fact professors recruit phd students process explained existing implicit dependencies variables illustrate dependencies following examples example student strong technical background often finds subjects offered fm soft model would observe follows evaluation isgpaok made ds vj state ds often correlate simulation evaluation ismotivnok made fm vj state fm resulting th given graduate student candidate unless skills candidate good – approved fm thus fm rarely approve graduate student candidates accepted ds example students strong technical background time insufficient skills subject defined fm e subject requires skills social management sciences model would observe follows evaluation isgpaok made ds vj state ds often correlate evaluation isskillnok made fm vj state th given graduate student candidate thus fm rarely approve graduate student candidates accepted ds example student strong motivation skills subject often insufficient technical background defined ds model would observe follows evaluation isskillok ismotivok made fm vj state fm often correlate evaluation isgpanok made ds vj state ds given graduate student candidate thus graduate student candidates approved fm often rejected ds examples describe specific situations nevertheless common professors working transversal subjects show norms process participants hold fit participants ds norm ensure strong background graduate student candidate research areas defined school fm norm ensure team cohesion recruiting motivated graduate student candidates relevant skill set ensuring strong background may run contrary cohesion fm team possibly increasing background graduate students observe balancing act interest individual e faculty member group e doctoral school essence social systems creating preserving social groups social norms discussion formalization social systems article present model social perspective technical perspective business process one challenge social perspective humans living beings adapt intuitions challenging formalize probably – luckily – yet impossible model presented article used simulate predefined scenarios model appreciative settings change rely environment stable thoughts limitations approach follows reality judgments discuss actor perceives environment reality judgment uses intuition imagines disrupting environment value judgment action judgment scope current work key model sophisticated ways adapt value judgments model regulative process actor need change appreciative setting either reality judgment value judgment optimizing balancing factors simulation demonstrate actor decide add new value judgment change existing one change mind however current model explain appreciative setting changed current version changing optimizing balancing factors reality judgments requires model redesign done run time action judgments social group numerous relationships appreciative systems underlying norms similar way choice response action judgment may require interaction one operational process another appreciative system model choice different operational processes chosen constructed following response strategy response strategy e g act seize act avoid based actor understanding anticipation environment however show actor gaining knowledge formalizing social behavior model shown mechanistic simplification much sophisticated way social groups behave still allows rationalizing behavior instead ignoring social psychological aspects statecharts yakindu state transition paradigm reason technical social perspectives business process paradigm well known modeling systems behavior whereas process models commonly follow activity oriented paradigm representing process predetermined sequence activities within state oriented paradigm process scenario specified sequence events concrete activities produce events remain implicit examples state oriented modeling formalisms include state machines uml generic state transition systems state machines fsm petri nets statecharts harel created specification analysis complex discrete event systems harel statechart yakindu statecharts modeling tool proposed modeling scenarios decision making support knowledge intensive weakly structured processes conclusion article show extend business process modeling using appreciative systems define operational model statechart equivalent bpmn model coupled appreciative model statechart equivalent mindset participants using appreciative system context bpmn triple interest process engineers take account process context social system formed process participants personal professional contexts gives opportunity discover complex scenarios anticipate sources actions undesirable processes catastrophic consequences safety critical processes activities associated risk taking benefit socio technical approach process modeling analysis process participants appreciative model provides opportunity think people perceive reality judgment values value judgment response strategy action judgment identifying elements process participants better cope stress encountered activities process managers understanding least aware appreciative systems process participants help process managers anticipate understand source conflicting situations process manager better equipped propose conflict resolution strategy specifically shown social perspective explain problems related operational processes organizations potentially help anticipate issues due conflicts norms resolve observed problems showing elements take considerations redesigning operational processes work placed mid way social sciences engineering social sciences problems cognition decision making social interactions individual addressed much elaborated manner attempt article engineering contrast tends address issues much pragmatic sometimes oversimplified manner goal find appropriate level complexity bring values social sciences engineering article illustrates actors maintain stability appreciative setting evolve e g new judgments goal appreciative model mostly pedagogical nevertheless assume brings value process engineers process participants managers making aware mechanisms stake",
  "2020-KRNRW": "introduction research information systems engineering resulted many meth ods ontologies theories models languages much effort ex pended trying reconcile trend somewhat try reach sin gle true correct ultimate view socio technical system inescapably though every attempt reconciliation creates yet another artifact e g method ontol ogy language engineering researchers schooled mostly predom inant positivist tradition method ontology must represent reality closely possible similar way law gravity true repre sentation reality earth way value must defined closely possible match observations regardless observers culture context objective observation reality applies poorly socio technical organizations research conducted field objective reality shared among researchers quest common ontology futile engineers perceive complexity phenomenon broken smaller pieces weaved back together jackson points divided conquer must reunite rule engineering tradition made way research example design viewpoints hierarchies ontologies domain upper core foundational ontologies model driven system design uml instance business alignment help enterprise architecture methods efforts point direction analyze system many points view synthesize single one represents single true comprehensive view system consideration researchers trace tendencies days models computer systems ultimately represented machine code single source truth challenge assumption context engineering socio technical systems necessary even possible reach single representa tional format methodology unite perspectives agreeing disagree seems better path basic assumption interpretivists ontologies methods theories valid useful given context product point view individual group people interpretivist perspective impossible introduce point view invalidate disprove generalize replace subjugate oth ers yet another point view less value except individual interpretation context originates instead describing map merge reconcile sin gle point view analyze efforts interpretivist research paradigm show different perspective method designers method users define reconciliation agreement shared understanding might exist momentarily disappears people world views uniquely shaped experiences begin diverge agree ment achieved likely dissolve time goes unless maintained like system subject external internal change maintenance important organizations e socio technical systems lack agreement lead chaos eventual demise organization single entity maintaining identity therefore organizations strive pre vent major disagreements happening repeated frequent exercises reconciliation explicit implicit propose set heuristics inspired experience reconciling modeling design methodologies created research group methods heuristics based systems thinking principles independent methods main take away reconcile different points view useful go beyond immediate ontology stand differences epistemology axiology ontology thus forming trilogy together forms world view structure paper following section review existing literature understand better reconciliation domain present set heuristics section illustrate use heuristics section example section discuss findings section reflect limitations research findings conclude section problem statement inquire different fields study propose points view conceptualized hence modeled conceptually within process analysis design term point view refers different concepts e g ontology methodology framework model language different fields use term point view avoid terminology confusion due overloading constructs already use literature result reconcile point view others introducing yet one point view first look early work ontology field artificial intelligence knowledge representation sharing defines ontology specification conceptualization later guarino giaretta clarified definition ontology also synonym conceptualiza tion attempts reconcile ontologies however assume former definition gruber implicit assumption one possible conceptualization single conceptualization assumption leads goal explicitly reaching single specification ontology two main approaches reconciliation refinement abstrac tion alignment sometimes called matching help refine ment abstraction models different levels detail de composed less detailed ones help formally defined semantics refinement used multiple studies one main principles computer science example going high level specifications mally verifiable specifications value models business process models user stories backlog items refinement relationship seman tic one rarely fully automated alignment used example ontology mapping web services semantic web data representations alignment deals semantic heterogeneity semantically related entities ontologies recently extended towards term semantic interop erability illustrative example reconciliation ontology based research without called reconciliation take work nardi et al propose ontological solution service domain ontology propose ufo reference ontology services ufo based unified foundational ontology ufo 20–22 ufo three modules ufo covers endurants objects ufo b covers events perdurants ufo c covers social entities ufo built multiple parts different phases service life cycle service offer service negotiation service delivery ufo reference ontology general foundational ontology specific domain ontology hence even using ufo means domain application interpretation context modeler would introduce another conceptualization particular case ontological work example phenomenon reconcilia tion methodologies theories ontologies conceptualizations different abstraction levels exists zachman later sowa zachman proposed overarching framework essence matrix model describes archi tecture terms fundamental questions discipline dependent views zachman framework initially thought representing everything represent organization subsequent years saw development numerous enterprise methods frameworks e g togaf led jungle enterprise architecture frameworks creators later methods frameworks introduce points view intended con text valid useful zachman shows whatever framework supposed describe everything superseded others believe assumed problem research communities might trying solve lack single methodology implicit belief among researchers must exist single point view ultimate one put forward idea points view problem solved per se contrary shows established status quo rather mostly disparate schools thought different opinions valid valuable us able express nearly unlimited points view exist design seminal work nature scientific revolutions kuhn observed preface scientific status quo everyone domain agrees something shared understanding everyone define universe start beginning common ground building upon strongly believe method designers method users always strive reach agreement hence propose heuristics guiding inevitable reconciliation efforts continue occur academic industry domains engineering systems thinking heuristics reconciliation point departure heuristics interpretivism interpretivism philosophical paradigm regards meaning emergent property relationship observer reality use interpre tivist methods research domain usually used discussed juxtaposition positivism paradigm core belief objec tive observer independent reality relationship observer reality helps interpretivists avoid trap solipsism every observer reality connection observers shared reality observers helps create shared meaning social construction according weick socially constructed world conceptualizations hold map creates reality see ter ritory hence co constructing conceptualizations makes sense group people share similar experience conceptualization simply another point view ontology visible part observer worldview called systems philos ophy parts epistemology axiology epistemology roots knowledge held observer reality hidden part conceptualization axiology choices observer makes explicitly implicitly entities observe reality included ontology attempt reconcile ontologies ontological level like trying mix sugar tea room temperature merge well one needs heat tea first reconcile ontologies need stand epistemology axiology people define ontologies try understand similarities differences agree disagree usually called social construction heuristic reconciliation process accepting change reconcile points view change creators minds epistemological axiological levels believe one difficult endeavors change people minds deeply held beliefs possible usually takes time example according haldane four stages acceptance scientific theory worthless nonsense interesting perverse point view true quite unimportant always said heuristic enough change corollary previous heuristic change must come right amount little much little change nobody notice reconciliation taken place much change identity reconciled points view lost observers cases best course action take moderate approach change best take conser vative option absolute resistance change cases system best reach high entropy states disintegrates identity latter option neglected consideration practice happens frequently former two heuristic requisite variety requisite variety heuristic study ing responses system existing future threats weick shows effective action situation high ambiguity necessary maintain many different points view necessary order grasp variations ongoing flow events valid context necessary maintain requisite variety reconciliation means researchers need suspend willingness reduce vari ety points view seek reconcile made sure variety needed domain describe heuristic understanding philosophy ontology cre ator ontology visible part world view creator useful instantiate process social construction order explore creator epistemology axiology going philosophical foundations epistemology axiology enables us see source differences potentially reach consensus staying level ontology lacks se mantics prevents us understanding actually means agree disagree staying level epistemology lacks syntax concrete form act upon let us take example ask tomato fruit vegetable tomato sign related either depending classification use way understand classification use use epis temology representation connected contexts → home mom told tomatoes vegetable school teacher told us tomatoes fruit use axiology observer chose right good context context identified → dinner put tomatoes fruit salad test mark tomatoes fruit hence work ontology used broad sense signify multiple pomodoro1 ways represent given concepts tomato two ways naming round red plant epistemology enables us relate conceptualization contexts axiology enables us reason ethical choices e g good bad beautiful ugly well moral values definitions inline systemic paradigm proposed used work heuristic practicality practice reconciliation techniques alignment refinement trade offs understand apply whichever makes sense refinement alignment well recognized ways reconcile ontologies models achieve alignment troducing new entity fruit reconciled point view includes basic properties attributes two entities different models e g apple tomato common help general ization alignment give us one point view departs specific context points view resulting models con tradict cases share interpretation contexts cases models share interpretation contexts conflicts interpretations possible case conflicts generalizations sort resolve conflicts generic level interpretation specific levels conflicts remain example use algorithm use instance type fruit fruit salad yet tomato treated fruit home might 1we could interpret pomodoro pomo oro meaning golden apple thus tomato becomes golden apple look representation ontology methods anecdotally call heuristic golden tomato heuristic conflict generalization abstracted away context interpretation tomato fruit class fruit home heuristic duration agreement nothing lasts forever things last longer others need make sure know insti tutionalized cemented systems automation reconciliations persist longer others example agreement map id field database field personalid database could done white board could stable hours discussion continues could longer lasting reconciliation institutionalized scripting mapping fields cases reconcilia tion yet level automation different implementing system need able come long lasting agreements could codify specification code thus could express formal verifiable form built verification still ensure validation sys tem forget agreement final process continuous illustrative example develop specification information system typical project example would investigate settings system operate reach agreement various stakeholders opera tions system support views people situation initial steps requirements process usually subject analysis design methods apply motivation goals sociology psychology etc express specification views taken input requirements process end yields precise description functionality system format specification var ied varying degrees formalism informal semi formal uml diagrams semi structured specifications user stories formal e g design contract mally verifiable specifications conduct socio technical system analysis design practitioners use different methods tools use example conference submission information system scope example highlight certain specificities methods use illustrate use heuristics relating uml use case diagram ucd user stories choice two methods dictated widespread use hence fact readers likely familiar methods two models used many methodologies communicate different stakeholders hence versatile applicable many contexts also select two nature differences also emphasize variety mediums methods ucd pictorial user story text based uml ucd models functionalities system actors use functionalities use basic version ucd explore relate ucd user story user story semi structured way expressing system requirements originated practice agile methods user story usually follows following format user type reason user stories employ vocabulary action system users customers refined concrete technical specifications known backlog items figure depicts ucd includes three actors reviewers authors pc chairs three actors common ancestor actor user conference system three functionalities download paper assign papers reviewers upload paper actors use two functionalities user register login pc chairs reviewers share paper assignment functionality whereas authors use upload paper functionality construct user story aligned based ucd relate ontology elements create user story author upload paper conference system however without interpretation context first two discrepancies become apparent author related user mean user upload paper well possible show inheritance object user stories ucd mention author actor would like use functionality possible show intentions actors use cases meaningfully relate two use complementary need heuristic use episte mology axiology ontology methods place authors proposed ways map two models use alignment refinement heuristic annotated extended one two illustrate heuristic duration reconciliation proposed basic example short lived whereas rules coded computer aided tool could last longer works invalidate original models give one point view heuristic used deem appropriate context interpretation example dalpiaz sturm found user stories better fit deriving conceptual models use cases moreover continuous generation knowledge around ucds user stories process reconciliation continues occur heuristic illustrate heuristics also reflect meta level choice points view heuristic highlight heuristic requisite variety many points view many methods models download paper reviewer register assign papers reviewers user login pc chair upload paper author fig use case diagram conference management information system could used analysis example name uml various diagrams use case sequence class responsibility state diagrams use complement others used also said methods could selected reconcile uml ucd example value based method heuristic would like exemplify heuristic reconciliation process initial iterations work authors selected relate methods created research yet decided use better known methods design analysis order introduce less changes heuristic enough change focus mainly change heuristics could represent new point view reader could potentially find easier reconcile discussion heuristics heuristics describe tightly coupled experience reconciling methods research group created past years quests relate others connect different perspectives within methods however throughout literature search given understanding field engineering seen efforts connecting different points view repeated patterns reformulation problem reconciliation ongoing practice new idea put forward yet much academic work already mentioned different methods valid particular cases moreover true intepretivism believe also offering point view set heuristics simply set seen heuristics principles cf future avenue exploration consider different sets heuristics exist contexts domain reconcile reconciliation heuristics even though one set exhaustive constituent principles valid every context subscribe view expressed klein myers systematic consideration set principles likely improve quality future interpretive field research especially hermeneutic nature technology neither good bad neutral one method corresponding ontology epistemology axiology neither good bad neutral created context aca demic endeavor objective communicate share one experience others e researchers students pragmatic attempt create common ground group people experts various domains discussion analysis situation find agreement particular problem solution ontology reconciliation continue take place ques tion researchers cognizant introducing conceptual work reconciling point view points view others thus creating new point view interpreting philosophy context interpretation more2 points view valid yet bit method ology corresponding methods models theories artifacts may subjected fallacies necessarily valid useful within particular context defined used outside context ev erything possible validity usefulness theoretically anywhere within range absolute–limited–nil let us use boltzmann entropy analogy k · ln w w statistical weight k number possible state configurations within statistically described thermodynamic system apply analogy methodologies say within social system find set methods defines set conceptual configurations rely valid conceptual states within social system hence one set contributes statistical weight conceptually rich method define rich set states conceptually poor method define poor set states every state contributes sys tem statistical weight however contributions overall social system entropy might unequal contributions probabilistic applying analogy boltzmann entropy might say partic ular methodology point view regardless conceptually rich poor probabilistically frequent rare contributes statistical weight conceptualizations social system belongs contribution par ticular methodology social system entropy depends probability reaching states conceptualizations within interpretation contexts social system frequent states lesser contribution system entropy word context interpretation particular interpretation context defines corresponding particular state system conceptual con figuration methodology describes models system eval uated regard useful useless description particular conceptual configuration richer ontology higher language expressive ness larger probability useful ideal ontology would cover conceptual states system even high entropy states ontologies equally valid one point view superior inferior needs objective observer observers called super observer exist ontologies un limited set logically impossible define context degree validity usefulness hence reconciliation effort make overarching ontology within methodology yet another point view although tends reduce disorder conflicts variety inconsis tencies enabling actors express current beliefs regarding state observed system cancel improve rule rest ontology perceived independent context case ontology dependency context could potentially applied attempt describe context dependency animals equal animals equal others animal farm fairy story george orwell observer could try apply ontology order describe context interpretation context conceptualizable state perceived existing designed exist within system modeled someone ob server modeler group people etc multiple contexts exist given system interpretation contexts dependent observers modelers contain conceptualizable representations entities within sys tem representations attempted described one several ontologies different ontologies either less useful attempts describe representations within particular interpretation context potential success failure methodology within given interpretation context depend modeler applies rather concep tual richness poorness methodology regard representation needs required context seek represent state system data flow diagram might informative knowledge representation ai ml wave automation trend connect data generated independently different sources enable interoperability uniformization formats ease data sharing set heuristics could classified towards wave semantic interoperability efforts pause pose question aim interoperability uniformization data formats enabling analytics done data connect given shown irreversibly context generation data lost model model translation might lead unpredictable consequences advancement semantic interoperability enables data different sources cross referenced hence build representations individuals groups could seemingly labeled context rich even though context data generated decoupled information system implicit assumption better allow uses enable automation use ai ml powered systems use rich data sets humans perceived weak link system yet understand technologies labeled ai ml tread softly tread uncharted territory technology employed automation decision making optimizes predominantly profitability enterprises even succeed automating human process translating models methods context engineering next question handle mistakes automation would eventually lead according bainbridge human would take control failure would specialized highly trained even people whose tasks automated tread softly tread dreams aedh wishes cloths heaven william butler yeats limitations reusability findings positivist research aims create objective generalizable knowledge e g laws physics absolute reused independently context work propose set heuristics stem interpretivistic research paradigm words product interpretation experience reconciling methodologies design analysis reflect limitations interpretivistic research paradigm pose question validity findings general oxymoron argue whole idea research results general context independent taken caution results pre sented general researchers rely results implement context particular socio technical system absolved responsibility interpretivism contrast makes researchers view integrated part research findings thus responsibility researcher choose reuse part heuristics context therefore findings reusable absolutely objectively subjectively reusable generalizability reliability findings one could argue responsibility researcher hands reliability gen eralizability results produce would inevitably biased ac cording positivist research paradigm researcher independent research provide objective observations measures guarantee objectiveness results researcher reproducing experiment obtain results implies reliability according inter pretivistic methods researcher social actor part socio technical system study observations system studied emerges identity created although observations obvi ously biased argue socio technical system product biases actors threat rather part system identity hence explicitly taken consideration possible contradiction could found interpretivistic approach nature systems thinking interpretivism shies away generalizability whereas systems thinking inter discipline con nects disciplines general principles however general sys tems thinking principle vocabulary heuristic subject inter pretation contextualization hence see interplay generally applicable principles context application integral con structing systems thinking body knowledge applied throughout validity findings positivism created knowledge absolute validated invalidated analytically deduction ex periments use falsifiable hypothesis example laws physics absolute qualitative interpretivistic research validity knowledge demonstrated within given frame reference frame reference labeled transactional validity defines research interac tive process researcher researched collected data aimed achieving relatively higher level accuracy consensus means revisiting facts feelings experiences values beliefs collected interpreted frame reference changes knowledge invalidated positivist paradigm frame reference taken granted researchers something everyone agrees upon hence often omitted implicit creates illusion absolute objective validity interpretivism frame reference context socio technical system part research variable equation omitted claim everyone shares interpretivism leaves researcher choice explicitly mention frame reference identify com munity shares frame reference within frame reference community produced knowledge valid bottom line researchers findings could potentially valid absolutely valid within given frame reference grand scheme research pursuits studies natural precursors potentially better understanding field accumulation critical mass knowledge domain systems design studies used practice academic pursuit investigates new understudied phenomenon goes stages understanding chaos heuristics algorithms conclusion future work paper presented set heuristics reconciliation methodologies design analysis domain engineering presented current literature conceptual ontological work well enterprise architecture illustrate different domains already accommodate various methods models put forward idea reconciliation recurrent practice context scholarly industry works order find place knowledge generate heuristics build notions interpretivism entropy well known principles computer systems design abstraction refinement alignment explored futility reconciliation solely level ontology proposed way look differences philosophical level includes epistemology axiology ontology never one illustrated use heuristics help example modeled use case diagram user stories plan explore categorize epistemological principles help us understand differences points intersection better well extend reconciliation towards research artifacts future inquire reconciliation process heuristics level method users opposed level method designers whose perspective explored current paper",
  "2023-KRHS": "introduction supply chain one important economic systems enables production delivery goods services customers authors define supply chain network organizations involved upstream downstream linkages di↵erent processes activities produce value form products services delivered ultimate con sumer trust vital aspect far reaching consequences across various mains supply chains trust plays key role shaping relationships stakeholders timely identification elimination trust issues crucial suc cessful collaborations gambetta defines trust expectation another person institution perform actions beneficial least detri mental us regardless capacity monitor actions following definition trust issue defined lack trustor belief another party trustee one reason another actually meet expectations modern society interpersonal inter organizational relations ten mediated technology trust becomes multidimensional mayer defines e kiomba kambilo et al trust social entities individuals organizations mcknight speci fies trust humans technology artificial intelligence business intel ligence andrew discusses trust humans depending technology pietrzak et al addresses digital trust determinant interpersonal inter organizational relationships digital world result trust issues lated digital security privacy data process transparency performance gain lot attention today blockchain considered de facto technology address trust issues supply chain blockchain distributed ledger system supported network peers maintains copy ledger blockchain particularly attractive supply chains due hacker proof architecture cryptographic algorithms aspects consensus algorithms allow verify validate transactions network context scm means parties involved supply chain trust data recorded blockchain accurate agreed upon network additionally blockchain control access information smart contracts defining specific conditions must met order information accessed self executing contracts tamper resistant traceable monitor activity participant based hash signatures transaction implementing blockchain based solutions scm organizations aim address trust issues however success endeavor contingent architectural model implementation blockchain technology software patterns provide blueprint software engineers follow solve specific problem structured e\u0000cient manner bushman defines software patterns function form relationship occurs context function described terms unresolved trade o↵s forces problem domain form structure described solution domain achieves good acceptable equilibrium among forces software patterns focus capturing systematizing successful experiences techniques used software development blockchain software patterns discussed literature best knowledge lack research exploring blockchain software patterns focusing trust paper investigate trust issues expressed supply chain domain problem domain e\u0000ciently addressed blockchain technology solution domain using specific blockchain software patterns work develop following contributions construct taxon omy trust issues supply chain management scm based analysis research publications domain following guidelines requirements engineering propose technique translating trust issues trust require ments define mapping formulated trust requirements blockchain software patterns mapping guide decision making design trustworthy solutions scm paper structured follows section provide background blockchain technology software patterns supply chain discusses concept trust section define taxonomy trust issues scm based related literature translate issues trust requirements section title suppressed due excessive length discuss trust requirements previous section met specific blockchain software patterns illustrate findings example section example also serves preliminary validation findings section present conclusions background trust social sciences trust defined willingness one party trustor vulnerable actions another party trustee based expectation party perform expected action social trust reflects subjec tive trustor beliefs trustee suitable tributes performing expected specific situation attributes include ability benevolence integrity zheng stated social trust product experiences perceived trustworthiness advances technology artificial intelligence ai robotics led need organizations establish processes regulate trust technol ogy trust technology defined trustor confidence technology trustee accomplish task hand authors present three essen tial elements help build trust technology reliability functionality helpfulness digital trust emerges interpersonal inter organizational relations technology plays role mediator je↵rey defines digital trust confidence users ability people technology processes cre world ate secure digital trust technology precursor digital trust people must trust technology using blockchain supply chain management supply chain management scm aims ensure goods services de livered consumers promptly cost e↵ectively e\u0000ciently scm trust plays important role tradelens one example blockchain scm provides transparency e\u0000ciency accountability global trade digitizing streamlining flow information documents among supply chain par ticipants another example practical applications traceability provided blockchain solution blockchain decentralized distributed ledger technology widely recognized critical enabler secure transparent immutable tracking transac tions blockchain several intrinsic features make relevant supply chain management create decentralized tamper proof ledger transactions occur throughout supply chain ledger could track movement goods origin final destination providing complete transparency traceability also help increase supply chain data integrity enabling monitoring auditing transactions smart contracts https www techtarget com whatis definition digital trust e kiomba kambilo et al used automate specific processes within supply chain improve e\u0000 ciency reduce risk human errors finally blockchain used real time identification goods particularly perishable goods limited shelf life software patterns pattern based design widely adopted software engineering community since mid 1990s resulting software patterns describe recurring designs used software development software pattern considered function form relation occurs context function described problem domain terms group unresolved trade o↵s forces form structure described solution domain terms achieve good acceptable equilibrium among forces according software patterns play vital role addressing trust issues blockchain software pattern repeatable design solution recurring problem blockchain development scm blockchain software patterns provide systematic way tackling trust related concerns ensuring data authen ticity integrity promoting transparency accountability maintaining privacy security system authors identify set unique patterns classified design patterns architectural patterns idioms blockchain software patterns come range fields including agri culture industries address number generic issues work review software patterns identify twelve patterns used address specific trust issues scm trust issues trust requirements scm trust issue refers challenge problem disagreement a↵ects level trust individuals parties grounded explicit evidence frauds contract violations bad user experience implicit beliefs subjective hard grasp order explicitly analyzed addressed software solutions trust issues need translated requirements requirement statement translates expresses need associated constraints conditions section define taxonomy trust issues based analysis related literature translate issues trust requirements taxonomy trust issues scm work presents methodology building taxonomy discusses problems associated taxonomy development establish taxonomy define following research protocol title suppressed due excessive length identification conducted search primary research publications two major databases scopus google scholar used following key words supply chain trust issues requirements papers scopus google scholar selection selected articles literature met following criteria c1 evoke issues related social digital trust trust technology c2 propose solution addresses trust issues aims improve trust scm identified non systematically research studies published filter date ensure research consistent avoid irrelevant outdated papers screening abstracts full texts extraction extracted two types text evidences evidence evoking explicitly implicitly trust issues b evidence proposed technological solutions indicating technological architectural design choices synthesis extracted data revised discussed several researchers authors paper reduce interpretation bias eventually extracted trust issues grouped categories form taxonomy fig applied protocol identify formulate trust issues selected sources example authors highlight di\u0000culties faced supply chain management verifying authenticity goods conducting investigations illegal activities three main issues identified insu\u0000cient auditing opacity lack transparency lack oversight another study francasino sheds light problem single point failure traditional databases compromise privacy tamper proofing identify issues storage privacy etc figure groups trust issues extracted literature seven categories traceability focuses challenge tracking monitoring products real time along supply chain cost control addresses stakeholders concern reducing costs associated blockchain transactions cost limit cost reduction essential minimize cost transactions ensure practicality lack auditability highlights di\u0000culties auditing blockchain transactions stakeholders need able audit time se curity emphasizes importance keeping data transactions confidential secure tamper proof data governance concerns users control data shared institutions need anticipate scalability avoid addi tional fees lack accountability highlights responsibility stakeholders accountable actions essential everyone take responsibility decisions actions final category acceptance concerns user acceptance translating trust issues trust requirements trust issues subjective sometimes stem stakeholders intentions defining requirements starts understanding stakeholders intentions needs e kiomba kambilo et al fig taxonomy trust issues goals objectives outlined iso requirements engineering require ment defined statement identifies operational functional design features constraint product process unambiguous testable measurable necessary product process accepted consumers internal quality assurance guidelines set explicit clearly stated require ments facilitates communication stakeholders justifies technological design decisions provides basis solution validation expressed natural language statement requirements include subject e g system software etc active verb elements necessary specify information content requirement guidelines writing requirements specified iso iec standard transforming trust issues trust requirements involves thoroughly analyzing needs expectations stakeholders examining current systems practices subjective needs stakeholders transformed objective needs objectives requirements engineering mediator acquirer supplier domains establishing maintaining requirements desired system software service covers discovery elicitation development analysis determination verification methods validation communication documentation management requirements crucial part software development title suppressed due excessive length process involves stakeholder collaboration guarantee end product fulfills stakeholders needs adheres project constraints paper adapt process follow iso iec standard transforming trust issues trust requirements process consists following steps elicitation user trust issues step evidences trust issues gathered various techniques defined fields requirements en gineering knowledge management used collect empirical data including interviews case studies workshops action research etc outcome collection trust issues expressed end users stakeholders work data trust issues collected literature review instance evidence lack accountability i1 expressed follows important listen interactions responsibility suppliers oem maintain transparency di↵erent vendors issue expressed follows use account ability incentive structures punish encourage dishonest trustworthy individuals strategy increase trust confidence data analysis purpose step analyze expressed trust issue order identify subject trust actor system process technological com ponent object trust e g data activity function etc expected relationship must established former latter order mitigate issue example lack accountability i1 issue addresses business partner supply chain subject transaction data object issue expresses trustor belief case dispute partner avoid responsibility actions unless formal proof actions provided mitigate issue transaction non reputable lationship field analysis conducted iteratively confirming validating results users specification requirements step requirements documented based analysis previous step following recommendations outcome step formalized requirement specification ex ample lack accountability i1 issue formalize corresponding trust requirement follows system must guarantee non repudiation data taxonomy trust issues corresponding trust requirements defined following process presented table taxonomy provides decision making support requirements engineers designers guides design prospective trustworthy scm solution proposed process translating issues requirements potentially support designers identifying new issues requirements e kiomba kambilo et al table taxonomy mapping trust issues trust requirements eman noitacfiitnedi ecnatpecca ytilibareporetni ytilaitnedfinoc ytilibisnopser ytilibatnuocca foorp repmat dezilartneced ycnerapsnart tnemeriuqer lortnoc ytilibaecart gnirotinom ecnedfinoc ytilibalacs ytilibailer atad ytirgetni ytiruces ycavirp egarots tidua ekaf tsoc resu r tnerapsnart noitacinummoc stnemeriuqer sredlohekats sessecorp ytilaitnedfinoc dna ro atad lanretxe atad seludom gnitidua noitcafsitas reep ot reep atad lla tsurt elbadaer noitcasnart fo rotinom fo foorp repmat ytilibaliava ytirgetni fo fo noitazilitu atad noitaiduper ecnedfinoc egarots ot rehto etatilicaf noisurtni sssecirosecorp ni emit ycavirp seussi ot nigiro resu fo htiw atad hcae tresni atad ytilibissop gnikcart rof laer hgih desilartneced ot yb tsurt erahs atad atad atad atad troppus fo non deetnaraug deetnaraug ot selfi hcum noitacfiiceps ecart elbailer atad elbixefl eetnaraug eetnaraug eetnaraug eetnaraug eetnaraug eetnaraug eetnaraug eetnaraug eetnaraug dna gol eht enoyreve tsoc doog kcart evah evas evas evig eb eb eb eb eb nseod sdeen tsum tsum tsum tsum tsum tsum tsum tsum tsum tsum tsum tsum tsum tsum tsum tsum tsum tsum tsum tnemeriuqer rof rennam metsys metsys metsys metsys metsys metsys metsys metsys metsys metsys metsys metsys metsys metsys metsys metsys metsys metsys metsys metsys metsys secnerefer acinummoc 41i noitacfiitnedi seussi 61i ecnatpecca 6i noitcasnart 4i ytilibareporetni 51i ytirgetni 1i 11i ytilibisnopser 02i foorp repmat 9i ytilaitnedfinoc 12i egarots 5i ycnerapsnart 21i ytilibaecart 71i gnirotinom 91i ytilibalacs 8i ecnedfinoc ytilibatnuocca tsurt 7i ytilibailer 3i 01i ycavirp 2i gnitidua tcerid ytiruces fo 81i atad doog resu atad fo ymonoxat tr tsoc fo 31i noit fo fo fo fo fo fo fo fo fo fo fo fo fo fo fo fo fo fo eussi hgih kcal kcal kcal kcal kcal kcal kcal kcal kcal kcal kcal kcal kcal kcal kcal kcal kcal kcal kcal ekaf title suppressed due excessive length use blockchain software patterns meeting trust requirements scm blockchain often considered de facto trust enabler argue fering number key features stock blockchain may provide complete solution specific trust requirements given context section discuss current limitations stock blockchain solutions propose use blockchain software patterns e\u0000ciently address specific trust requirements scm according literature intrinsic features blockchain public technology address number requirements scm including trustworthiness however technology also limitations overshadow benefits negative impact trust limitations taken account making design decisions challenges related privacy scalability trust inter operability examples relevant scm domain challenges e\u0000ciently addressed using specific blockchain software patterns examples blockchain suitable storing managing large amounts data keeping images large data sets blockchain expensive due high cost transaction fees undermines performance credibility solution negatively impacts user trust technology come o↵ chain data storage patterns interplanetary file system ipfs implemented conjunction blockchain using blockchain store hashes data o↵ chain storage store extensive data reduce transaction costs add scalability system along lines blockchain solution designed security mind vulnerable cyberattacks forms malicious activity result loss funds compromise sensitive information ad ditionally consensus mechanism used blockchain well adapted could lead issues trust network privacy blockchain designed privacy mind lead exposure sensitive formation ledger public stakeholders use encryption chain patterns data recommended address challenges table presents mapping trust requirements scm key blockchain features discussed section recurrently used meet requirements blockchain software patterns identify complement features consider three cases case blockchain features provide complete solution specific requirements example transparency transparent ledger o↵ered blockchain inher ently meets requirement without need additional patterns indicated ￿ symbol bc features column table case blockchain features insu\u0000cient meet requirement blockchain software patterns proposed example public blockchain transparency ensure data privacy case private blockchain encryption chain data patterns encrypt data transit maintain privacy e kiomba kambilo et al − blockchain indicated symbol bc software patterns column table table mapping trust requirements bc features patterns ￿ ￿ req − satisfied req partially satisfied unsatisfied req requirements blockchain blockchain software features patterns accountability ￿accountability ￿ identifier registry audit − ￿ audit interoperability − ￿ contract observer transparency − ￿ transparency cost control ￿automating ￿ minimize chain data flyweight o↵ chain data storage reliability − ￿ immutability privacy − ￿ encryption chain responsibility − ￿ identifier registry traceability − ￿ traceability decentralized − ￿ decentralized rt identification − ￿ rt identification integrity ￿ ￿ hash integrity hash secret monitoring ￿ monitoring ￿ event log publisher subscriber scalability − ￿ state channel o↵ chain data storage tamper proof ￿ tamper proof ￿ embedded permission storage − ￿ o↵ chain data storage limit storage case blockchain features o↵er partial solution comple mented using software patterns meet requirement example au tomation information systems blockchain lead increased costs data transit extensive terms storage address issue minimize chain data using flyweight patterns limit data size transaction ￿ reduce costs indicated symbol table implementing blockchain solutions using software patterns help im prove scalability good storage privacy trust supply chain management title suppressed due excessive length environment table present mapping trust require ments scm according analysis security confidence confidentiality fake data user acceptance requirements fully met current blockchain solutions features patterns complex problems require research development need addressed blockchain com munity future illustrative example discussion illustrate proposed mapping trust issues requirements specific blockchain software patterns provide initial validation mapping consider example paper discusses use blockchain supporting traceability food supply chain food safety risk management compliance describes details design implementation validates approach running process illustrative example following process defined section identified following trust issues case mapped taxonomy table lack interoperability i4 according case aim develop interoperable autonomous systems heterogeneous stakeholders collaborate high cost transactions i6 stakeholders preoccupied transaction costs ipfs help store large amount data reduce cost transac tion lack scalability i19 must use decentralized storage ipfs guarantee integrity information stakeholders need systems scal ability data lack traceability i12 traceability related information shared participants since traceability mechanisms inevitably store unique traceability records lack data integrity privacy i15 i10 essential guarantee privacy transactions involved actors using sc map identified trust issues trust requirements exemple stake holders need reassured source provenance authenticity products correspond traceability requirement table analyzed architecture patterns proposed case authors compared recommendation based mapping table table shows comparison results results example able identify trust issues case text map taxonomy though patterns indicated case authors expressed explicitly able match patterns pro vided authors case use ipfs store vast amounts data generates hash secret smart contract address reduce transaction e kiomba kambilo et al oricess table blockchain features patterns resolving trust issues ￿ ￿ req − satisfied req partially satisfied unsatisfied req requirements bc intrinsic fea patterns ex bc software patterns pro extracted tures tracted posal case case interoperability contract observer − − cost control o↵ chain data limit storage ￿ storage privacy encryption encryption chain − chain traceability − − ￿ integrity hash secret hash secret ￿ storage o↵ chain data o↵ chain data storage limit − storage storage chain data storage costs enable authors also concerned ensuring privacy traceability data encryption use encryption chain hash secret hash patterns used case correspond recommended blockchain software patterns following four requirements privacy integrity storage limit cost control storage cost c requirement propose storage chain pattern set gas limit transactions addition data storage already identified case authors traceability requirement require specific pattern di rectly provided blockchain corresponds mapping table interoperability requirement addressed paper propose fol contract lowing blockchain software patterns meet requirements observer pattern guarantee interoperability confirm data written identifier registry blockchain comes trustworthy source pattern track transactions hold stakeholders accountable event problems example used mapping proposed previous section extend solution proposed authors two specific blockchain software pat terns proposal completes solution addressing trust requirements discussion software patterns provide developers technical best practices however trust implications patterns explicit literature analysis shows trust issues explicitly addressed design scm solutions trustworthiness often taken granted mere use blockchain validated title suppressed due excessive length blockchain often meets trust requirements goal oriented ap proach many researchers explored example authors focused studying identifying trust requirements blockchain systems created trust engineering taxonomy meet blockchain systems trust requirements goals however provide evidence taxonomy used meet trust requirements using goals goal oriented approach business process reengineering discussed trustworthiness concerns explicitly represented soft goals mapped relevant trust enhancing features blockchain supporting business process reengineering works use goal oriented approach focus requirements specific blockchain features meet trust requirements uniqueness approach resides combining specific blockchain pat terns intrinsic blockchain features address trust issues create trustworthy solutions field scm make first attempt create taxonomy trust issues trust require ments define design implications blockchain solutions taxonomy guide organizations create trustworthy solutions scm despite promising results obtained study important note several limitations opportunities improvement addressed include – identified trust issues using sample research articles scm plan conduct systematic literature review validate findings extend taxonomy – limited study scm work required generalize approach domains – trust issues pattern often explicit literature rely expertise interpretation extract main e↵ort promote standardization use common language taxonomy trust issues requirements alleviate interpretation bias future practical e↵ective use proposed taxonomy mapping plan establish recommendation system application developers select issues encountered input access blockchain software patterns leverage ensure design inspires trust collaboration conclusion blockchain technology often considered de facto trust enabler limitations persist limitations systematically addressed improved design practices article consider blockchain software design patterns address trust issues scm domain first provided overview developed taxonomy trust issues based literature supply chain following recommendations requirement engineering translated trust issues explicit trust requirements examined existing solutions address trust requirements literature identified limita tions argue use intrinsic features blockchain often provides e kiomba kambilo et al partial solution trust issues scm complete solution propose use blockchain software patterns identified patterns blockchain software pattern literature support trust requirements scm evaluated proposal one example literature preliminary evaluation shows relevance trust issues taxonomy defined work proposed blockchain software patterns extend solution case demonstrating potential interest added value mapping work aims helping enterprises better understand trust related requirements improve design scm systems",
  "2023-RG": "introduction trust social construct emerges relationships interactions individuals groups involves willingness rely others based perceived ability integrity benevolence influenced factors past experience reputation social norms digital technologies enable novel models social business interactions trust becomes critical design consideration information systems impact trust system design twofold firstly modern technologies act mediators interactions individuals corresponding author © irina rychkova marwa ghriba open access article licensed creative commons attribution license http creativecommons org licenses reference rychkova ghriba trustworthiness requirements information systems design lessons learned blockchain community complex systems informatics modeling quarterly csimq pp 67–91 available https doi org csimq additional information author orcid id rychkova – https orcid org pii s225599222300194x received may accepted june available online july organizations expectation increasing trust secondly technologies must trusted users provide positive experience technological domain trust often connotated security reliability usability digital systems platforms extended iso definition trust includes cia triad confidentiality integrity availability well authenticity accountability non repudiation reliability within conceptualization trust often established technological mechanisms algorithms automated processes objectively assessed gap social technology centric definitions trust arises due challenges translating subjective context dependent nature social trust objective measurable terms addressed technical mechanisms bridge gap important recognize multidimensional nature trust consider social cultural contexts technological systems developed used three forms trust widely recognized literature social trust digital trust trust technology social interpersonal trust defined subjective probability entity – trustee – required capacity willingness perform action beneficial least detrimental another entity – trustor – specific context compared social trust digital trust defines relationships entities digital world measure confidence trustor trustee ability protect data privacy individuals trust technology another form trust reflects trustor beliefs specific technology attributes necessary perform expected given situation negative consequences possible social digital trust towards technology intrinsic organizations important implications organizational decision making technology adoption – need explicitly addressed design technological solutions past decade blockchain community provided substantial contribution body knowledge design development trustworthy information systems – blockchain technology fosters digital trust reliable efficient information sharing blockchain literature trust mainly connotated specific technical properties decentralization transparency traceability data integrity etc – many properties granted fundamental features blockchain technology digital trust provides foundation secure reliable digital interactions may fully capture complexities social trust arise human relationships emotions cultural factors moreover different architectural design choices consensus mechanisms governance structures impact level trust confidence users blockchain solutions therefore broader scope implications trust blockchain solution design need studied work investigate social trust digital trust trust technology addressed blockchain literature follow guidelines systematic literature review slr defined kitchenham et al review primary research studies focus trust conceptualization trustworthy system design acceptance blockchain study intend make following contributions • descriptive overview current research information systems engineering blockchain addresses trust issues trustworthiness requirements • definition classification trustworthiness requirements extracted primary research studies blockchain • qualitative analysis trustworthiness requirements grounded lessons learned blockchain community work addresses broader audience first help organizational stakeholders better understand trustworthiness requirements assess potential value technological particular blockchain solutions meet requirements second address technology professionals researchers helping align design decisions social context formulate identified trustworthiness requirements technology neutral language make reusable different problem solution domains bridge gap technological social domains associate defined requirements three trustworthiness factors social science ability benevolence integrity order effectively address concerns various experts involved solution design identify trustworthiness requirement corresponding type trust additionally propose mapping requirements three abstraction levels strategic operational facilitate expression different organizational contexts final intended contribution • identification key challenges directions future work would lead improved alignment organizational requirements technological solutions resolving trust issues remainder article organized follows section presents background study analyses related works section presents research method section reports results literature review respect defined research questions section discuss findings provide directions future research finally section conclude article fundamentals related work trust trustworthiness research literature trust act trust often represented relationship subject trustor object trust trustee outcome trust defined interaction trustor trustee characterized resulting experience negative positive antecedents trust refer factors influence trustor willingness trust include factors related subject trustor propensity trust object trustworthiness trustee environment interaction subject object takes place e g institutional trust study consider trustor propensity trust institutional trust invariant given interaction primary focus trustworthiness factors associated expected attributes trustee trustor perceives trustworthiness trustee collecting information particular trustee perception evolve based trust outcomes good bad experience trustors expectations trustworthiness trustee formulated trustworthiness requirements twr twr met incorporating certain attributes features properties trustee whether social entity technological solution whereas researchers social sciences study trust relationships social entities individuals groups organizations information systems research trust considered socio technical concept defined relationship social entities technological components e g information systems applications infrastructure etc technological component either object trustee subject trustor address complex nature concept consider three types trust social trust trust social entities trust technology trust social entity – trustor technological component – trustee digital trust trust social entities technological components play role mediator act behalf trustor trustee depending whether trustee social entity object trustor needs consider different trustworthiness factors prior engage interaction trustee provide brief overview social trust trust technology digital trust trustworthiness factors summarize presentation table table overview trust types trust antecedents factors type trust trustor subject trustee object outcome trustworthiness ability benevolence interaction social trust org individual org individual integrity collaboration functionality trust org individual object helpfulness usefulness acceptance use technology reliability org individual object privacy security interaction transaction digital trust object org individual transparency traceability digital environment control object object social trust social trust precondition collaboration described situation individual organization trustor willing rely chosen actions another individuals trustee gambetta defines trust level subjective probability trustor assesses trustee perform particular action mayer davis schoorman define trust antecedents outcomes integrative model organizational trust authors define trust trustee function trustee perceived ability benevolence integrity trustor propensity trust whereas propensity trust intrinsic characteristic trustor ability integrity benevolence factors perceived trustworthiness characterize trustee thus evaluated according ability defines group skills competencies characteristics enable trustee influence within specific domain benevolence defines extent trustee believed want good trustor aside egocentric profit motive integrity refers trustee moral quality sincere honest capacity willingness adhere rules principles social trust used basis decision making diverse contexts including enterprise strategy governance operations technology trust technology trust technology described situation individual user organization trustor willing rely technology trustee accomplish specific task trust technology reflects trustor beliefs specific technology object attributes necessary perform expected given situation negative consequences possible trustworthiness factors trust technology include functionality helpfulness reliability credibility information according sutcliffe needs trust technology fulfilled solutions usability functionality aesthetics also highlights trust facilitated via customizability adaptability trustworthiness technology associated perceived usefulness ease use enjoyment value quality price ratio trustworthiness software associated transparency verifiability compliance development process trust technology antecedent technology acceptance use improve acceptance user expectations trustworthiness technology need explicitly formulated respective trustworthiness requirements considered technology design digital trust digital trust precondition social business interactions digital environment interactions technology object plays role mediator impersonate trustor trustee digital trust reflects trustor beliefs trustee social entity object attributes necessary support secured digital interactions trustworthiness factors digital trust include perceived privacy security transparency traceability control according role technology trust mediator also fulfilled increasing accessibility information transparency processes communication intent identity trustworthiness requirements software systems engineering systems engineering trustworthiness particular system component means worthy trusted fulfil specific requirements iso iec standard addresses systems software quality requirements defines trust degree user stakeholder confidence product system behave intended whereas definitions provide reference social context system used implications trust explored much subjectivity context sensitivity emergence characteristics trustworthiness make difficult capture formalize product design consider example mobile phone examine trustworthiness factors influence user decision buy use specific purposes rely upon product discover different users contexts use factors elderly person antecedents trust include usability helpfulness people active lifestyle include robustness cost efficiency professionals include performance resilience data security stakeholders needs trust run conflict needs impact requirements instance using cloud storage attractive high accessibility low price however raises trust concerns related resilience possibility unauthorized access personal business data trustworthiness requirements considered work provide ground reasoning conflicts resolution requirements engineering requirement defined statement identifies operational functional design characteristic constraint product process unambiguous testable measurable necessary product process accepted consumers internal quality assurance guidelines set explicit clearly stated requirements facilitates communication stakeholders justifies technological design decisions provides basis solution validation expressed natural language statement requirement include subject e g system software etc active verb elements necessary specify requirement guidelines writing requirements specified iso iec standard software engineering systems engineering two types requirements widely used product design functional requirements frs define function system component non functional requirements nfrs define properties specify criteria according system functioning judged evaluated terms frs define system nfrs define whereas frs nfrs focus measurable product quality phenomena related people social context product developed deployed used require less attention taxonomy soft requirements introduced soft requirements linguistic concept addresses wide range phenomena related people organizations society values attitudes motivations emotions sr extending nfr soft goals refined fr hard goals met properties software solution however also address social concepts including trust always require technological solution compared fr nfr sr may implicit influences subtle difficult anticipate design time trust associated sr aspects social system technological system used – context context use sr influence user requirements fr sr well product qualities fr nfr work focus trustworthiness requirements twr associated fr nfr contributing trust entities e g user software product given socio technical system see figure define trustworthiness requirement statement made trustor expected trustworthiness trustee statement clearly express operational functional design characteristic according trustor believes positively impacts trustworthiness trustee interaction two nature trustor trustee relationship well trustworthiness factors vary depending type trust see table similar sr twr given product emergent vary depending characteristics trustor e g propensity trust perception risk context interaction product take place explicitly defined twr change extend set product requirements see twr figure whereas trustworthiness considered important factor product satisfaction recognized antecedent adoption little research explicitly addresses trust trustworthiness part system requirements role trustworthiness software development lifecycle examined trustworthiness requirements derived user trust concerns include usability availability reliability transparency users trust concerns elicited requirement engineering process translated trustworthiness requirements mapped onto specific features properties prospective technological solutions figure trustworthiness requirements twr compared fr nfr explicitly defined twr change extend set product requirements see twr trust trustworthiness blockchain practice digital trust solutions consist implementing set control mechanisms intend modify feasible set alternatives undesirable scenarios realized within trustor trustee interaction digital environment paraphrasing gambetta digital trust seen device coping freedom others increases probability party given opportunity act harmful way blockchain technology enforces digital trust providing set control mechanisms intrinsic features blockchain technology emerged potential solution cope mistrust traditional centralized institutions online intermediaries general blockchain defined distributed database allows users transact public pseudonymous setup without reliance intermediary central authority according trust influential factor driving interest blockchain blockchain trust placed social entities participating interaction specific properties technology belotti et al point whenever trust laid set network nodes better confidence protocol e set rules punishes makes unfeasible violation thus guarantees correct functioning system decentralized architecture use cryptography distributed consensus protocols smart contracts fundamental features blockchain enable immutability integrity auditability transparency transactions properties recurrently associated digital trust literature – however sheer use blockchain trust granted blockchain platforms support digital trust building parties remove requirements social inter personal trust organizations moreover alleviating social factors trustworthiness blockchain introduces digital counterparts instance independence central authority comes cost privacy distributed consensus trustful transactions come cost performance interoperability etc depending industry sector use case privacy security scalability interoperability performance considered main challenges strongly impact blockchain adoption trust blockchain technology meet challenges blockchain technology trustworthiness examined trustworthiness requirements particular use case related works trustworthiness blockchain solutions widely discussed related secondary studies authors evaluate potential blockchain traditional databases four domain areas including required trust assumptions context requirements performance characteristics required consensus mechanisms literature review examines trustworthiness data provider oracle addressed blockchain solutions authors evaluate blockchain solutions discuss requirements considerations related trust identity management healthcare domain literature review examines barriers blockchain adoption highlights issues related high computing power requirements implementation costs overview trust free sharing services financial sector presented authors highlight security aspects main trustworthiness factors work identifies key factors non functional requirements related adoption blockchain solutions construction industry factors include information trustworthiness transparency traceability immutability security privacy latency computational cost also identified main technical challenges blockchain however privacy explicitly related trustworthiness blockchain whereas many studies discuss technical challenges blockchain impact blockchain adoption relate challenges trust social trust trust technology role multi perspective view trust context sharing economy blockchain technology examined authors identify trust peers trust platform trust targets including products put forward social antecedents trust ability integrity benevolence goal oriented approach business process reengineering discussed trustworthiness concerns explicitly represented soft goals mapped relevant trust enhancing features blockchain supporting business process reengineering work capture issues requirements expressed blockchain literature fr nfr process requirements etc associated trust trustworthiness formulate non blockchain agnostic twr requirements intended serve knowledge base facilitate mapping trust issues expressed technical non technical stakeholders organizations trust enabling features solutions rationalizing technological design choices research method research method used study follows guidelines systematic literature review slr methodology consists following steps explained section definition research questions definition search strategy primary source selection data extraction analysis synthesis research questions study aims examine existing research design development acceptance blockchain solutions provide comprehensive overview organizational requirements related social trust digital trust trust technology drive solutions formulate following research questions study rq1 contributions primary studies rq trust defined primary studies rq trustworthiness requirements used primary studies rq types trust addressed identified requirements rq abstraction levels trustworthiness requirements defined search strategy selection process flow diagram adopted prisma preferred reporting items systematic reviews meta analyses presents overview source selection process figure figure prisma flow diagram selection process identification identify initial set records selected following databases scopus acm digital library ieee using picoc criteria define search terms forming following search string blockchain trust trustworthy trusted requirement architecture design development engineering adoption limit publication year pubyear obtain consistent set publications affected recent apparitions conducted automated search selected databases identified records total removing duplicates non primary sources e g proceedings books etc kept records screening screening relevant publications screened titles abstracts identified records eliminated publications based following exclusion criteria ec1 study unavailable retrieval ec2 study peer reviewed publication ec3 study primary research ec4 study focus requirements ec5 issues requirements motivating solution related trust trustworthiness kept records full text assessment eligibility assessment examined full text preselected publications eligibility based exclusion criteria ec3 ec5 full text assessment executed two authors independently results compared conflicts resolved records kept final data set snowballing final data set conducted backward forward citation analysis eligible publications previous step called snowballing technique using databases e g google scholar identified set records reinjected process records screened assessed eligibility following steps records eliminated selection process resulted final data set articles – – overview selected studies presented table analysis use consecutive enumeration studies s1 s56 table overview selected studies l c f u g n n l f r l n e l c h e e r c n c c f c e c c r c r u r r l n h e r l f c f e p e p l p e u v b f e u p b h e r e r e r e r r b e l p vehicular model s1 tech networking algorithm tt proposal s2 healthcare evidence tech op tt principles approach s3 education im op tt prototype approach s4 scm im op architecture s5 eai approach im op healthcare s6 architecture im iot architecture s7 scm im op framework evidence s8 scm soc st tt proposal electronic evidence s9 im st tt voting proposal protocol s10 iot im algorithm s11 framework im system s12 ai im op tt model approach s13 healthcare im prototype s14 banking im op tt architecture prototype tt s15 education im op model framework s16 healthcare im op tt framework healthcare tt s17 architecture soc industry system dapps framework s18 soc op bpm model tt approach s19 scm conceptual im op tt model approach s20 bpm soc op prototype tt scm model tt s21 im op iot algorithm scm framework s22 im op iot model vehicular framework s23 im networking architecture s24 architecture im s25 iot framework im evidence s26 healthcare soc op principles s27 ea op tt s28 evidence tech op tt table continued l c f u g n n l f r l n e l c h e e r c n c c f c e c c r c r u r r l n h e r l f c f e p e p l p e u v b f e u p b h e r e r e r e r r b e l p proposal s29 banking tech architecture s30 education architecture tech op vehicular architecture s31 tech tt networking concept evidence s32 bpm soc op taxonomy tt evidence s33 bpm soc op method tt s34 mis model soc op tt edge s35 architecture im computing architecture evidence s36 im op tt technology blueprint s37 healthcare model im op framework s38 bpm tool im op process architecture healthcare s39 proposal im op ea approach evidence s40 bpm tech op approach s41 framework im op tt s42 scm tech op tt framework s43 tech op principles proposal s44 healthcare im op protocol electronic s45 proposal im voting s46 healthcare proposal im op tt iot tt s47 framework soc op industry approach s48 bpm im op proposal s49 bpm model soc op tt framework s50 cloud tech proposal s51 bpm proposal tech op s52 healthcare proposal tech bpm architecture s53 im op mas proposal protocol s54 scm im model bpm proposal s55 im industry framework s56 tool tech data extraction analysis synthesis table defines data items systematically extracted selected sources data item defined connection one research questions year publication application domain provide descriptive information data set explored study overview extracted data presented table results data analysis presented next section table data extraction form data item value rq year publication num application domain text quantitative analysis empirical artifact theoretical methodological dataset survey contribution type rq1 opinion research outcome text rq1 qualitative analysis trust definition im soc tech im implicit soc social tech technical rq2 trust issue text rq3 trustworthiness text rq3 requirement type trust tt social digital tt trust technology rq4 addressed level abstraction op strategic op operational technical rq5 analysis contributions used guidelines wobbrock code contribution types research outcomes qualitative analysis trustworthiness requirements first examined underlying theories trust used studies definition trust social technology centric studies adhere next extracted text evidences trust issues trustworthiness requirements extracted data coded authors following semantic latent approaches defined codes trustworthiness requirements based trustworthiness properties specified related secondary studies table codes frequently used studies security privacy data integrity confidentiality availability reliability accountability codes used decentralization costs resource efficiency traceability immutability transparency resilience authenticity table related literature used define codes trustworthiness requirements article method articles analyzed alamri b et al slr ali et al slr caldarelli g ellul j slr casino f et al slr durneva p et al slr hawlitschek f et al slr konstantinidis et al slr pietrzak p slr ross r et al technical report n standard iso iec tr standard n teisserenc b samad lr interviews n wang et al slr analysis set codes refined new codes added instance considering security closely associated categories e g confidentiality integrity availability authentication literature removed code list conversely categories recurrently used primary sources e g compliance interoperability auditability added code list evidences requirements extracted analytically mapped identified codes categories including type trust abstraction level available table results contributions primary studies rq1 review examine primary research studies address trust issues requirements designing developing technological solutions apply classification wobbrock analyze general forms new knowledge takes classification defines seven research contribution types empirical methodological theoretical artifact survey opinion coded research study contribution type type research outcome produced table majority studies reports multiple contributions outcomes summary presented figure b figure distribution research contributions type b distribution developed artifacts empirical research contributions refer findings based observation data gathering created knowledge embedded new evidences proposals examined studies make empirical research contributions providing evidences trustworthiness requirements issues solutions theoretical contributions aim improving existing understanding existing way reasoning things provide new definitions concepts models principles frameworks grounded analytical thinking reasoning theoretical contributions made examined studies methodological contributions aim improving existing practice defining novel ways carry work influence design develop analyse run systems processes result new knowledge form approaches methods metrics techniques etc methodological contributions identified studies proposed methods approaches mostly grounded observations experience empirical data artifact contributions result design development activities new knowledge manifested working prototypes architectures tools processes algorithms demonstrate new concepts enable new explorations future artifacts developed examined studies including working prototypes tools systems architectures artifacts include process protocols algorithms survey research contributions create knew knowledge synthesizing previous work identifying trends open issues survey contributions also referred secondary research following selected research protocol secondary research papers eliminated selection process see section dataset contributions support research community providing common ground testing analysis evaluation contributions opinion contributions propose arguments seek inform persuade reader contribution types identified examined set studies trust defined primary studies rq2 addressing trust text examined primary research divided follows studies provide explicit definition trust grounded social sciences studies provide technology centric heuristics trust studies provide explicit definition trust figure illustrates distribution studies found articles define trust social concept recognize role social context technical solution design s17 s18 s20 s26 s32 s33 s34 s47 s49 s8 articles trust presented cause effect technological solution instance solution considered trusted exhibits specific properties decentralization transparency traceability data integrity etc s1 s2 s28 s29 s30 s31 s40 s42 s43 s50 s51 s52 s56 remaining studies refer trust trustworthiness without defining explicitly findings show little consensus understanding trust social dimension blockchain community lack theoretical foundation impacts way trust issues trustworthiness requirements expressed studies figure definition trust primary studies tech – technology centric view soc – social view im – explicit definition trust trustworthiness requirements used primary studies rq3 extracted evidences referring trustworthiness requirements articles identified requirements recurrently expressed studies – twr text related requirement different sources generalized reformulated comply iso recommendations requirement statements use terms trustor trustee identify corresponding party interaction defined section term process refers interaction trustor trustee service trustee provides trustor depending context term system refers technological solution implementing supporting mediating process present summary requirements tables 5–7 rid – requirement identifier requirement – requirement name type trust – indicates type trust requirement refers – social – digital tt – trust technology ea domain refers level abstraction requirement formulated – strategic op – operational – technical trust issues often emerge social domain grounded subjective beliefs organizational stakeholders conditioned culture politics personality etc whereas trustworthiness factors defined social science e g ability benevolence integrity suitable describe reason users trust issues providing enough details guide technological solutions conversely trustworthiness factors defined technological domain e blockchain provide blueprint technological solutions nevertheless hard trace back social context trust issues emerge first place solutions exploited bridge gap social technological domains relate extracted twr perceived trustworthiness factors defined mayer al ability benevolence integrity ability refers group skills competencies characteristics enable party influence within specific domain identified trustworthiness requirements refer trustee ability fulfil specific task ensure task fulfilled specific way table requirements include table trustworthiness requirements ability ea rid requirement type trust articles domain twr1 competence op s17 s47 s49 twr2 automation tt op s21 s16 s19 s27 s28 s34 s55 s3 s21 s12 s15 s18 s19 s20 s29 s32 s36 s48 twr3 decentralization tt op s51 s53 s54 s55 s9 s23 s25 twr4 interoperability tt op s14 s15 s31 s36 s44 s46 s48 s55 s56 twr5 performance tt op s12 s18 s31 s32 s33 s34 s47 s49 s1 s21 s22 s12 s14 s15 s16 s17 s18 s19 s27 efficiency tt op s28 s29 s31 s32 s33 s34 s47 s52 s55 s56 s8 robustness s11 cost effect tt op s21 s14 s15 s16 s19 s27 s28 s8 twr6 resilience tt op s1 s6 s12 s17 s18 s27 s33 twr7 availability tt op s15 s16 s17 s18 s20 s32 s33 s49 s56 s17 twr1 – competence trustor must able assess trustee ability competence skills expertise deliver service perform part entrusted process respect predefined level quality requirement specifies relationships social entities individuals organizations related social trust twr2 – automation data processing trustee must minimize physical maximize digital processing data trustee fulfils requirement automating processes implementing dedicated services requirement grounded assumption automated process reduces human errors transaction time transaction cost requirement determines technology acceptance digital interactions examined studies related digital trust trust technology twr3 – decentralization control process activities data must delegated third party one specific party involved process system trustee support distributed coordination control transactions requirement closely related disintermediation trustor trustee interaction must rely intermediary process coordination control requirement associated social digital trust literature studies mentioned decentralization connection technology acceptance trust technology twr4 – interoperability trustee must demonstrate capability work trustor despite organizational technological cultural differences requirement associated three types trust studies digital trust trust technology expressed follows system trustee must able integrate without undue delay work various heterogeneous components physical technological various kinds available data resources integrated twr5 – performance providing service executing entrusted task trustee organization individual technological solution must ensure efficient distribution resources respect defined timeframe budget resources may include physical human technological resources s47 performance defined perception automated system capability supporting user goals sources associate performance efficiency robustness related social trust trust technology put forward cost effectiveness related trust technology twr6 – resilience trustee guarantee process execution case failure one components trustor must able recover data transmit system twr7 – availability resources human physical hardware software information needed process activity execution available requirement fulfilled trustee organization individual mediating infrastructure according literature resilience availability mostly determine social trust trust technology benevolence extent trustee believed want good trustor aside egocentric profit motive identified trustworthiness requirements refer trustee ability guarantee trustor capacity control trustee actions cause trustor harm table table trustworthiness requirements benevolence type ea rid requirement articles trust domain authentication s1 s4 s21 s22 s17 s31 s35 s36 s37 s44 s45 twr8 tt op entity s47 s48 s9 s10 s23 s25 authentication twr9 tt op s1 s21 s22 s30 s31 s35 s36 s47 data s6 s18 s19 s20 s27 s33 s38 s43 s44 s46 s47 twr10 confidentiality tt op s49 twr11 authorization tt op s1 s4 s15 s17 s47 twr12 accountability op s1 s17 s43 s47 s11 s1 s7 s12 s17 s26 s27 s36 s44 s49 s52 s54 twr13 privacy tt op s9 s10 twr14 usability tt op s12 s47 s14 twr8 – authentication entity trustor must able verify identity trustee twr9 – authentication data trustor must able determine correctness reliability reported data e g messages events requirement also referred data authenticity data accuracy data reliability studies data entity authentication mainly associated digital trust twr10 – confidentiality trustor sensitive information including identity must disclosed unauthorized parties executed activity visible authorized resources entities requirement associated types trust literature twr11 – authorization trustor must able determine whether trustee appropriate permissions e authorized perform specific action access specific resource requirement mainly associated digital trust related twr12 twr12 – accountability trustee held responsible actions deny case malicious activity information authorized authority ensure accountability tracing identity source malicious activity information twr13 – privacy trustor identity information must disclosed trustor must power make decisions concerning collection use disclosure personal information trustee requirement associated social digital trust twr14 – usability system trustee must intuitive easy use requiring minimum specific training skills trustor system must adapted specific needs e g age handicap requirement determines trust technology associated acceptance adoption integrity moral quality sincere honest consistent one behavior capacity willingness adhere rules principles table presents requirements refer trustee ability guarantee trustor capacity control trustee actions comply predefined rules norms agreements table trustworthiness requirements integrity type rid requirement ea domain articles trust s5 s18 s20 s27 s32 s33 s39 s40 s45 twr15 integrity process tt op s47 s48 s49 s53 s1 s6 s21 s15 s16 s17 s19 s28 s29 twr16 integrity data tt op s30 s39 s40 s45 s47 s48 s50 s52 s54 s56 s8 s24 s25 twr17 non repudiation op s1 s4 s15 s16 s20 s28 s32 s33 s22 s14 s17 s18 s26 s27 s40 s42 s8 twr18 compliance tt op s17 s3 s4 s21 s22 s13 s16 s18 s27 s28 twr19 auditability tt op s40 s42 s46 s2 s3 s22 s14 s15 s16 s17 s18 s19 twr20 transparency tt op s28 s32 s33 s40 s42 s43 s46 s47 s53 s55 s8 s9 s11 s17 s21 s22 s12 s14 s16 s28 s38 s53 s8 twr21 traceability tt op s11 s25 twr15 – integrity process trustee must ensure correct timely execution activities respect contract agreements process specifications requirement associated three types trust determine trustworthiness social digital interactions well trust technology object twr16 – integrity data trustee must ensure overall accuracy completeness consistency data entire life cycle includes data protection unauthorized modification alteration twr17 – non repudiation trustee must ensure activity performed denied information artefacts written permanent tamper proof way twr16–17 primarily associated digital trust twr18 – compliance trustee act according predefined rules agreements regulations e g gdpr data protection primarily associated social trust requirement also determines digital trust trust technology related auditability transparency traceability requirements twr19 – auditability trustor must able validate trustee compliance predefined rules e g executing audit examining execution traces supervising trustee process run time etc twr20 – transparency trustee process e g workflow must transparent explicitly documented trustee must provide accessible non repudiable audit trail showing use change viewing data twr21 – traceability trustor access information related provenance physical information object accurately trace upward source requirement mainly associated digital trust types trust addressed identified requirements rq4 table 5–7 twr associated one several types trust using table requirements formulated relevant type trust replacing trustor trustee qualifiers corresponding types entities involved interaction e g individual organization object instance social trust compliance requirement twr18 expressed follows company trustee must obtain explicit consent individuals trustor collecting processing data trust technology information system trustee must provide means users trustor express consent must collect use personal data without explicit consent digital trust blockchain based system trustee ensure personal data collected used network connected individuals devices trustor without explicit consent analysis shows spite growing importance digital trust social trust trust technology remain important drivers organizational decision making twr identified study drive design development trust enabling technological solutions also determine relationships individuals organizations reflect needs three types trust organizations abstraction levels trustworthiness requirements defined rq5 trust concerns expressed stakeholders different abstraction levels characterized scope e g organization activity application vocabulary used study map identified twr onto three abstraction levels consistent discipline enterprise architecture strategic operational level support solution design trust concern addressed twr formulated adequate abstraction level strategic level addresses organizational vision strategic objectives instance trust issue s22 gem industry provenance origin critically important environmental social regulatory reasons corresponding traceability requirement twr21 formulated follows buyer trustor access information related provenance gemstone accurately trace upward source operational level defines strategic objectives met business processes operations consider following issue s28 title registry vulnerable modification essentially title records could manipulated malicious parties corresponding integrity requirement twr16 formulated follows title registry provider trustee must ensure overall accuracy completeness consistency data entire life cycle includes data protection unauthorized modification alteration technological level focuses resources necessary digitalization operations processes examples twr expressed technical abstraction level include architectures must also guarantee integrity confidentiality data remaining resilient distributed attacks s6 citizens privacy concerns information systems trust issues privacy concerns solved using decentralized identity zero knowledge proof based mechanisms s12 discussion figure summarizes scope contributions work presents directions future research selected primary studies constitute input work first provided descriptive overview collected primary studies analyzed nature research contributions c1 analysis shows examined research grounded empirical data contributes domain new evidences proposals models frameworks new concepts developed examined publications working prototypes presented methods approaches design addressed studies encourages research new design approaches based explicit analysis twr data extraction focused trust issues trust related requirements expressed primary studies following iso guidelines formulated set twr consistent related works c2 originated blockchain literature twr formulated technology neutral language advocate blockchain specific technological solution bridge gap social technological domains associated identified twr three trustworthiness factors defined social science ability benevolence integrity c3 literature analysis shown trust issues expressed stakeholders different organizational levels varying scope technical details discussed twr mapped three abstraction levels consistent enterprise architecture strategic operational c4 figure overview contributions future work strongly presented literature digital trust form trust organizations seek reenforce trust technology social trust remain powerful drivers decision making specified problem domain technology neutral trustworthiness requirements presented work bound blockchain technological solutions used drive alternative design decisions technological choices plan elaborate topic future f trust value vs trust requirement enhance trustworthiness systems significant investment needed requirements architecture design development systems alongside fundamental shift organizational culture degree trustworthiness achievable complex systems today depends ability integrate social technical perspectives trust important number articles examined study addresses trust solution provider perspective examples include trust considered value created end user given technological solution e g blockchain based system whereas user need trust trust concerns taken granted rarely elicited result many research studies report technology acceptance issues ensure better fit trust enabling solutions organizational needs deeper understanding trust concerns explicit analysis twr needed advantage system design based explicit twr twofold organizations end users translating subjective often implicit trust issues explicit trustworthiness requirements organization develops better visibility understanding potential threats risks priorities clearly express needs ensure better strategic alignment prospective trust enabling solutions solution providers shifting design value creating features meeting specific trustworthiness requirements technology providers solution developers ensure better acceptance trust enabling solutions threats validity directions future work study follows systematic literature review approach ensure accuracy eliminate bias nevertheless following limitations listed study examines primary research focused design blockchain based solutions threatens completeness presented requirements taxonomy general analysis trust issues bring new insights extend taxonomy slr reveals little agreement trust definition blockchain community whereas social technology centric definitions trust use majority studies provide explicit definition trust discrepancy trust definition represented challenge data extraction analysis coding authors often rely experience interpretation presents threat internal validity study among identified twr confidentiality integrity availability authentication non repudiation properties commonly associated information security detailed analysis relation trustworthiness security security trust addressed future work study presents preliminary findings twr expressed different abstraction levels strategic operational future work plan elaborate important topic formalizing twr different enterprise architecture levels work presents list generic twr healthcare supply chain management banking iot examples domains addressed articles analyzed study domain specific taxonomies trust issues corresponding twr may particular interest practitioners domains work presented addresses twr supply chain management domains need addressed researchers future conclusion work followed slr guidelines defined kitchenham et al reviewed primary research studies ise blockchain focus trust conceptualization trustworthy system design development analyzed trust issues presented literature formulated set twr following iso guidelines goal provide support business technical experts seek identify articulate scope problem related trust lay arguments guide design decisions technical choices generalizability completeness defined set twr scope study addressed future",
  "2023-RZS": "introduction business ecosystem refers interconnected business network organizations individuals interact influence within particular industry market encompasses complex web relationships resources interactions among various entities collectively contribute functioning success overall business environment digital transformation increasing role digital technologies social interactions concept digital business ecosystem dbe emerged dbe entities interact collaborate using digital technologies leverage data information key assets dbes characterized dynamic rapidly evolving nature require effective governance mechanisms ensure fairness trust accountability among participants governance involves setting common rules standards protocols data exchange resource sharing collaboration well resolving conflicts ensuring compliance managing risks within dbe key aspect dbes diversity actors roles fulfill addition roles acting traditional business networks supplier customer end user dbes rely addition specific ones example driver role managing tools support dbe governor providing defining standards policies reputation guardian assessing dbe actors trustworthiness reliability solvency worthiness well several roles dbe digital technology acts mediator interactions ecosystem participants expectation increasing trust providing positive experience trust plays crucial role functioning dbe resilience companion proceedings 16th ifip wg working conference practice enterprise modeling 13th enterprise design engineering working conference november – december vienna austria irina rychkova univ paris1 fr rychkova jelenaz dsv su se j zdravkovic js dsv su se j stirna rychkova j zdravkovic 832x j stirna © copyright paper authors use permitted creative commons license attribution international cc ceur ceur ws org workshop issn proceedings provides foundation upon participants collaborate share resources critical design consideration dbe supporting digital platforms identifying modeling analyzing trust relations among social technical dbe entities vital design step requires adequate enterprise modeling methods practices explicit analysis trust issues dbe impact dbe strategy used identify partners needs terms trust dbe operations affect processes dbe partners dbe technology help design relevant components make technological choices social science trust described situation individual organization trustor willing rely chosen actions another individual organization trustee according mayer et al ability benevolence integrity factors perceived trustworthiness characterize trustee technical domain trust defines relationships individual technological component trust technology describes interactions entities digital world digital trust perceived trustworthiness often connotated security reliability authenticity digital systems platforms transactions gap social technical definitions trust arises due challenges translating subjective context dependent nature social trust objective measurable terms addressed technical mechanisms technical digital trust provide foundation secure reliable digital interactions may fully capture complexities social trust arise human relationships emotions cultural factors dbes inherently socio technical systems addressing trust dbe requires holistic approach integrates social technical dimensions trust bridging gap dimensions involves recognizing interplay different types trust understanding subjective contextual nature trust issues leveraging social technical mechanisms foster trust dbes goal work explicitly address trust implications dbe design paper examine roles dbe discuss trust relationships first associate dbe roles social trustworthiness factors bridge gap social technical dimensions trust propose mapping social trust issues trustworthiness requirements twr guide dbe design define trustworthiness requirements expectations one actor trustor trustworthiness another actor trustee dbe demonstrate findings case study european universities forming higher education alliance fulfills main criteria considered dbe examine trust building process among actors dbe focusing implications supporting information systems formulate following research questions • rq1 social factors trust defining relationships among dbe actors • rq2 trustworthiness requirements guide design development dbe supporting systems case alliance order formulate twr particular role alliance dbe first analyze trust issues expressed corresponding dbe participant social trust factors use reference list twr derived literature identify relevant generic requirements finally illustrate generic requirements contextualized alliance proposed approach bridges gap social technical dimensions trust supports business technology experts guiding design decisions technological choices remainder article organized follows section discuss background study related works section provide mapping generic dbe roles trustworthiness factors defined social science also describe approach trustworthiness requirements elicitation section present findings case study higher education alliance section discuss results provide conclusions background related work trust research literature trust act trust represented relationship subject trustor object trust trustee outcome trust defined interaction trustor trustee characterized resulting experience negative positive antecedents trust refer factors influence trustor willingness trust include factors related subject trustor propensity trust object trustworthiness trustee environment interaction subject object takes place e g institutional trust study consider trustor propensity trust institutional trust invariant given interaction primary focus trustworthiness trustee design variable whereas researchers social sciences focus trust social entities individuals groups organizations research trust considered socio technical concept e defined relationship social entities technological components information systems applications infrastructure etc technological component either object trustee subject trustor modern organizations social trust remains important determinant collaboration decision making constant digital transformation trust issues occur among social actors strategic operational levels organizations often addressed socio technical solutions developed creating gap social technology centric perspectives trust bridge gap important recognize multidimensional nature trust consider social cultural contexts technological systems developed used three forms trust widely recognized literature social trust digital trust trust technology social interpersonal trust defined subjective probability trustee required capacity willingness perform action beneficial least detrimental another entity trustor specific context digital trust defines relationships entities digital world measure confidence trustor trustee ability protect data privacy individuals trust technology reflects trustor beliefs specific technology attributes necessary perform expected given situation negative consequences possible table presents summary three types trust associated trustworthiness factors outcomes table overview trust perspectives types type trustor trustee view trustworthiness factors outcome trust subject object laicos org org ability benevolence interaction social trust individual individual integrity collaboration trust org functionality helpfulness object acceptance use technology individual usefulness reliability org object privacy security interaction individual digital lacinhcet transparency traceability transaction digital trust org control environnement object individual object object trust social perspective addresses social context trust issues among actors arise defines trust antecedents outcomes integrative model organizational trust authors define trust trustee function trustee perceived ability benevolence integrity trustor propensity trust propensity trust intrinsic characteristic trustor considered invariant ability integrity benevolence factors trustworthiness characterize trustee depend context nature given trustor trustee interaction according ability defines group skills competencies characteristics enable trustee influence within specific domain benevolence defines extent trustee believed want good trustor aside egocentric profit motive integrity refers trustee moral quality sincere willingness adhere rules principles social trust used basis decision making diverse contexts including enterprise strategy governance operations technology trust technical perspective digital trust trust technology define trust technological domain trustworthiness factors technology include usability functionality helpfulness reliability credibility information well customizability adaptability digital trust reflects trustor beliefs trustee social entity object attributes necessary support secured digital interactions trustworthiness factors digital trust include privacy security transparency traceability control bridging gap social technical views trust trustworthiness factors digital trust trust technology formalized measured used provide foundation technological solutions may fully capture complexities social trust arise human relationships emotions cultural factors thus explicit mapping technological social perspectives trust great importance requirements engineering discipline plays crucial role design development socio technical systems process involves understanding stakeholders needs expectations well social organizational context system operate address trustworthiness trustee socio technical systems perspective trustor expectations regarding trustee trustworthiness expressed trustworthiness requirements twr define twr statement made trustor expected trustworthiness trustee twr clearly express operational functional design characteristic according trustor beliefs positively impacts trustworthiness trustee interaction two twr met incorporating certain attributes features properties trustee whether social entity technological solution twr eventually refined conventional fr nfr process requirements contracts interest requirements related trust new trust considered part soft requirements sr associated aspects social system technological system used – context trustworthiness requirements defined special class quality requirements relate trust concepts capability vulnerability risk role trustworthiness software development lifecycle examined process elicitation analysis twr proposed work presented explicitly addresses twr supply chain management study examine social trustworthiness factors define interactions among dbe actors first provide mapping factors generic dbe roles using case study illustrate trustworthiness factors trustee dbe addressed twrs result identify requirements need met dbe roles supporting digital solutions providing guidance dbe design evolution digital business ecosystems dbe roles dbe actors roles capabilities relationships digital components essential elements dbe actors individuals organizations take part dbe fulfilling specific roles according capabilities interactions dbe actors supported mediated different digital components ecosystem digital platform services smart devices cloud storage roles archetypal kind high significance ecosystem design define dbe specific responsibilities actors involved provide underlying knowledge capabilities relevant dbe authors surveyed relevant literature identify dbe roles responsibilities leading following ones table table dbe roles responsibilities dbe role responsibility driver sets common vision actors dbe provides manages digital platform optimizes entry barriers joining dbe acquires retain actors within dbe provides end products services customers end users collects raise end users events feedback ensures integrated end user experience aggregator collects combines capabilities resources within dbe end products services created modular producer complementor offering customers end users modular provides resources within dbe resources products services producer knowledge created producer capabilities comple using capabilities provides resources complement core resources within mentor dbe added value features customer buys end products services offered dbe end user consumes end products services offered dbe provides information events feedback dbe roles governor oversees actors within dbe defining normative artifacts decisions policies guidelines ethics related business concern dbe reputation surveys assesses dbe actors trustworthiness reliability solvency guardian worthiness analysis trust issues identification trustworthiness requirements dbe research approach study follows design science research aims developing framework trust management dbe types business networks – targeted design artifact need managing trust hence design artefact expressed trust identified one important aspects dbe design study paves ground developing trust management framework dbe article report initial cycle artifact design includes problem identification framework components design development theoretical view problem presented paper grounded case study focuses empirical view problem conduct structured analysis archetype dbe roles identify trustworthiness factors determine interactions roles resulting mapping table one framework components developed study following identified trustworthiness factors proceed identification trustworthiness requirements twr operationalized e implemented part interactive process supporting information system corresponding dbe roles end propose follow process trust analysis section process takes trust issues expressed specific dbe actors input leads identification corresponding twr support trust analysis use set generic twr demonstrate designed artifact examining trust higher education alliance dbe – case study section article provide results trust analysis modular producer role dbe particular show trust issues collected case trustworthiness factors application mapping generic twr specific contextualized twr defined role completeness elaborated set requirements well prioritization discussed study addressed following validation cycle dsr trustworthiness factors dbe dbe trust relationships formed among participants social entities characterized following several entities share dbe role entity fulfill several dbe roles ii within different interactions dbe role considered trustor one trusts trustee one trusted following ability integrity benevolence factors trustworthiness influence decision one dbe role trustor engage interaction another dbe role trustee impact ability integrity benevolence building trust vary depending context interaction specifically consider situation two individuals x respectively patient trustor physician trustee situation x playing cards together situation ability e medical proficiency qualification major trustworthiness factor x whereas situation rather integrity honesty compliance rules based third characteristic trust relationships dbe iii trustworthiness factors defined trustor trustee within interaction dbe depend context interaction dbe roles play within interaction defined table table social trustworthiness factors relationships dbe roles trustors subject rotnemelpmoc rotagergga noitatuper remotsuc ronrevog naidraug resu recudorp raludom revird dne driver b b b aggregator b modular b tcejbo producer complementor n b b eetsurt customer end user n n n n n governor b b b b b b b b reputation b b b b b b n guardian based previous studies dbes analyze trustor trustee relationships different dbe roles identify major social trustworthiness factors trust building roles results illustrated table cell j defines trustworthiness factor factors interaction two dbe roles role trustor role j trustee example third column table defines trustworthiness factors dbe modular producer mp role towards roles dbe mp interacts trustor mp trustor driver trustee interaction dbe important ensure consistent development evolution service product provided dbe b cell indicate three factors – ability benevolence integrity need considered designing processes digital platforms supporting mediating interactions trustworthiness factors mp – aggregator mp complementor interactions cells table include ability e g skills competences aggregator collect combine capabilities resources within dbe integrity e g aggregator honesty capacity adhere rules defined dbe integrity major factor mp – mp mp customer interactions cells table integrity mp refers perceived honesty delivering high quality service product customers integrity refers perceived honesty compliance rules trustworthiness factors mp governor interactions include benevolence b integrity related responsibility governor trustee oversee actors within dbe table benevolence b major factor mp reputation guardian interactions responsibility reputation guardian trustee survey assess dbe actors see table benevolence e g belief evaluation fair provides major contribution building trust interactions trustworthiness factors applicable mp trustor end user trustee interactions indicated n cell since definition mp role dbe rely become vulnerable end user note opposite true end user trustee trust mp ability produce competitive relevant service product reflected ability trustworthiness factor table cell rest table interpreted similar way analysis trust dbe table maps trustworthiness factors dbe roles identifies major social factors trust interactions among dbe partners support digital interactions dbe partners factors need contextualized refined specific twrs propose following process trust analysis dbes consider interaction two specific dbe actors roles play interaction identify trust issue trustor actor step context specific vary different partners dbe working approach empirical analysis dbe design operations interviews stakeholders identify trustworthiness factors trustee role related issue step context independent defined generic roles dbe c f table formulate twr express trustor expectations trustee social trustworthiness factors step using technical trustworthiness properties e system process qualities step considered context design working engineers dbe analyze existing dbe design requirements extracted context identified using generic reference list derived previous experiences literature contextualize twrs associating trust issues identified step step focusing specific requirements actors dbe whole twrs step refined following interviews actors representatives analysis usage data expected outcome process set explicit contextualized twrs provide reference social context identify operational functional design characteristic according trustor beliefs positively impacts trustworthiness trustee interaction two following section illustrate process case study higher education alliance dbe case study higher education alliance alliances europe past decade plethora university alliances domain higher education emerged alliances europe alliances focus mainly student mobility e g erasmus others aiming united europe university terms teaching research e g civis 4eu una europa latter type featured case study active participation authors one outlined alliances activities collaboration alliances strive actively promote fundamental rights solidarity democracy social cohesion cultural diversity active citizenship therefore business foundation alliances could condensed following knowledge square education research innovation civic engagement alliances typically co funded eu commission member universities alliances perform coordinate extensive number variety activities including development educational programs modules bachelor master phd levels student teacher researcher mobility educational scientific calls events thematic working nodes theme labs promotion related activities governance management digital infrastructure roles responsibilities dbe participants alliances conform concept dbe consist large number independent self organizing actors collaborating various business objectives dbe level well individually key aspect dbes actors acting complementary roles essential maintain dbe long term resilience table shows mapping common actors alliance corresponding dbe roles responsibilities table actors roles dbe alliance actor description role responsibility dbe dbe european financier governor control use fundings commission alliance reputation monitoring progress alliance guardian promoter eu forum university alliance member driver university member leads one european responsibility table driver university responsible faculty teacher academic staff modular develop teach course researcher participating producer curriculum universities node thematic entity aggregator propose course curriculum assign tasks modular producers monitor development lab forum universities compleme organize events conferences businesses citizens ntor seminars present curriculum etc meet steering administrative staff governor make decisions operative levels committee participating coordinate communications universities tasks universities consultative city regional governor make cooperation decisions council representatives would applied across citizens participating regions presidents member universities student council group student governor collect disseminate student representatives voices best interests different university students listens exchanges members proposes ideas alliance develop student person registered end user attend campus online courses studying take examinations course member university evaluation student first contact reputation provide information ambassador student every guardian alliance potentially interested member university students business regional organizations customer sponsor attend events member companies alliance provide guest lectures etc citizen regional citizens customer support co creation knowledge related curriculum content collaboration business communication alliance reputation encourage participation office representative office guardian stakeholders building ec envisioned university model trust analysis educational alliance section provide trust analysis modular producer role faculty teacher researcher alliance dbe sake brevity provide analysis roles paper following process trust analysis section illustrate trust issues identified interactions modular producer trustor roles alliance dbe trustees provide mapping trustworthiness factors dbe roles table next use taxonomy proposed reference formulate twr trustworthiness factors identified taxonomy associates ability integrity benevolence twrs derived literature finally contextualize identified twrs mp alliance summary analysis presented table modular producers mp alliance members teaching research staff responsible creating content educational programs course materials practical works projects etc delivering program end users creating common courses one challenges ensure alignment consistency uniform quality course modules among different mps therefore issue expressed trustor mp towards mps trustees concerned quality modules provided modular producers issue associated integrity mp role trustee table another challenge related aggregation dissemination reuse developed materials within common space ensured aggregator node trustee worried development common course follow established milestones deadlines issue associated integrity ability aggregator role table want make sure aggregator put competition another modular producers associated integrity concerned within common course content used modified without knowledge associated integrity concerned integration efforts evolution content upload update formatting ensured aggregator associated ability program developed mps also concerned running following example illustrates trust concerns towards driver university trustee concerned digital platform course provisioning communication students work without errors associated trustee ability towards complementor lab third party technology provider trustee concerned quality supporting services price e g virtual classrooms examination tools delivered complementor associated trustee ability towards reputation guardian communication office alliance concerned fair number students adequate background academic records attending course associated benevolence b reputation guardian issues identified column table associated trustworthiness factors column table formulate twr mp trustor towards dbe column table taxonomy twr proposed taxonomy associates social trustworthiness factors technical features solutions use twr source reference example issue associated auditability twr relevant twr identified need contextualized column table issue propose following contextualization auditability twr faculty teacher node must able validate quality class materials produced peers every faculty teacher demonstrate quality produced course materials note issues vary among actors playing dbe role e g different teachers alliance also shared roles dbe e g issue shared mp driver role process needs conducted dbe participants collect list issues requirements relevant trustor trustee interaction dbe table trust analysis alliance modular producers twr reference contextualized twr reference auditability trustor must able faculty teacher modular producer validate trustee compliance node must able validate rules e g executing audit quality class materials produced supervising examining execution peers fit program alignment traces supervising trustee process modules etc every faculty run time teacher able demonstrate quality produced course materials performance trustee must ensure node aggregator creates efficient distribution resources educational programs respect respect defined timeframe budget program calendar budget set compliance trustee adhere rules steering committee governor agreements regulations node acts according rules defined steering committee governor uses standard solutions e g digital integrity trustee must ensure correct portal delivered leading university timely execution activities respect driver contract process specifications node demonstrates program evolution steering committee informs students faculty teachers problems traceability trustor access faculty teacher faculty researcher information related provenance able access information physical information object accurately related modular producers trace source trace produced content transparency trustee workflow must node course development plan e g transparent documented trustee must workflow must transparent provide accessible non repudiable faculty teachers explicitly audit trail showing use change documented viewing data node must ensure overall accuracy integrity data trustee must ensure completeness consistency accuracy completeness consistency produced content entire life data entire life cycle cycle automation data processing trustee node must minimize physical must minimize physical maximize maximize digital processing course digital processing data materials enable students end interoperability trustee must show user access remotely capability work trustor node must able process store correctly integrate numeric content faculty teachers availability resources software digital platform student course components needed process activity management available execution available students faculty teachers content trustor trustee must accessible ensured designated university driver availability resources software resources software components components needed process activity needed course available execution available digital platform trustor university faculty teachers performance trustee must ensure lab complementor must ensure efficient distribution resources efficient distribution resources respect defined timeframe budget respect defined timeframe budget b accountability trustee held responsible steering committee responsible actions deny actions marketing dissemination authentication data trustor must able calls student inscription determine correctness reliability program reported data e g messages events faculty teachers must able determine correctness reliability reported data e g application admission ratio information students discussion conclusions trust critical enabler business interactions facilitating effective collaboration efficient resource utilization adaptive behaviors collective effort towards common goals business networks inherently socio technical systems require holistic approach trust analysis integrates social technical dimensions study attempts bridge gap dimensions incorporating subjective contextual nature trust dbe designs management principles identification analysis trust issues among participants dbe crucial task great impact dbe sustainability resilience must conducted upfront requires adequate enterprise modeling methods practices work proposed framework structured analysis trust among actors dbe focused implications supporting digital platforms pervading business interaction dbe setting consider proposed framework used support design dbe supporting digital platforms follows • list requirements aggregated per trustee role provides vision dbe expects given role • list requirements aggregated per trustor role provides vision particular role expects dbe • prioritization twrs identifying twrs frequently expressed • negotiation twrs identification minimal set twrs satisfactory particular dbe • identification assessment alternative organizational technical solutions cover set twrs study part overall design science research project aiming develop implement models methods resilient dbe within project defining artifacts needed incorporating trust aspect dbe design identification mapping social trustworthiness factors dbe roles process trust analysis serving deriving twrs specific ecosystem design proposed artifacts demonstrated validate usability case alliance typical example dbe high autonomy self organization cost balance principles concerning limitations study performed initial cycle development – problem analyzed sufficient detail establish requirements artifact initial version developed validated artificial setting real life case gives input assess validity artefact broad terms systematic evaluation naturalistic setting also needed immediate next work comprise refinement framework experimentation example dbes assess possible improvements purpose evaluation framework artificial setting followed improvements framework guidelines use order integrate framework method dbe design",
  "2024-BRLG": "introduction age data knowledge essential factor increases capacity make best decisions north kumta data visualization remains difficult task knowledge extraction numerous visualizations available business application face challenges andrienko et al padilla et al engebretsen kennedy requires perfect understanding goal achieve manipulated data visualizing text corpora cross domain application interest information systems digital humanities ja¨nicke et al improvements visualization lead better analysis multiple types texts like historical newspapers menhour et al even poetry de sisto et al however work done visualize relevance documents based topics topic modeling also contributes texts analysis research orientation information retrieval field uncovering latent text topics modeling word associations hambarde proenca topics simply list words share similar theme either word strongly directly expressing theme collection words illustrates abstract theme semantic links alone would make sense multiple topic modeling methods exist alghamdi alfalqi kherwa bansal usually consider documents bag words order words important occurrence document important recent advances natural language processing nlp also introduced neural networks combined traditional methods allowing capture context words within documents reusing analyze newer documents paper explore use formal concept analysis fca ganter wille instead traditional topic modeling methods propose visualization main keywords corpus documents relevance forcebased graph fca known viable text mining method carpineto romano good candidate multiple applications knowledge field poelmans et al fca used conjunction topic modeling method akhtar et al instead strength fca resides fact analyzes relationships within data produces lattice used calculating useful measures like similarities paper organized follow first explain main methods currently used topic modeling well topic relevance visualizations second present processing pipeline input documents output map present three experiments text materials used topics relevance finally discuss results conclude related works topic modeling analyzing documents implies creating statistics used terms term frequency inverse document frequency tf idf salton calculates ratio frequency term total number documents documents therefore seen ratio words independent ordering like bag words tf idf exactly topic modeling method shows importance uniqueness terms within corpus latent semantic analysis lsa deerwester et al transforms documents latent semantic space multiple outputs analyzed main method behind lsa singular value decomposition produces three matrices based parameter k given user matrix terms per k features matrix k features per k features matrix k features per documents multiple analyses done matrices case terms per k features one important allows us know well term linked feature fact represents latent topics one problem induced lsa manage polysemy term used entity document homonyms like synonyms even various forms word produce inconsistency missing context document standardization input like stemming even lemmatization partially leverage problem probabilistic latent semantic analysis plsa hofmann upgrade lsa introduces probabilistic point view building generative model text corpus topics scattered within documents probabilities help find terms compose plsa relies aspect model probabilities terms documents latent topics mixture decomposition obtains similar results singular value decomposition allowing plsa also build three matrices lsa latent dirichlet allocation lda blei et al also generative probabilistic model aims model text corpora aims improve plsa mixture decomposition using hierarchical bayesian model lda allows finding topics words within documents case text corpora also usage confidence plsa probabilistic generative model multiple domains lda combined bidirectional encoder representations transformers bert devlin et al order increase quality results peinelt et al george sumathy berts collection pre trained neural networks designed help researchers nlp considering words neighbors nature berts produce list topics used generate summary similarly berts noted generative pre trained transformers gpt brown et al achieve numerous nlp tasks still also share drawback explaining weights within neural network build answers correlated topic model ctm blei lafferty derived lda uses another distribution order better capture topics relations within documents indeed document concerns theme usually talks neighbor topics text travel might talk tourism beaches airplanes probably fighter jets topics uncorrelated lda dirichlet distribution whereas ctm thanks logistic normal distribution topics correlated present links one another presence topic triggers possibility finding one multiple topics ctm also proposes visualization topics topic represented bubble words bubble linked correlated topics visualization topics relevance presentation topics important reading list might confuse human list forces order reading always best one depending context visualization topics usually made tag clouds singh et al lee et al convenient shows terms whole block visualizations like singh et al gre tarsson et al show distinction topics terms composing however document used corpus irrelevant contains many irrelevant parts results might altered without user informed addition document must deeply reviewed find discrepancy work done explicit relevance documents one another based topics assa et al presents relevance map topics keywords case web search queries proposal uses dimension reduction create 2d map gravitational forces placing nodes similarly vibe olsen et al olsen et al variants ahn brusilovsky create points interest poi act precisely like topics around documents placed based relevance main drawback highlight important common words topics places resources based relevance topics found fortuna et al proposed map terms documents based multidimensional scaling mds methods terms documents placed two dimensional map background color varies based density main drawback contribution difficulty getting clear overview documents terms newman et al authors proposed topic map studying topic modeling 2d projection first compare three topic modeling methods end using lda next compare three methods projection namely principal component analysis pca local linear embedding lle force directed layout fdl best topic map presents documents nodes colored important topic position depends relevance one another however authors concluded evaluation visualization complex could made human judgment addition also stated maps dozen documents probably accurate valuable understandability navigation human topicviz eisenstein et al proposes visualization documents topics nodes force directed layout importantly interaction user topic modeling method used lda user pin topic nodes workspace making documents float based relevance topic map allows one distinguish document relevant topics based position user also pin document nodes making topics float visualization particularly interesting document topic nodes pinned allowing show relevance however user must pin nodes order see relevance based number detected topics deciding pin topic see documents relevance better might difficult paperviz di sciascio et al dedicated tool researchers paper gathering step offers multiple views multiple contexts tree hierarchy search queries tag cloud frequent terms strength relationship documents search query collection references management main strength paperviz completeness user interface visualization pipeline formal concept analysis visualization pipeline comprises two main phases see figure semantic pre processing documents analyzed order produce occurrence matrix terms per documents structural analysis matrix analyzed order create graphical representation relevance globally pipeline relies natural language processing nlp methods first phase formal concept analysis fca methods second phase semantic pre processing semantic pre processing phase aims extract important terms concepts document gather within matrix representing whole text corpus phase composed steps follows pi selection documents user user selects documents analysis comparison two requirements must fulfilled best results document must enough content content must mainly textual pi extraction texts document transformed regular flat text file step relies optical character recognition ocr methods experiments used pdftotext1 ocr pi cleaning extracted texts text cleaned order increase quality reduce size typically removing useless spaces artifacts ocr would created eventually stop words experiments 1https www xpdfreader com pdftotext man html figure main steps pipeline used treetagger schmid schmid custom list words keep pi disambiguation cleaned text transformed list named entities resolving polysemy synonymy problems advanced nlp methods required task experiment used babelfy moro et al understands multiple languages calculates three scores recognized named entity named entities also transformed unique references babelnet navigli ponzetto allowing us manipulate exact named entities documents whatever input languages figure formal concept analysis pii sub steps pi filtering terms irrelevant named entities removed based coherence score attributed babelfy previous step experiments require coherence score least keep named entity score empirically chosen removes way irrelevant named entities relevant ones structural analysis structural analysis phase comprises two steps calculate metrics order produce mutual impact graph showing relevance documents pii formal concept analysis first step divided five sub steps see figure objective produce mutual impact matrix terms documents occurrence matrix order evaluate relevance documents • normalisation occurrences terms per documents transformed proportions order reduce length disproportions documents absolute values converted percentages per line thus documents treated equally • transposition matrix transposed order change point view documents characterized occurrences terms terms characterized appearances within documents • binarisation strategy building lattice requires formal context words binary matrix multiple strategies binarization exist also called refinement strategies jaffal et al case use simple one direct strategy transforms values keeps • lattice construction formal context representing terms within documents used building lattice formal concepts belohlavek formal concept node containing objects attributes least one case objects terms attributes documents • metric calculus lattice analyzed mutual impact jaffal et al metric cal culated comparing appearances couples terms documents within formal concept mutual impact shows strong relationship term document bond calculated term document formula mi j formal concepts containing j formal concepts containing j represents term j represents document output mutual impact matrix value representing bond term document pii construction mutual impact graph final step objective visualize map terms importance within corpus well documents relevance visualization uses mutual impact matrix adjacency matrix produces graph terms documents used gephi bastian et al forceatlas first version spatialisation algorithm nodes moved find optimal position thanks attractive repulsive forces nodes repulsing edges attract nodes based values edges input format visualization bipartite graph set nodes represents documents another set represents terms presented figure nodes documents colored grey linked numerous nodes terms unlike term nodes colored based number neighbors warmer color node term linked different nodes documents focusing nodes terms find terms every document center map terms fewer documents scattered around terms present one document forming specific groups document far central set central set terms fact global view text corpus keywords focusing nodes documents visually see relevance documents within corpus checking close documents central set terms experiment scenarios evaluation proof concept elliott realized specific scenario check pipeline validity properties prototype developed2 2https github com metalbobinou crea phd figure output map terms documents used three proof concept demonstrations first case expects visualize content php courses mutual impact graph visualized check corpus main keywords documents relevance second case introduces java course corpus validity mutual impact graph checked comparing first second cases java course irrelevant specialized php third case presented order check correcting document impacts results regular case php courses french processed pipeline courses present web development html php mysql beginners denoted c1 c9 following figures courses made slides c1 c2 c4 c7 c8 c9 made regular texts c3 c5 c6 java course cja text format later introduced check mutual impact graph behaves errors appear course also french text format third experiment works courses text format therefore introduced php courses text format c11 c15 c17 c19 avoid disproportion keeping close number input documents cases general view corpus content documents processed phase corpus transformed matrix occurrences mutual impact graph generated using direct strategy step pii figure shows terms nodes colored following cold warm schema red nodes terms occurring documents orange nodes terms occurring documents minus one etc regular case terms red nodes post nombre number me´thode post post method fichier file code donne´e data langage language site php navigateur browser terms typical course web development php extended terms orange nodes like base de donne´e database even foreach also typical website php uses database terms present fewer documents still half corpus yellow green nodes also typical web development nearly session mysql utilisateur user figure central set terms mutual impact graph regular case figure central set terms mutual impact graph java case figure java course added corpus terms red nodes figure except php becomes orange node behavior expected java course discuss php therefore one document include terms colors still relevant mainly concern client server programming oop vocabulary similar topics noted another color introduced order show additional document present nearly terms green first case light green entire graph terms green repulsed dark green nodes meaning missing one document however majority terms first case still present second case number document edges relevance documents figure relevance documents regular case figure relevance documents java case figures represent relevance documents two cases regular case php courses java case additional java course relevance visualization also produced mutual impact graph except focus mainly grey nodes representing documents regular case php courses figure documents slide format closer central set text ones java case figure java document cja distant central set noted c6 distant central set cja discrepancy explained fact c6 document contains php course also reports students projects half document reports discuss various business problems require website online shoe store online music store etc therefore document exactly pure php course like others order test mutual impact graph reacts document corrected compared multiple cases courses correcting one document c6 written three parts nearly amount pages regular php course reports students projects advanced php course experiment used php courses text format order avoid effect mixing slide text formats corrected document c6 removing students projects first later advanced chapters experiment also done twice without java course order better view effect correction corpus without irrelevant course figure relevance text documents student projects figure relevance text documents c6 intact regular case without modification figure c6 outlier regular java cases java case cja sole document nearly far c6 removing stu figure relevance text documents regular case dents projects c6 figure becomes one student projects advanced chapters closest documents central set cases indicating became way relevant corpus previously java case cja becomes outlier keeping irrelevance finally advanced chapters also removed c6 figure becomes closest central set java case second closest regular case c11 c15 become outliers regular case java case cja c11 outliers figure document c6 becomes closer central set thanks corrections noted cja stays outlier every case documents move away bit therefore corrections show improvements positioning c6 keeping irrelevance cja discussion mutual impact graph regular case figure set terms present documents center graph shown red nodes relevant content text corpus also produce clear summary main keywords ring colors around central set adds terms relevant corpus java course introduced figure terms documents nearly php bit repulsed java course also mainly talks programming partially web development dedicated frameworks results nearly unchanged expected behavior mutual impact graph terms lets user quickly get idea subject keywords composing corpus used quickly discover new academic field find keywords best describe another usage graph would help build book index keywords highlighted author selects words keep remove concerning relevance documents figure java course distant one c6 contains lot unwanted content first experiment behavior perfect current case teacher would like use existing documents warned c6 cja checked precisely order detect content relevant even text documents distant slide documents irrelevant ones far away allowing user measure relevance visually third experiment relevance document c6 greatly improved corrections applied keeping irrelevant document cja far away must noted shape graph changes reflects relevance document relating general relevancy whole corpus mutual impact graph picture corpus whole graph relevance one documents one documents multiple use cases derived mutual impact graph graph would help users select best documents one topics remove irrelevant ones another usage would teacher compare course existing ones even research articles check close state art global results show fca mutual impact measure highlight corpus main terms even show documents relevance create list topics calculate probability term included topic like lda reflect importance term whole corpus behavior expected nature fca differs statistical data analysis emphasis recognizing generalizing structural similarities set inclusion relation data description mathematical manipulations probability distributions carpineto romano however acknowledge babelfy participate actively process topic modeling recognizing named entities evaluating relevance portion text must noted construction formal context also filters terms fca formal context construction metrics calculus babelfy must used together least fca entity linking tool conclusion paper proposed visualization pipeline textual corpora analysis based fca instead usual lda topic modeling step mutual impact used within fca order produce matrix force based graph algorithm pipeline produces map used two ways • main keywords placed order importance allowing reader quickly get idea topics contained corpus • documents placed based relevance keywords found allowing reader see eventual discrepancy chosen texts map presents visualization corpus whole removing document impacts visualization absence node topic modeling step work texts evaluate claims presented case study multiple php courses intruder java course also programming first map displayed important keywords variations without java course one php courses containing half text scope topics corrected showing significant upgrade output consider fca exciting method topic modeling expect try metrics lattice order find possible usages multiple usages combinations already proposed poelmans et al expect use conceptual similarity metric jaffal et al even precise combination terms also deeper comparison lda newer methods like neural networks might interesting construction results rely probabilities perfectly transparent thanks set theory behind fca",
  "2024-HRH": "introduction since satoshi nakamoto released bitcoin whitepaper new era decentralised systems began initially peer peer electronic cash system blockchain technologies bct evolved significantly ethereum project introducing smart contracts decentralised autonomous organisations daos supporting enterprise use cases yet nakamoto initial vision rooted cypherpunk movement aligns anarchist idea decentralised society anarchist movement championed thinkers like kropotkin bakunin malatesta proposes principles aimed avoiding exploita tion fostering harmony however principles never imple julien hue irina rychkova nicolas herbaut mented scale daos embedding anarchist principles appeal activists tech nologists communities seeking autonomy offering transparent secure efficient ways manage organisations without central authority liq uid democracy ld proposed early 21st century combining elements direct democracy representative democracy direct democracy central anarchist principles faces issues like voter fa tigue scalability ld addresses issues allowing voters either vote directly delegate vote others thus ld helps implement anarchist principles daos reducing hierarchical control promoting cooperative governance systematically reason alignment daos using ld anar chist principles turn enterprise architecture ea enterprise model ing em frameworks traditionally ea em frameworks demonstrate alyze alignment technology organisational strategy pro vide tools methodologies model enterprises align business processes technology however little research addresses alignment socio political technological artifacts decentralised organisations like daos work address following research problem socio political artifacts decentralised organisations addressed enterprise mod standard1 eling use togaf explicitly reason processes decentralised organisational governance grounded anarchism specify business application technology layers daos ld using archimate use design science research methodology create architectural artifact using togaf adm archimate remainder article organized follows section discuss main concepts used study present related works section present research methodology discuss created artifacts section section empirically evaluate alignment artifact anarchist society principles provide recommendations adapting ea frameworks decentralisation section provide conclusions background smart contracts daos smart contracts first introduced nick szabo protocols validating conditions legal contract parties exe cute control document events automatically according agreement terms embedded within blockchain smart contracts immutable transparent daos organisations operating based rules encoded smart contracts function without human intervention leveraging blockchain transparency immutability decentralisation key characteristics daos include decentralisation operate without centralized authority distributing https www opengroup org togaf alignment dao socio political principles decision making power among members autonomy smart contract code gov erns operations executing decisions transactions automatically transparency transactions recorded blockchain making auditable one programmable governance rules protocols embedded within smart contract automate governance community driven governed members hold ing tokens represent voting power decisions made consensus daos various applications decentralised finance defi col lective ownership investment funds charitable organisations decentralised governance categorized algorithmic daos defer entirely software structure coordinate social interactions par ticipatory daos emphasize active community participation decision making work focuses participatory daos specifically decentralised au tonomous communities member one vote decisions require majority plan use liquid democracy decision making process system liquid democracy liquid democracy combines elements direct democracy representa tive democracy ld voters either vote directly issues delegate vote trusted party delegation continue multiple levels vote reaches well informed party process known meta delegation additionally voters recall vote time mem bers choose topics vote directly delegate issue based delegation allows voters delegate vote specific topic voting directly sub topics ld addresses issues direct democracy voter fatigue uninformed voters representative democracy lack accountability e g representative democracy elected members handles subjects incompetent others voting subject member know specifically vote lution vague idea also mode important win vote taking right decision aligned social body minority rule e g organisation prefer stability coherence choices entrenched minority take power ld notably used pirate party germany experiment failed combined representative democracy issues like concentration power among agents emergence super voters remain concerns address proposals include multiple delegations options e helps avoid super voter allowing users specify several potential delegates instead one various criteria dynamic redistribution e system ability distribute votes influence among delegates maintain balanced representation avoid concentration votes algorithmic balancing e using using mathematical models computational techniques optimize delegation process distribute voting power equitably work explores use ld daos enhance decentralised governance julien hue irina rychkova nicolas herbaut ea frameworks enterprise architecture defined underlying principles standards best practices according current future activities enterprise conducted according fischer ea involves fundamen tal organisation system describing system components relationships interaction environment principles guiding de sign evolution governing design implementation development architecture ensuring alignment business goals several ea frameworks tools widely acknowledged literature open group ar chitecture framework togaf comprehensive method set tools developing enterprise architecture archimate modeling language part open group used model enterprise architecture zachman framework defines 6x6 matrix providing structured approach defining enterprise multiple viewpoints feaf federal enterprise architecture framework originates us federal government integrates busi ness aspects enterprise gartner framework focuses ea process development governance explore whether daos using ld achieve anarchist society organ isation use togaf framework archimate modeling language model verify system first togaf widely adopted battle tested framework helps define ea multiple viewpoints comprehensive structured methodology develop ea archimate bring modeling capabilities complement well togaf adm related works section conducted literature review covering articles added pre identified relevant articles reviewing iso lated related works classified two clusters ea socio political artifacts e government articles ea bc dao articles cluster subdivided interoperability integra tion articles b architecture modeling articles c dynamic ea plan ning article systemic design articles first present articles related cluster sub category modifies togaf adm clude government strategic objectives phase security architecture customized phase sub category develops structured approach sgea defining e government ea scope proposes national ea implementing e government interoperability framework uganda ex plores ea tools aid regulation legislation compliance exam ines ea tools public sector achieve business ecosystem maturity using scopus query string title abs key enterprise architecture e government teroperability title abs key decentralized autonomous organisation blockchain gov ernance title abs key business process modelization enterprise architecture title abs key enterprise architecture digital ecosystem title abs key requirements enter prise architecture frameworks title abs key validation enterprise architecture frameworks qual ity title abs key decentralized governance togaf archimate title abs key liquid democracy anarchist principles blockchain title abs key enterprise modeling title abs key enterprise architecture title abs key blockchain decen tralized autonomous organisation dao pubyear alignment dao socio political principles discusses e government architecture indonesia using togaf service oriented architecture sub category b presents smart campus sys tem blueprint using togaf adm adapting togaf specific domains modeling socio political artifacts next discuss cluster starting sub category b explores bc potential enhancing business value creation particularly global supply chains using archimate models examines ea approaches especially archimate design bc based applications ad dresses gap enterprise engineering modeling methods blockchain models proposes knowledge bc securely managing tracking knowl edge organisations uses ea tools developing digital twins dry ports archimate discusses integrating bc enterprise modeling mutual support bc technology modeling techniques focuses structuring implementing bc enterprises emphasizing necessary layers robust bc platform develops method strategic analy sis integrating business processes infrastructure focusing goalml saml itml sub categroy c discusses ea strategic tool aligning business incorporating case based reasoning bc knowl edge storage sharing sub category uses ea tools address bc interoperability issues proposes architecture integrating bc health information exchanges hies enhance healthcare data management exchange finally sub category discusses systematic design bc based applications integrating business perspectives analyzing literature reveals gap work aims fill ea bc applied socio political artifacts e government research methodology address research problem employ design science research method ology dsrm consists six steps problem identification motivation objectives solution design development demonstra tion evaluation communication merge demonstration evalu ation steps better address research questions problem identification motivation dao provides set mechanisms implement decentralised governance principles liquid democracy evidence organisations form support socio political mechanisms including prin ciples governance processes grounded anarchism choose enterprise modeling enterprise architecture disciplines address problem align ment traceability socio political artefacts decentralised organisations rq1 motivates following research questions togaf archimate used model socio political artifacts within decentralised rq2 ganisations togaf archimate adapted address rq3 socio political artefacts decentralised organisations ways ld daos used achieve organisation anarchist societies objectives solution establish key objectives design architectural ar tifact using togaf adm archimate model daos ld ensure julien hue irina rychkova nicolas herbaut artifact aligns anarchist society principles validate artifact abil ity support decentralised governance scale want ensure artifact build aligned anarchist society principles use anarchist society principles elicit literature design artifact design development develop artifact using togaf adm archimate architectural framework employing modeling languages bpmn sysml uml design motivation business application technology layers assure artifact encapsulates anarchist society principles demonstration evaluation demonstrate evaluate artifact applying practical use cases based anarchist society principles verify alignment conduct scenario analysis demonstrate artifact supports decentralised governance use analytical evalua tion described hevner et al evaluate artifact answer research questions precisely architecture analysis communication documented research process findings recommendations present result paper artifact design design principles rationale development approach work adopt togaf adm iterative process developing architecture content transition existing target architecture architecture governance focus following adm phases preliminary phase describes preparation initiation activities required create architecture ca pability definition architectures principles architecture vision describes initial phase architecture development cycle business ar chitecture describes development business architecture sup port agreed architecture vision information systems architecture describes development architectures support agreed architec ture vision technology architecture describe development technology architectures support agreed architecture vision preliminary phase conduct literature review anarchist literature derive anarchist society principles various sources including research articles books essays results presented table artefact strong assumption present believe participants follow commit principles use principles later phases guide design artifact preliminary phase study consider organisation grounded dao ld principles decision making process model organisation using blockchain main technological babckbone within organisation team alignment dao socio political principles anarchist society principles table principles voluntary association direct democracy consensus decision making mutual aid decentralisation autonomy self management non hierarchical organisation commons communal resources architects implements togaf follow principles decentralisa tion ld thus togaf implementation adopted according principles use dapp smart contracts implement ld principles particular voting process choose nft technological solution determine collective ownership organisations goods services etc using togaf adm archimate model organisation architecture vision architecture vision phase use anarchist society principles table define vision organisation present principles traditional centralized organisations societies putting forward main criticism advanced anarchist thinkers principles target decentralised organisations societies table table illustrates anarchist thinkers time viewed state centralized societies especially collusion capital state understood minority rule discussed term contextualized within specific conditions era motivation layer layer table used represent current state centralized organization archimate motivation assessment con cept apply modeling language define actors goals tasks dependencies literature identified three actors volunteer associ ation delegated figure shows fragment goal diagram illustrating volunteer participation association dependencies federa agents3 tion ld blockchain infrastructure smart contract agent actor concrete physical manifestations human individ ual organization department goals derive principles table several agents share goal tasks associated goal realization based anarchist literature analysis preliminary phase goals tasks blockchain smart contract agents specified following dependencies agents goals tasks also added e g federation full goal model available https github com edoc2024 paper julien hue irina rychkova nicolas herbaut architecture visions table traditional centralized organisa decentralised organisa tion societies tions societies hierarchical centralized power decentralised self governance structures economic inequality exploitation collective consensus decen tralised decision making competition cooperation voluntary association mutual aid lack autonomy direct action self management involves self management prac tices individuals collectives take initiative responsibility managing tasks projects state capitalist collusion minority rule autonomy independence resistance change innova restorative justice tion capitalist mode production resists changes threaten existing power structures profit margins even changes could benefit society whole environmental exploitation equitable resource distribution continuous learning adaptation goal diagram architecture vision fig alignment dao socio political principles association depend liquid democracy consensus federation depends blockchain enabling dao data storage smart contracts depend blockchain execution using figure principles table layer4 table define archimate motivation archimate drivers link sessments goals requirements principles stakeholders isolating five drivers community need social expectation organizational culture technology advancements regulations use literature analysis refines motivation layer including items expressible diagram requirement sustainable practices business architecture business architecture phase defines organisation business processes use bpmn model business processes main business processes unified process voluntary association mutual aid self management decision making process using ld equitable resource distribu tion process paper present process diagrams unified process voluntary association mutual aid self management unified process voluntary association mutual aid self management define process activities constraints using run federation process diagram shows members organize within fed erations networks autonomous groups based mutual aid volun tary association non hierarchical organization see members establish goals principles structure coordination operating consensus creat ing associations meet needs describe run manage associations following anarchist principles collaborative initiatives project process conduct association operations associations voluntary cooperative groups pursuing common goals outline global lifecycle associations strategies managing define three main forms association processes run community engagement project address ing issues like education healing run awareness advocacy project promoting ideas run economic project providing goods services processes facilitate organizing society without central authority adhering anarchist principles business architecture layer integrate business processes including present pa archimate6 per business architecture layer unified process voluntary association mutual aid self management organisation complete motivation layer diagram available https github com edoc2024 paper extra bpmn diagrams https github com edoc2024 paper tree main bpmn complete business layer found https github com edoc2024 paper julien hue irina rychkova nicolas herbaut run federation process run community engagement projects process redistribute association r e u rc e n context changed dev b e n e f f ro th e implement association among communication evaluate education colla b r ti v e p r jects embers n adapt outreach n ti iv e es coor ation yes b l iz g plan n g p r oject u r c e n l g ic p r c p n organize conduct conduct association federative meeting around community make benefits structure current topics vote implementing consensus n n ing dec n king establish th e p r j e c e e ng common principles objectives collaborative initiatives project process run awareness advocacy project process e n f r e c r e te e th e ci ti r e r b u e c l l f r r e u r c e n c n e x c h n g e com n n e eds h e v ol u n e e r b e n e f f r th e yes g ls ss ci io n association among members yes r e e f n e h e c r e n g c h n g c u c r e g e n e n e e f r io n l c h n n e l f r yes co u n ty r e p n e h e e x p n n identify resources p r n al dis ri b u n nd meeting around skills materials external changes materials engagement financial resources needs association goals make benefits yes conduct r g n z n g c n e n u c ti n e v e n r de c n k ing p e r io n need goals c n e e n g still exists conduct association operations run economic project process define c e c v e g ls n e b l h r l e n r e r b u e p r n c ip l e w h n h e r e p n b l e e th e ci ti r e u r c e n r g n z n r l e r ta n v id c n e x c h n g e b e n e f f r h e f r l h e r r c h c n n g members yes c u n e n g agement run comm u n e ngagement p r j e c ts e c u r n g p r j e c ts e l p g res u r c e nd bu e r ps f u n g p l n yes wh ic h k f n e c e r sharing association assocation economic initiatives u u liz g make benefits run economic projects reso ur c e w h p e r n g h e association c n e n u v e n de c n k ing n g n g e e n g run awaren e ss n advocacy g r w h p ro je ct awareness advocacy campaigns bpmn unified process voluntary association mutual aid self fig management core uses ld process decisions federation association levels equitable resource distribution process ensures fair resource distri bution raw materials dwellings levels paper present simplified version unified process voluntary association mu tual aid self management see figure observe run federation process achieves decentralised federation organisation business service voluntary association mutual aid self management business services realized collaborative initiatives project process embeds subprocesses described figure application technology architecture layer design application technological layer use detailed sysml block definition diagram shown figure make technology choices due need study ld dao enable dao blockchain used technology layer blockchain must support turing complete smart contracts construct model use goal diagram see figure white actors identified anarchist ld literature analysis blue elements archimate application layer representing software components enabling business processes motivation goals federation alignment dao socio political principles business layer person volunteer member decentralised federative organisation voluntary association self management mutual aid n e e f r e n f h e run federation process ne w f e e r ti fe e ra n federation someone identify records need goal start association lifecycle end collaborative initiatives project conduct association operations c ion process process l e c c l e association e b e r e n c u n ty c r n e e f r e n f r e n g g e e n c u n w r e n e p r je c n e e f r e n f r e n g g e e n vo c c p r je ct n e e f r c ti e c n ic e c n c w r e n e n e n th e p r j e c p r j e c r e c r v c c p r je ct p ro j e c run co u n e n g g ements run aw r e n e n dvocacy p r oj e c p r c e p r j e c p ro c e ss run economic project project process simplified archimate model unified process voluntary association fig mutual aid self management bdd package system detailed system block definition diagram block block data data association goal association block data strategies data actor data association role person data block block component component association goals association management strategies management actor actor actor actor member delegated delegator volunteer participates block component association roles rotation component b l c k b l c k b l c k b l c k c p n e n c p n e n c p n e n co u n e e ing c u n e e g fed e r io n ata asso c n h b oard r e q u e e n n g e e nt b l c k b l c k b lo c k c p n e n c p n e n volun te e r n g e ment f e e r n economic association block association dashboard component participates community meeting validation planning block block block b l c k b l c k c u n e n g g e ent c p n e n f e e ra ti n oc io n c n b l c k v n g e l e g io n c p n e n e l e g n ta c p n e n co u n e e ing n g e e n b l c k b l c k b l c k b l c k c p n e n c p n e n liqui e c r c v oting u e r l e g l e x advo c c n w r e n e ss e p r p l p r p n g c n block b lo c k frontend block de c e n tr l iz ed block c p te n device autonomous equ ta b l e r e u rce organization mobile distribution block block b lo c k da provider block p h ic l limite r e urces device block block data device b r w e r c p n e n smart contract b l c k b l c k b l c k u e r e n c p n e n c p n e n c p n e n n g e e n u rc e u g es lim e r e u r ces r e u r c e b lo ck r c k n g b lo c k n g e e n l l c n block c h stem b l oc k p h ic l e v ic e miner b l c k c h e block dao member data block component component block limited resources limited resources data access validation access request ressources block allocations data block block execution client consensus client blockchain pattern block data ressources level data block block oracles reverse oracles block block block block block execution state tx mempool blobs data beacon state beacon chain detailed block definition diagram system fig julien hue irina rychkova nicolas herbaut association derive dao block built ld component commu nity meeting component user identity management component equi table resources distribution component components support previously described business processes green elements archimate technology layer describe blockchain system provide comprehension including execution consensus clients blockchain patterns like oracle verse oracle user interaction smart contract triggering implemented simplification bdd system archimate see figure application layer federation association community management management meeting service service service association strategies ld voting system data association service goal data federation association user identity c ia ti n management r le service application resources interface management service federation data delegation data community meeting management proposal liquid data ressources user interface democracy allocations decentralised voting system data autonomous equitable dao member user identity ressources resource organisation data level data management distribution limited ressources data technology layer network smart contract ui server blockchain provider miner blobs data consensus machine blockchain client pattern beacon state beacon chain execution client tx mempool reverse execution state oracle oracle simplified archimate model application technology layers fig evaluation evaluation strategy assessing well designed architectural artifact aligns anarchist society principles goals principles evaluation ob alignment dao socio political principles jectives validate alignment e make sure every elements motivation layer linked elements business application technol ogy layer layer business supported realized application layer application layer supported realized technology layer architectural artifact anarchist society principles asses effectiveness artifact supporting decentralised governance using daos ld evaluation conducted using archimate enterprise model ac cording analytical methods described therefore follow steps map principles architecture elements using archimate view point able highlight alignment ensure principles goals requirements supported architectural artifact scenario based analysis develop hypothetical scenarios test architec layer7 ture handles specific challenges use motivation describes requirements principles goals evaluation criteria measures goals principles alignment traceability realization8 using archimate viewpoint requirements see business application technology layers used support motivation layer sum alignments tables better understand recommend first look figure core layers business internal business internal motivational business business business object business event business service active structure interface layer elements behavior element element realizes realizes realizes serves serves serves realizes realizes serves serves serves application application internal internal application application application data object application event activ e tr u c ture realized service interface layer requirements principles behavior element e le e n realizes realizes realizes realizes serves serves serves goals realizes realizes realizes serves serves serves technology technology internal technology technology technology internal artifact technology event service interface layer activ e tu r c ture behavior element e le e n archimate togaf layers alignment fig table merge transparent governance conflict resolution mechanism rely business application techno logical elements thing community engagement collaborative projects finally sustainable practice covered directly architectural artifact requirements apply individuals behav ing system decide respond members needs motivation layer dound https github com edoc2024 paper complete view found https github com edoc2024 paper julien hue irina rychkova nicolas herbaut goals alignment traceability table goals business layer application layer technology layer decentralised federative community meeting service organisation federation management service mutual aid blockchain network non hierarchical resources management service voluntary association elements organisation liquid democracy voting system self management supporting network application run federation process supporting services subprocesses community meeting service decentralised federative federation management service blockchain network organisation resources management service elements decentralisation run federation process liquid democracy voting system supporting network subprocesses application supporting services resource sharing resources management service blockchain network equitable resource business service application elements distribution equitable resource supporting service supporting network distribution process federation management service mutual aid business service association management service blockchain network collaborative resources management service elements mutual aid initiaves project process application components supporting network subprocesses process supporting services self management association management service business service community meeting service blockchain network autonmy amp collaborative liquid democracy voting system elements self management initiatives project process applications supporting supporting network subprocesses services process voluntary association business service association management service blockchain network collaborative initiatives applications elements voluntary association project process services supporting supporting network subprocesses process motivation layer requirements alignment traceability table requirements business layer application layer technology layer transparent achieve consensus service liquid democracy voting system blockchain network governance consensus user identity management service elements conflict resolution decision making community meeting service supporting network mechanism liquid democracy process community meeting service community federation management service blockchain network engagement collaborative initiatives resources management service elements collaborative project process liquid democracy voting system supporting network projects application supporting services resource sharing resources management service blockchain network equal access business service application elements resources equitable resource supporting service supporting network distribution process principle used association created ensure sustainable prac tices finally principle decentralised organisation applied system well liquid democracy principle scenario based analysis examine five scenarios involving architectural artifact federation management member needs deciding direction association resource sharing among federation conflict resolution associ ations emergency response resource reallocation first scenario member submits need request federation analyzes drafts proposal uses liquid democracy process consensus approved new association formed address need roles assigned outcomes alignment dao socio political principles include effective need fulfillment transparent inclusive process following anarchist principles scenario involve following principles voluntary association direct democracy consensus decision making second scenario association needs change direction feedback gathered ld system aids building consen sus refining goals developing action plan roles responsibilities assigned progress monitored adjusted needed outcomes clear strategic direction adherence anarchist principles scenario involve following principles direct democracy consensus decision making autonomy self management third scenario resource requests evaluated within federation resources categorized limited resources allocated based priority outcomes effective resource use fulfillment members needs scenario involve following principles commons communal resources mutual aid fourth scenario conflict reports discussed federation meeting resolution proposal submitted ld process approved resolution implemented outcome reviewed next meeting outcomes include fair conflict resolution process trans parency scenario involve following principles direct democracy consensus decision making non hierarchical organ isation fifth scenario emergency prompts rapid assessment reallocation resources ld system prioritizes emergency needs reallocating resources non essential projects outcomes efficient emergency response improved system resilience scenario involve following principles decentralisation autonomy self management scenarios demonstrate architectural artifact supports anarchist society principles effectively handling challenges decentralised organisation discussion rq1 key findings follows togaf adm archimate effectively model socio political artifacts decentralized organizations structuring model motivation layer covering goals requirements principles supporting business application technology layers could visualize manage alignment anarchist society principles fi nal steps togaf adm opportunities solutions migration planning implementation governance architecture change management implemented meant bringing architecture real world focus constructing architecture verifying align ment however steps carried using reference architecture rq2 found minor areas improvement archimate gaf adm example translating technology layer figure archimate required compromises like making miner central technology layer rather blockchain system issues mainly syntactic julien hue irina rychkova nicolas herbaut semiotic overall modeling decentralized organizations feasible archi rq3 mate togaf adm current forms evaluation shows architectural artifact aligns anarchist society principles indicat ing daos using ld support anarchist society see section also developed model ld decision making due space constraints here9 included anarchist literature underpinned artifact develop ment elements motivation layer section representing principles goals literature business processes enable creation federa tions associations using ld based decision making equitable resource sharing operationalizing preferences adhering anarchist principles see section processes supported daos decentralized appli cations powered blockchain smart contracts detailed section conclusion future work paper provides foundational model integrating daos ld empirical val anarchist society principles exploration needed idation theoretical model needs real world validation plan imple ment observe system individual behaviors new socio political context goal one document instantiation artefact conduct ethnography organization able empirically validate anarchist principles artefact already theoretically validated comsoc instead ld computational social choice another way make decisions within daos believe applying kind enhanced research conducted daos using comsoc interesting modeling techniques identified new modeling languages techniques blockchain decent framework enhance model patterns identified blockchain patterns enhance technology layer oracle reverse oracle let real world interact blockchain enables smart contracts implementation artefact might faced issues e g token management determine collective ownership therefore conduct systematic literature review identify relevant patterns cover use cases work could included paper research investigate socio political artifacts decen tralised organisations addressed enterprise modeling focusing daos ld model anarchist societies designed architectural arti fact using togaf adm archimate purpose main contribution reference architecture presented paper detailed version available https github com edoc2024 paper models found https github com edoc2024 paper alignment dao socio political principles",
  "2024-KHRS": "introduction model driven architecture mda provides foundational framework design development enterprise information systems emphasizing top design approach three levels model abstraction compu tational independent model cim capturing business goals platform independent model pim representing system functionality independent specific technologies platform specific model psm detailing technological choices made structured approach allows deferred technological decisions assuming choices primarily localized im pacts however mda approach often overlooks integration softgoals due subjective qualitative nature softgoals unlike hardgoals lack clear cut achievement criteria encompass aspects cost security response e kiomba et al time performance qualitative attributes crucial successful software production influence user satisfaction feature prioritization development trade offs motivated need better incorporate qualitative attributes ana lyzing technological impacts enterprise modeling previously introduced technology aware enterprise modeling teaem extends mda integrating model checking validation impact analysis technological choices product generation approach enables unification cim pim within unified model allowing identification resolution incon sistencies across different mda levels inconsistencies detected teaem reports constraint violations business user assists decision making teaem limitations firstly focused unification cim pim without extending support psm additionally approach centered use hardgoals little attention given softgoals paper aims extends teaem two major contributions first integrate mda low level psm using sysml component modeling achiev ing unified cim pim psm model enables bottom constraint propa gation analysis integration ensures technological choices made psm level consistently reflected across abstraction levels enhancing overall coherence bottom traceability within enterprise modeling process second extend teaem integrating softgoals cim including softgoals early stages modeling better address qual itative attributes throughout system development life cycle approach allows generation code configuration guided satisfaction softgoals thereby optimizing system user satisfaction strategic business goals remainder paper organized follows section provides brief overview key concepts mda software product lines softgoals section details teaem approach extension integrate softgoals section discusses implementation mapping details illustrative example used validate approach finally section presents discussion conclusions work background mda top design enterprise architecture architecture system constitutes essential system considered relation environment different frameworks used enterprise architecture software engineering model driven architecture software design approach provides set guidelines structuring specifications expressed models core mda focus three primary types models computation independent model represents system requirements business context without detailing structure processing platform independent model spec ifies system structure functionality abstracts away details title suppressed due excessive length specific platform platform specific model combines specifications pim details system uses particular type platform many works exist literature exploit mda concept make goal alignment traceability goal authors presents strategy code s2c methodological approach integrating organizational business process information system modeling support strategic alignment software devel opment emphasizes model driven development conceptual modeling semi automatic software generation traceability across different modeling levels using working example illustrates strategic definitions transformed specific software components integration lite communication analysis oo method demonstrating feasi bility achieving strategic requirements traceability automatic software generation recent enterprise architecture frameworks exist give advice pro cesses practices enterprise architecture one archi mate specification fully aligned togaf standard archimate focus problem aligning strategic business plans plans goals development information systems based information technology software product lines mda spl complementary approaches greatly benefit integration softgoals software product line engineering sple serves methodological framework developing software families characterized significant overlap functional non functional attributes primary focus sple identify codify common features cluster software intensive applications within specific domain spl generally composed three main types artifacts problem space describes features functionalities desired users across potential products family solution space includes design implementation specifics components across different products within spl mappings establish connections features problem space respective components solution space work choose spl like application domain teaem softgoals utility functions evaluating softgoals softgoals serve quality criteria software systems components must meet development softgoals subjective relative diverse interactive making crucial yet challenging model due qualitative nature literature highlights significance softgoals determining suc cess software projects instance consider softgoals software sys tem performance system respond quickly user inputs e kiomba et al security system protect user data unauthorized access qualitative goals pose question effectively evaluate significant research conducted identifying softgoals within formation systems example one study presented comprehensive list softgoals identified information systems another proposed taxonomy categorizing softgoals four groups real web based systems web based systems real time systems information systems aim adapt identified softgoals quantify quantify softgoals propose writing utility function softgoal facilitating evaluation well system meets goals softgoals like usability reliability performance inherently qualitative converting quantifiable metrics utility function enable objec tive assessments comparisons following section introduce extended approach explain generate configurations meet softgoals teaem approach guiding configuration softgoals teaem holistic approach extends top mda design paradigm bottom traceability constraint propagation analysis teaem extension propose extending teaem following contributions integration psm illustrate technological choices using component modeling sysml integration softgoals guide business users generating configurations within spl model design constraints analysis top bottom fig teaem approach meet softgoals hashed blocks show teaem ex tension proposed paper title suppressed due excessive length figure illustrates extension teaem approach model subdivided two parts left hand side represents top mda design approach three abstraction levels cim pim psm – cim layer start creating goal model using framework pistar tool model includes hardgoals functional requirements softgoals non functional requirements – pim layer design feature model using featureide tool – psm layer create component models sysml include tech nical metadata alternative implementations designed solution right hand side extend teaem unifying pim cim psm layers mda single model called unified feature model ufm unification crucial several reasons – model checking validation help validate ufm confirm meets requirements identify inconsistencies specification show conflicts elements unified feature models – impact analysis helps identify changes one part model affect others reporting constraint violations low level high level – configuration generation spl facilitates generation configurations satisfy softgoals achieve unification define following mapping – goal feature mapping teaem mapping associates business goals technical features fulfill goals reflects technical assumptions made system engineers – feature goal mapping teaem mapping associates technical fea tures goals could potentially compromised hindered implementation – feature component mapping paper new mapping associates features specific technological components implement mappings formalized using symbolic mathematics library struc ture logical expressions library also develops utility functions opti mize softgoals details provided section unifying model use model checking boolean solver validate ufm identify inconsistencies causing conflicts goals features components model checking returns false indicating feasible configuration pro vide domain specific interpretation conflicts recommend solutions model checking returns true indicating multiple feasible configurations tegrate softgoals decision making process use utility function quantify softgoal apply multiple criteria decision making mcdm algorithm optimize softgoal satisfaction determining best configuration business user e kiomba et al main distinction teaem frameworks like mda archimate integration analysis inconsistencies across different ab stract level goal feature component within mda archimate offers holistic view enterprise architectures specifically focus de tecting managing inconsistencies different model types guiding product generation softgoals modeling softgoals utility function mentioned section reuse softgoals defined context key performance indicators kpis commonly used measure performance various aspects system however use utility function instead kpis utility function allows comprehensive integrative approach kpis provide valuable insights specific performance metrics often fail account trade offs tween conflicting goals utility function hand encapsulate multiple softgoals single measure allowing optimization overall user satisfaction system performance balanced manner utility function quantifies values derived component modeling value component serves input mcdm algorithm generate configurations maximize user satisfaction focus following soft goals implementation test phases sections table description softgoals blockchain components softgoals description refined notation cost system operates minimal c expenses reduces cost efficient overall cost ownership response time system processes requests quickly r efficiently providing fast timely feedback users throughput system processes incoming data quickly sends new data high without delay throughput overall goal minimize total cost components c x c sum individual cost functions component total cost x r decision variables adjusted optimize cost total r x response time response time function component min total throughput aim minimize throughput n   function component define objective function integrating different softgoals optimize title suppressed due excessive length f w c w r w min \u0000 f c r combined objective function total cost w w w total response time total throughput weights assigned cost response time throughput respectively reflecting relative importance business users next section presents different modules developed implementation implemented teaem automated process model unification across different mda abstraction levels detecting constraint violations performing impact analysis generating software product line configurations driven softgoals modules1 developed following generation unified feature model ufm unified model includes goal model feature model component models constraints top model design use modeling language pistar tool goal modeling featureide feature modeling sysml component models mapping cim pim psm achieved using sympy logical expressions module automates generation unified feature model extraction constraints ufm module performs model check ing validation use featureide bundled sat4j solver trieve constraints ufm generating output json con straint analysis inconsistencies arise three mda levels interpretation constraint violations implications devel oped module takes outcomes json list constraint violations featureide produces domain specific interpretations violations guide business users decision making generation configurations meet softgoals module calculates utility functions using sympy based parameter values sysml com ponent models utility function min max values help identify best configuration matches specified requirements optimization using topsis algorithm implement topsis algo rithm multiple criteria decision making ensuring optimization evaluation unified model achieve highly optimized solutions make three types mapping specified section3 mapping goal feature feature goal use mathematical logical expressions rules passed sympy order execute automatically logic https github com eddykams teaem develop e kiomba et al mapping pim psm two cases mapping one feature one component following bijection function modeling mapping pim psm h f c f features c components mapping one feature multiple components use topsis tech nique order preference similarity ideal solution multi criteria decision analysis method ranks alternatives based distance ideal solution negative ideal solution helps selecting best option comparing relative closeness alternative ideal solution next section present illustrative example apply teaem configure products meet soft goals illustrative example counterfeiting drugs supply chain motivation market counterfeit drugs become billion dollar business annu ally according world health organization according report sold drugs globally fake significantly higher rates parts africa asia business dangerous life death implications patients thousands deaths every year also pharmaceutical industry reputation lose lot money complexity pharmaceutical supply chain operations primary reason issue large number handovers different supply chain partners drugs reach hospitals pharmacies significant lack trace ability manufacturing vulnerable counterfeit raw materials ingredients unknown sources moreover illicit producers relabel fake products infiltrate legitimate distribution channels pharmaceutical sector european union eu drug supply chain security act dscsa united states provide deadline industry implement traceability system based work present following illustrative example com pany x based europe africa must enter pharmaceutical market compliance eu regulations operate africa organization many branches different countries require system manage trans actions recorded across multiple locations additionally need system enhances trust among various stakeholders system must address following needs reduce drug counterfeiting fraud detection ensuring traceability transparency every step product transfer ensure secure data management enhancing privacy access controls encryption maintaining integrity immutabil ity data manage recalls defective products conditions transporting drugs title suppressed due excessive length must verified real time audits using iot sensors rfid tags authenticity products must checked log audit teaem configuration spl meet softgoals main goal enterprise x determine goals features components generate product inconsistencies generating product organization proposes inte grate following softgoals maximal performance minimal cost blockchain components better response time minimal cost electronic solutions rfids iot sensors nfc tags step1 present partial goal model enterprise depicting different softgoals links goals softgoals figure step build feature model made literature review iden tify different solutions proposed combating drug counterfeiting sup ply chain illustrated according findings literature assert example ideal anti counterfeit technology enterprise system high level safety faster product application established standards simple check automatic authentication accessible con sumers comply industry regulations table requirements technologies identified goals requirements references blockchain cloud ml ￿ transparent ￿ ￿ traceability ￿ ￿ ￿ reliable ￿ high level safety ￿ faster product application ￿ simple audit ￿ ￿ automatic process ￿ ￿ compliant industry regulations ￿ accountability ￿ trust ￿ decentralized ￿ high security ￿ flexibility built feature model based technologies identified three prominent technologies proposed blockchain technology features traceability trust immutability cloud computing known flexibility faster application production machine learning identify counterfeit drugs algorithmic data analysis additionally associated electronic equipment traceability proposed rfid tags iot sensors pressure geolocation nfc tags e kiomba et al fig goal modeling enterprise x fig feature model enterprise x fig component model enterprise x title suppressed due excessive length step based analysis presented table decided use blockchain technology component illustrate example blockchain novel technology yet widely adopted enterprises due lack standardization scarcity engineers skilled implementation literature identifies two principal types blockchains public blockchain private blockchain using sysml illustrate component model blockchain technology technologies however evaluation phase focus value blockchain component step4 teaem unified model depicted fig put within sin gle model three abstract level mda study model checking results positive indicating unified model valid however next step involves generating configurations satisfy softgoals defined previous section fig model unification step model unification use model checking validation de termine valid configuration exists unified model inconsistencies unified feature model generates possible configurations dicating inconsistencies constraint violations therefore refining model unnecessary presented example con straint violations detected question arises business users choose best configuration meets softgoals step outlined previous section generate configurations guided satisfaction softgoals detail softgoals discussed section including associated utility functions blockchain components em ployed values component properties inputted parameters utility functions select optimal configuration use blockchain configu rations utilize topsis method multi objective optimization e kiomba et al absence generalizable throughput response time formula possible cases chosen formulate following assumptions response time minimal time detection counterfeiting drugs depends component properties transaction processing time block creation time smart contract execution time throughput function block size block execution time network bandwidth blockchain table utility functions blockchain component properties softgoals softgoals utility function components properties deployment cost n c min c blockchain cost c c maintenance cost block size p b b n throughput block time b network bandwidth tx processing time r r x b sc response time block creation time c e sc execution time deployment cost n ec min c e electronic cost execution cost c c c maintenance cost p results integrating blockchain component values parameters utility function generate products made following tests help choose configurations meet one softgoal example organization needs minimize blockchain costs fig configuration guiding minimal blockchain cost minimize blockchain costs implemented module maps value component across different configurations calculates value using utility function implemented sympy returns value comparison title suppressed due excessive length configurations configuration lowest cost considered winner one component easy generate product matches softgoal help choose configurations meet multiple criteria case multi objective optimization need choose best configuration guided multiple softgoal criteria table softgoals criteria heigh attributes blockchain cost response time throughput electronic cost conf0 seconds bloc tx seconds conf1 seconds bloc tx seconds conf2 seconds bloc 100tx seconds conf3 seconds bloc 200tx seconds test phase important clarify values presented table provided illustrative purposes represent calculations utility function instead values intended demonstrate application mcdm topsis table illustrates four configurations found model check ing validation different values blockchain cost response time throughput electronic cost passed inputs component model case multi objective optimization need choose best configuration guided multiple softgoal criteria many optimization algorithms exist literature implemented topsis method multiple criteria decision making evaluation phase example input data illustrated table following outcomes scenario defined weight parameters identified response time blockchain cost electronic cost non benefit parameters functions minimize throughput benefit param eter function maximize following outcomes table scenario outcomes overview attributes bc cost r time throughput e cost pos neg score rank conf0 conf1 conf2 conf3 reduce blockchain cost cost electronic equipment sponse time increasing performance throughput best configura tion configuration conf3 achieves satisfaction among business e kiomba et al users worst configuration configuration conf1 satis faction among business users clearly specified different constraints values blockchain components parameters configuration meets specified softgoals configuration scenario business users place significant emphasis response time com pared criteria adjust weight according preferences ex ample response time blockchain cost throughput electronic cost table outcomes scenario attributes bc cost r time throughput e cost pos neg score rank conf0 conf1 conf2 conf3 best configuration changed configuration conf2 satisfaction among business users worst configuration still configu ration conf1 satisfaction among business users clearly see different softgoal weight lead different configurations lesson discussion research challenges teaem approach integrating softgoals ensures qualitative tributes user satisfaction security performance prioritized sulting configurations align closely business goals unified cim pim psm model enhances coherence traceability across abstraction levels leading fewer errors complete configurations integra tion ensures technological choices made psm level consistently reflected across levels reducing risk inconsistencies teaem generated configurations exhibit fewer errors higher completeness validated model checking use topsis method mcdm teaem facilitates selec tion optimal configurations based multiple softgoal criteria approach allows business users make informed decisions quickly balancing trade offs competing goals empirical data show teaem reduces time required configuration generation decision making compared manual methods spl approaches compared approaches teaem adds value model checking val idation constraints analysis propagation bottom traceability mda focuses top design traceability alignment goals business goals code generation archimate designed provide comprehensive integrated view enterprise architecture focusing relationships title suppressed due excessive length different domains business application technology however inherently include specific mechanisms detecting managing consistencies different model types additionally archimate represent various goals requirements explicitly focus guiding product generation softgoals implementation teaem various evaluations carried allowed us learn following lesson – business users ability express preferences different softgoals expressing preferences technical impact weight importance business user assigns softgoal configuration product software product line spl significantly influences best configuration proposed teaem presents certain limitations complexity involved malizing utility functions systems non linear attributes complex ity challenge accurate quantification optimization softgoals also managing explosion feature model large scale projects remains significant challenge potentially complicating optimization solutions specific product derivations future work teaem approach focus developing formal guidelines defining applying utility functions improve accu racy make approach adaptable across various scenario exploring advanced modularity techniques crucial managing complexity feature models addressing feature model explosion problem simplifying process configuration generation evaluating methodology practical impact real world applications also critical ensure effectiveness tackling areas teaem approach enhanced offer greater value enterprise modeling conclusion paper extend technology aware enterprise modeling approach incorporating softgoals generate configurations within software product lines enhancement addresses limitations mda methods managing non functional requirements essential user satisfaction primary contribution unification cim pim psm single model ensuring traceable design process connects business goals technical implementations also integrate model checking impact analysis detect inconsistencies early aiding decision making minimizing errors second contribution integrates softgoals teaem process enabling spl configurations meet goals softgoals ensuring final products align user needs business goals demonstrate approach using counterfeit drug detection example supply chain leveraging blockchain technology component future work focus managing feature models address challenge feature model explosion e kiomba et al",
  "2024-RKHPNS": "introduction model driven architecture mda provides fundamental framework design development enterprise information systems prioritizing top design process introduces three levels model abstraction model transformation process ensuring traceability alignment high level business goals developed technological components method ology selection technological platforms components deferred lower levels mda design hierarchy approach justifiable assump tion technological choices primarily local effects however emergence disruptive technologies blockchain challenges established principles mda exerting broader influence processes goals enterprise whole intrinsic properties blockchain create efficiencies locally also introduce strategic limits extending beyond initially targeted areas implementation consequently adoption technologies requires holis tic analysis potential impacts business processes objectives enterprise wide moreover analysis postponed later de sign stages accompany whole design process increasing technology awareness already early design stages rychkova et al propose approach technology aware enterprise modeling teaem extends mda paradigm bottom constraint propagation analysis depart idea technical properties defined lower mda abstraction levels create implicit side effects higher mda levels position paper introduces teaem presents first results imple mentation teaem steps supported well known modeling tools developed several modules model transformation model unification interpretation results current version teaem supports goal feature model unification component modeling integrated nearest future illustrate approach theoretical example orga nization seeking implement blockchain solution processes results analysis provide ground technology aware business design decision making organization section provide brief reminder mda discuss challenges section introduce teaem approach section present il lustrative example section provide road map future development teaem present conclusions background model driven architecture mda software design approach provides set guidelines structuring specifications expressed models support ing traceability business alignment mda defines three primary types models computation independent model cim represents system require ments business context without detailing structure processing platform independent model pim specifies system structure functionality abstracts away details specific implementation platform platform spe cific model psm provides technical details system implementation using particular technology platform methods approaches enterprise system design grounded mda discussed research literature several decades alignment enterprise models different mda abstraction levels addressed numer ous works focus validation analysis alignment business pro cesses goals formal methods proposed alignment verification acknowledge constantly changing business environment integra tion organizational strategy structure mda addressed semi automated strategy code approach integrates organizational business process information system modeling introduced approach grounded litestart modeling method ensures traceability across modeling levels research presented acknowledges rapid evolution com plexity technological solutions impact organizational strategy processes technological solutions may initially excel addressing specific business goals implementation introduce strategic limits areas title suppressed due excessive length necessitates evolution design approaches including mda moti vates teaem approach presented work technology aware enterprise modeling teaem holistic approach extends top mda design paradigm bottom traceability constraint propagation analysis teaem steps figure illustrates teaem approach use goal modeling feature modeling component modeling represent enterprise solution three mda abstraction levels top model design follows mda paradigm consists de veloping goal model cim feature model pim component model psm respective model transformations bottom constraint analysis represents main theoretical contribution consists model uni fication model checking impact analysis steps teaem approach fig goal modeling cim goal model representing high level business goals requirements domain concepts created step model cor respond cim highest level abstraction within mda outlines de pendencies goals intended outcomes ensuring alignment broader organizational context dependencies explored constraint analysis feature modeling pim feature model defined step model specifies hierarchical structure abstract technical functionalities fea tures prospective solution corresponds pim dependencies rychkova et al constraints features define alternative configurations technical solution component modeling psm component model created step model specifies technological components platform specific details nec essary implementation features defined pim technical constraints components provide information alternative implementa tions designed solution model unification step business goals technical features com ponents specified within single unified feature model ufm impact analysis use logical expressions formalize mappings model elements defined different mda abstraction levels define following mapping types goal feature mapping associates business goals technical features satisfying goals mapping reflects technical assumptions made system engineers feature goal mapping associates technical features goals possibly compromised inhibited implementation features feature component mapping associates features specific technological components implementing features component feature mapping explicitly defines possible restric tions incompatibilities features components component goal mapping indicates possible restrictions soft goals components quality feasibility performance issues etc combine mappings constraints defined previous teaem steps form ufm model checking impact analysis use model checking validate ufm identify inconsistencies specification solver finds possible configurations solution shows conflicts elements unified model propose domain specific interpretation conflicts recommendations resolution constraint analysis performed different stages model design serve identify propagate effect design decisions specified pim cim b identify propagate effect design decisions specified psm pim cim teaem implementation work illustrate semi automated model unification constraint analysis cim pim abstraction levels mda developed3 implement approach following three modules generation unified feature model ufm unified model comprises goal model features model constraints top model de sign use modeling language pistar tool goal modeling feature modeling environment featureide map ping different mda abstraction levels added manually external https github com eddykams teaem develop title suppressed due excessive length file using logical expression notation develop automated python mod ule transform py takes input goal model feature model provided constraints automatically transforms unified model extraction constraints ufm use featureide bun dled sat4j solver retrieve constraints ufm generate output json used constraint analysis step interpretation solution constraints violation implication bottom develop python module interpretation py uses json list constraint violations extracted ufm featureide input produces domain specific interpretations violations used enterprise models redesign current version tools semi automated goal model designed pistar tool feature model designed featureide mapping goal model feature model formalized using logical expressions external text file file used input generate unified model model checking unified feature model automatically applied fea tureide model checking results extracted interpreted devel oped module working provide fully automated mapping process next version illustrative example illustrate teaem approach simple example organization seeks enhance transparency auditability processes organization considers blockchain technology platform enterprise solutions par ticular organization needs choose two blockchain platforms pub licbc x privatebc design configure selected blockchain platform components since organization also concerned gdpr compliance detailed analysis abstract capabilities technical functionality prospective blockchain solution required illustrate teaem support analysis technical constraints impact defined business goals organization goal modeling cim goal model illustrated fig defines two goals organization gdpr compliance auditability achieved specify dependency refinement link corresponds logical conjunction business goals gdpr compliance auditability feature modeling pim feature model illustrated fig b specifies abstract functionalities associated blockchain technology prospective technical solution organization modeled root feature grounded either functionalities publicbc x privatebc specify alternative feature group featureide corresponds exclusive expression rychkova et al technical solution publicbc x xor privatebc goal model organization b feature model proposition fig alternative blockchain solutions c unified feature model merges b goal model solution proposition formalized proceed bottom constraint propagation analysis model unification create unified feature model specifies en terprise system organization fig c ufm represents goals cim features pim using feature modeling formalism model technical solution business goals mandatory features enterprise system root feature formalize mapping created mda models assume following assumptions consider generic properties public blockchain x private blockchain private blockchain limits auditability blockchain nodes controlled single private entity immutability contingent upon trustworthiness entity pub lic blockchain x face immutability issue node participate consensus validation processes ensuring operations conducted fairly transparently nevertheless immutability public blockchains prevents implementation fundamental gdpr right forgotten alteration deletion data demand map technical fea tures defined pim goals compromised implementation features using following logical expressions compliance publicbc x gdpr title suppressed due excessive length privatebc audit goal model feature model feature goal mapping presented doc umented xml files used semi automated generation ufm model checking impact analysis featureide automatically executes model checking generated ufm example ufm invalid e model void meaning enterprise system satisfying actual constraints configured identify trace sources conflicting con straints model elements defined different mda levels pim cim example using developed extraction solution interpretation mod ules provide domain specific constraint interpretation aiming assist business users redesign domain specific constraint analysis interpretation fig example business expert faces problem choice blockchain solution compromises one business goals defined organi zation along modification refinement prospective technical solu tion analysis calls redefinition prioritization business goals response bottom constraint propagation conclusion future work presented teaem approach contributes design enterprise systems within mda paradigm existing approaches support traceability alignment goals technical solutions top often fall short guiding stakeholders decision making process analysis incon sistencies bottom approach enables reconciliation business goals technical capabilities specific solutions formal analysis propaga tion constraints outlined teaem steps illustrated fig model unification model checking impact analysis two steps extend mda provid ing constraint propagation analysis developed technique semi automated generation unified feature model ufm used feature modeling environment featureide automated model checking rychkova et al article illustrated propagation constraints pim cim identification propagation effect design decisions specified psm pim cim automated mapping elements different mda levels abstraction addressed future work illustrated approach short theoretical example developing alistic example important next step plan conduct case study design analysis supply chain management solution based blockchain technology case study propagation impact technical properties related specific blockchain solutions organizational supply chain man agement process strategic goals examined particular focus trustworthiness goals addressed previous work",
  "2024-RR": "introduction cyber physical systems cps refer integrated computational capabilities networking physical processes systems use embedded computers networks monitor control physical processes often feedback loops physical actions influence computational decisions vice versa social entities organizations individuals inherently involved cps lifecycle development standardization implementation daily use trust essential component cps adoption cps charac terized high degree complexity interconnectivity ability interact physical world computational elements seamlessly compared social interpersonal trust cps context mul tiple entities social physical computational upon cps users need place trust examining trust formation complex heterogeneous system provides valuable input cps designers developers improving sys tems trustworthiness positively affecting acceptance adoption users address challenge method iterative analysis elicitation trustworthiness requirements elaborated method grounded six variable model originally defined support design control p rambert et rychkova systems provides structured framework presentation analysis relationships various cps elements presented method supports traceability alignment trust concerns expressed cps users stakeholders trust assumptions made cps designers order address concerns trustworthiness requirements technical system com ponents developed meet requirements article presents details method reports case study assa project method applied assa assistance sécurité seniors application startup creating personal emergency response system elderly assa solution uses connected smart devices monitor user vital parameters trigger alert case emergency team two engineers delivered design documentation assa following conventional software design process ever explicit trust analysis trustworthiness requirements elicitation conducted led us consider assa appropriate case method application goal study demonstrate explicit trust analysis offers valuable insights cps design process enhancing traceability leading identification new relevant requirements contribute system trustworthiness article organized follows section discuss background trust cps section provide details method trustworthi ness requirements elicitation section present research methodology introduce assa case study section present case study results provide concluding remarks section background trust cps research trust social construct emerges interactions individuals groups described situation subject trustor willing rely chosen actions object trust trustee advances socio technical systems introduce novel models social business interac tions artifacts take role trustee trust technology reflects trustor beliefs specific technology attributes necessary perform expected given situation negative consequences possible cps applications assisted living provide individuals support within living environments recent technological advances expanded capabilities cps enabling real time health monitoring fall detection medica tion management personalized assistance however multiple issues related privacy data security interoperability standardization integration cps systems larger ecosystems undermine cps users stakehold ers decision trust engaged cps trust defined user willingness rely system case emergency pre requisite cps technology adoption must explicitly addressed design interpersonal social trust defined function trustee perceived ability benevolence integrity physical computational title suppressed due excessive length entities exhibit technical properties attributes might predict user decision trust consequence involved cps given complex interconnected nature cps context multi ple social physical computational entities involved may obvious central identifiable trustee upon base trust decisions moreover non technical cps stakeholders limited capacity objectively assess tech nical properties cps reason trustworthiness following eight trust constructs cps defined familiarity understand ing cps consumers reliability predictability consistency security integrity competence expertise functionality required interact cps benevolence helpfulness cps consumers personaliz ability faith belief consumers service delivered concepts capture complex nature trust relationships cps accurately address cps trustworthiness design essential conduct thorough analysis user trust related concerns systematically translate concerns trustworthiness requirements trustworthiness requirements trust assumptions systems engineering trustworthiness system means worthy trusted fulfill specific requirements work elaborate method explicit trustworthiness requirements elicitation proposed trustworthiness requirement twr defined statement made trustor expected trustworthiness trustee statement must clearly express operational functional design characteristic according trustor beliefs positively impacts trustworthiness trustee interaction two sutcliffe introduces soft requirements linguistic concept encom passes various phenomena related people organizations society including trust grounded work twr considered subclass soft quirements refined functional non functional requirements method aiming systematize elicitation analysis requirements including trustworthiness requirements grounded ontological analysis proposed twr considered special class quality require ments reference ontology trustworthiness requirements rotwr proposes decomposition twr reliability requirements truthful informa tion communication requirements transparency requirements context cps twr define desired outcomes systems achieve address trust concerns tc users stakeholders within socio physical environment however cps controlling software main focus development project addressed study affect machine domains socio physical ones concept known world machine paradox formulated consequently tcs directly mapped functional non functional quality requirements linked directly cps components within machine domain instead system engineers must interpret concerns social domain machine domain process involves delegating user trust decisions system engineers make explicit implicit choices trust p rambert et rychkova certain technical characteristics components choices referred design assumptions ontology assumptions proposed defines world assumptions wa machine assumptions world dependence assumptions wda chine dependence assumptions mda world assumption assumption world social phenomena constraints machine environment machine assumption assumption machine internal phenomena machine dependence assumption states external world phenomenon depends machine phenomena contrast world dependence assump tion states machine phenomenon depends world phenomena authors use situation calculus reason assumptions requirements grounded trust assumptions ta defined assump tions made system engineers properties system various components including human components positively affect perceived trustworthiness system method trustworthiness requirements elicitation fig overview assa case study timeline b method trust analysis twr elicitation integrated human centered design approach method presented work grounded trust analysis use six variable model originally defined support design control systems model provides structured framework analysis relation ships various system elements situated socio physical environment e users stakeholders machine domain e control machine title suppressed due excessive length sensors actuators connected systems defines six variables de picted relations different system elements referenced variables focus properties observed system environment monitored variables represent properties need monitored dur ing system operation input variables represent external stimuli affect system behavior output variables refer outcomes produced system controlled variables refer properties system actively control actions system take achieve desired behavior desired variables refer properties system environment achieved system operation figure illustrates six variable model assa system case study analyzing relationships monitored controlled input output referenced desired variables developers precisely articulate system requirements – twr case implication system functionalities behavior trust analysis cps use formalism proposed documenting tc ta twr traceability ta twr system elements method defines seven steps see fig b follows step global system model based six variable model created model focuses problem domain effects must achieved domain captures context use forms foundation subsequent steps step trust concerns collected users project stakeholders case retrospective analysis trust concerns extracted existing design documentation step trust assumptions collected technical stakeholders assumption something taken true factual used starting reasoning1 point course action trust assumptions refer social trust concerns justify design choices made solution design use four kinds assumptions defined address world machine paradox align problem domain machine domain step trust concerns trust assumptions mapped relevant elements global system model trust concern may refer one several elements system model step global system model refined high level problem refined sub problems trust concerns trust assumptions elaborated trust concern addressed design assumption made new element feature property needs suggested solution step repeats trust concerns covered desired level detail achieved step trustworthiness requirements derived trust assumptions integrated system design documentation step new technical features components derived contributing trustworthiness design solution design specification updated method consistent activities iso human centered design approach specifying context use step specifying user https www merriam webster com thesaurus assumption p rambert et rychkova requirements step producing design solutions step based evaluation results new iteration trust analysis twr elicitation triggered user centered evaluation design scope article addressed future case study demonstrate method eliciting trustworthiness requirements evaluate effectiveness conducted case study assa software de velopment project assa application assistance security elderly assa innovative personal emergency response application designed ios android devices potential users assa elderly people people liv ing isolation geographically socially application potentially integrate compatible smartwatches wearable devices monitor vital parameters e g heart rate blood pressure oxygen saturation levels detect accidents e g falls irregularity vital parameters ac cident detected application initiates series actions ensure quick assistance first triggers timer user prompted con firm cancel emergency emergency canceled assa transmits emergency alert designated healthcare providers e g hospital emer gency service notifies designated caregiver e g person trust family member providing data related situation e g health report team two engineers conducted market analysis requirements spec ification developed initial design documentation assa august november see fig regular monitoring emergency handling main uses cases assa functionalities elaborated later project particular systematic generation management line health reports added assa result study according latest design specification assa application ensures user monitoring alert generation case emergency provides rele vant historical data medical professionals regular emergent medical interventions efficient personalized treatment research methodology adapt single project case study research protocol defined kitchenham pickard planning designing case study objectives case study evaluate feasibility efficiency relevance method anal ysis elicitation trustworthiness requirements assa project trust recognized assa developers important factor adop tion specific trust analysis conducted project made title suppressed due excessive length project relevant case study define following hypothesis case study h1 method complementary design process focused trust h2 method application uncovers implicit twr existing system spec ifications h3 method application leads identification new twr extending system specifications h4 documentation trust assumptions enhances traceability alignment designed system h5 method application contributes definition valid relevant design solution conducting case study study conducted november june fig first conducted trust analysis system retrospective applying method data collected assa project november design documentation produced assa developers second iteration conducted trust analysis system prospective applying method new data conducted seven semi structured interviews prospective assa users healthcare professionals additionally organized series working sessions assa developers concentrating themes trust trustworthiness acceptance prospective application interview lasted minutes brief presentation assisted living technologies interviewees introduced assa invited discuss ex perience assisted living technology reasons adopt one compared interviews conducted assa developers earlier days project data collection focuses subjective trust issues beliefs non technical stakeholders example questions interview guide translated french would personal emergency response system improve work personal security reasons would take personal emergency response system preoccupation relative uses personal emer gency response system connected personal emergency response system changes preoccu pation regarding typical personal emergency response system retrospective prospective analysis demonstrated method feasibility h1 addressed method efficiency h2 h3 eliciting twr iter ations able identify new features contributing system trust worthiness propose update base line assa design solution evaluate method relevance h4 h5 presented refined assa system model updated design specification assa devel opers review validation case study results presented following session p rambert et rychkova trustworthiness requirements elicitation assa retrospective trust analysis step global system model assa created based market analysis design documentation produced assa developers fig assa mobile application represented control system six value model root requirement defined main use case assa provide monitoring assistance problem domain includes user elderly person whose health monitored designated caregivers healthcare practitioners control machine software represents assa mobile application connection domain machine problem domains includes sensors e g smartphone smart watch external systems control machine interacts sending alerts ports emergency calls e g health emergency services messaging service online reporting system reference variables include health report fig step assa global system model help notification monitored input variables include detection motion vital signs location output variables include call ambulance linked health emergency system e g ambulance send notification caregiver linked messaging service e g sms create health report linked reporting system controlled variables include send ambulance linked user alert location hospital linked caregiver share health report linked healthcare practitioners caregiver desired variables composed help received linked user information sent linked caregiver health report linked healthcare practi tioner step conducted semantic analysis assa design documentation provided assa developers including market reports terviews medical professionals potential users caregivers using various title suppressed due excessive length definitions trust literature identified seven trust concerns tc1 table step identified design decisions related tc specified previous step assa design documentation identify sumptions made assa developers properties assa cps various components justify decisions conducted inter views assa developers validate ta discovered classify according ontology proposed table illustrates list ta related tc retrospective trust analysis extracted trust assumptions ta1 ta1 use assumption ontol table trust concerns expressed prospective assa users stakeholders iter step trust concern tc1 user concerned whether constantly monitored tc2 user uncertain whether receive help upon feeling unwell tc3 user concerned able access monitoring data tc4 user concerned whether able use system proper way tc5 user caregiver concerned whether device charged working tc6 caregiver concerned whether assistance timely pro vided response alert tc7 healthcare practitioners concerned relevance exactitude health report tc8 user concerned system generating false alerts tc9 user concerned monitoring data health report used healthcare professionals personalize improve treatment tc10 user concerned data used commercial purposes tc11 user concerned health report shared used without consent ogy identifying world assumptions wa machine assumptions world dependence assumptions wda machine dependence assumptions mda world assumptions engineers assumptions social phenomena example assume healthcare provider sends ambulance time assa emergency alert received see ta1 assumption means solution trusted healthcare provider ignores alert enough resources respond also assume user find assa interface simple intuitive ta1 otherwise system trusted user machine assumptions engineers assumptions internal properties application smart devices external systems services p rambert et rychkova table trust assumptions discovered retrospective analysis ta1 xx made prospective analysis ta2 xx linking trust concerns system elements trust assumption kind tc linked system elements ta1 redundant sensors increase tc1 smartwatch smartphone monitoring reliability ta1 user check sensor sta mda tc1 assa mobile application tus activity smartwatch smartphone ta1 irregularities health metrics wda tc2 assa mobile application correctly identified tc8 data ta1 01user trigger alert man wda tc2 assa mobile application ually tc8 ta1 alert transmission guar mda tc2 assa mobile application net anteed system work provider ta1 01wifi mobile communica tc2 network provider tion reliable ta1 emergency calls responded wa tc2 health emergency service ta1 data encrypted tc3 assa mobile application mes saging service reporting system ta1 data accessed wda tc3 messaging service reporting authorized persons tc10 system caregiver healthcare verified identity practitioner ta1 interface simple wa tc4 assa mobile application tuitive smartwatch smartphone ta1 user informed bat mda tc5 assa mobile application tery smartphone smartwatch low ta1 healthcare provider han wa tc6 health emergency service dles emergency alerts received tc9 healthcare authorities system ta1 software certified recog wa tc7 healthcare authorities nised healthcare authorities tc9 ta2 redundant sensors prevent mda tc8 smartwatch smartphone false alerts ta2 explicit request user mda tc10 assa mobile application consent porting system ta2 gdpr complience mda tc10 assa mobile application porting system ta2 reporting system highly tc9 reporting system healthcare available practitioner ta2 healthcare practitioners recog wa tc9 reporting system healthcare nise use health report practitioner ta2 healthcare practitioners pro wa tc9 healthcare practitioner vide qualified help ta2 user training materials pro mda tc1 assa mobile application vided tc4 smartwatch smartphone title suppressed due excessive length positively affect perceived trustworthiness system assume redundant sensors system affect reliability patient monitoring ta1 machine dependence assumption states external world phenomenon depends machine phenomena example assume user trust system check make sure sensor working constantly monitoring see ta1 world dependence assumption states machine phenomenon depends world phenomena example assume system detecting anomaly raising alert means user well ta1 ta1 step map tc step ta step relevant parts assa system update system model show traceability fig ç concerns tc1 tc4 tc5 related assa mobile application smart devices user interface tc2 questions whole system purpose related main requirement tc3 tc7 related assa interfaces data exchange external systems tc6 related interfaces system control domain refer service level agreements operational level agreements need defined fig global system model assa annotated trust concerns iteration tc1 tc7 iteration tc8 step refine global system model decomposing main problem provide monitoring assistance sub problems corresponding p rambert et rychkova use cases assa defined coordination project developers p1 monitor user detect emergencies sub problem consists continuously collecting data user vital parameters sensors e g smartwatch smartphone generating user health metrics data analyzed dedicated algorithms e compared historical data baseline established physician irregularities detected alert triggered p2 send ambulance user emergency detected alert triggered system transmits alert healthcare emergency service sends ambulance response healthcare practitioners e g paramedics physicians intervene provide help user user data related triggered alert e health report communicated healthcare professionals reporting system p3 inform caregiver emergency system notifies caregiver via text message e g sms providing data related alert emergency intervention followed e g address hospital user transported p4 manage share health reports system records user health metrics creating regular health reports incident health reports line reporting system user authorization health reports communicated caregivers healthcare professionals emergency interventions regular check ups illustrate refined system diagram sub problem p2 fig ta1 ta1 ta1 related assa mobile system smartwatch smartphone – elements directly manipulated user ta1 ta1 linked external systems machine domain e health emergency service messaging service reporting system assumptions assa mobile application integrated systems specific properties functionalities external systems must ensure ta1 ta1 related entities included problem model – network provider healthcare au thorities step using ta formulate trustworthiness requirements table link twr tc addressing twr reflects one ta example requirement twr1 system shall integrated recognized health emergency service e g ambulance samu france associated ta1 emergency calls responded ta1 healthcare provider handles emergency alerts received system table2 step twr formulated assa mobile application external systems services e g health emergency service reporting system entities domain environment e g healthcare practitioner healthcare authorities mobile network provider twr related assa mobile appli cation considered functional non functional requirements requirements align design solution indicated table2 whereas others lead new design features example twr1 twr1 twr1 suggest update assa mobile interface twr lated external systems services considered non functional title suppressed due excessive length tegration requirements regulatory compliance requirements also introduce new elements design example twr1 focuses tegration compliance existing platforms sharing medical data twr1 twr1 highlight importance service level agreements healthcare mobile network providers prospective trust analysis objective analysis extend understanding system environment focusing trustworthiness acceptance system stakeholders compared retrospective analysis apply method newly collected empirical data prospective twr elicitation step use global system model assa developed iteration fig proceed tc extraction step qualitative data analysis able confirm tc iden tified iteration identify new tc see table particular interviews reveal prospective users concerned possibility false alert purposeful use collected data see tc8 table step made new trust assumptions technical properties system implemented would alleviate tc expressed users tc8 improve system trustworthiness note trust concerns addressed ta formulated iteration example ta1 already addressing trust concern false alerts tc8 new ta listed table see ta2 example assume user trust system learn use system documentation support materials provided ta2 step associate new tc ta system components fig illustrates traceability ta system elements sys tem model p2 send ambulance user emergency detected step update sub problems see retrospective analysis system models omitted paper step formulate five twr twr2 link cor responding ta tc step twr2 aligns assa design solution four twr new validated assa developers led design update twr2 twr2 require extension assa application interface whereas twr2 need addressed external reporting system healthcare practitioners integration regulatory compliance requirements discussion study shows proposed method applicable retrospective fol lowing design process focused trust prospective integrated method human centered design validating h1 ex amined identified twr assa developers five twr correspond assa requirements six new twr led assa specification update p rambert et rychkova table trustworthiness requirements twr description associated addressing included ta tc assa twr1 system shall provide user ta tc1 new val means control sensors status twr1 system watch shall ta1 tc4 simple clear interface twr1 system shall alert user ta1 tc5 new val battery charge low twr1 system shall compatible cer ta tc1 tc8 tified reliable sensors components twr1 system shall integrated ta1 tc2 tc6 new val recognized health emergency ta1 tc9 service e g ambulance samu france twr1 system shall certified approved ta1 tc2 tc7 new val healthcare authority ta1 tc8 tc9 twr1 user shall able trigger alert ta1 tc2 tc8 new inval manually twr1 system shall use reliable mo ta1 tc2 new val bile internet network provider ta1 twr1 system shall use report format ta1 tc3 tc9 new val compatible cloud reporting systems ta2 twr1 system shall encrypt data stored ta1 tc3 exchanged twr1 system shall integrated ta1 tc3 line reporting system tc10 twr2 system gdpr compliant ta2 tc10 twr2 user shall able control report ta2 tc3 new val sharing ta1 tc10 twr2 reporting system must highly ta2 tc9 new val available twr2 healthcare practitioner use ta2 tc9 new val received health report taking ta2 user charge twr2 user shall able access training ta1 tc1 new val materials guidelines assa ta1 tc4 mobile application online e g faq ta1 tc8 getting started videos etc title suppressed due excessive length fig refined system diagram sub problem p2 send ambulance user case emergency detected trust assumptions iteration ta1 xx iteration ta2 xx linked system elements table validates research hypothesis h2 h3 demonstrates method efficiency formulated trust assumptions based retrospective prospec tive trust analysis table created traceability matrix system models explicitly linking social trust concerns system elements con ducted feedback sessions engineers ensure shared understanding added value traceability validating h4 formulated new twr recognized important validated assa developers twr user shall able trigger alert manually validated goes product vision assa system takes whole responsibility emergency detection able partly validate h5 method relevance conclusions work applied method iterative trustworthiness requirements analysis elicitation elaborated case study assa cps formulated trust assumptions justify technical decisions supporting alignment social trust concerns specific properties system addressing world machine paradox formulated conducted trust analysis led updates assa solution design focus enhanc ing system trustworthiness assa developers acknowledged significance analysis future work intend evaluate proposed design assess impact twrs perceived trustworthiness system achieve plan conduct user centered evaluations post implementation usability testing p rambert et rychkova",
  "2025-AR": "introduction rise blockchain technology bct marked new digital era eliminating need centralized authorities creating trustless environment transactions instead placing faith intermediary users could trust blockchain historically trust crucial adoption new technologies instance distrust security hindered online shopping adoption 90s hoffman et al despite enhanced transparency reduced costs improved traceability bct adoption remains limited1 according pwc2 companies investing blockchain technology believe lack trust among users significant obstacle blockchain adoption technology adoption defined act beginning use new technology closely related distinct technology acceptance technology acceptance encompasses subjective behavioral intention support embrace technology serves precursor actual use e adopa https orcid org 1deloitte global blockchain survey available https www deloitte com global en thinking insights topics emerging technologies understanding blockchain potential html 2pwc time trust blockchain transform business economy available https www pwc com gx en issues blockchain tion research community uses various theoretical models explain bct acceptance mechanism define factors alshamsi et al alashmori et al norbu et al one recurring factors bct acceptance trust three forms trust widely recognized literature social trust digital trust trust technology social interpersonal trust defined subjective probability entity trustee required capacity willingness perform action beneficial least detrimental another entity trustor specific context gambetta et al compared social trust digital trust defines relationships entities digital world measure confidence trustor trustee ability protect data privacy individuals pietrzak takala trust technology another form trust reflects trustor beliefs specific technology attributes necessary perform expected situation negative consequences possible mcknight et al meeßen et al forms trust intrinsic organizations important implications organizational decision making technology adoption mcknight et al de filippi et al need explicitly addressed policy making digital transformation strategies solution design research studies confirm trust important factor bct acceptance conceptual ization trust specific role discussed detail critical review intend contribute deeper understanding role examine impact trust bct acceptance focusing role plays defined theoretical models — whether predictor mediator moderator explore conceptualization trust within defined bct acceptance models analyzing trust defined measured aim determine whether researchers refer social trust digital trust trust technology theoretical frameworks remainder article organized follows section go definition key terms discuss related works research methodology described section section report results analysis selected studies answering research questions section discuss results potential implications present conclusions section background related works theoretical models technology acceptance adoption focused consistent use technology daily activities often associated technology acceptance technology acceptance refers willingness readiness individuals organizations adopt use new technology technology acceptance closely related often predicts technology adoption davis venkatesh et al theoretical models technology acceptance model tam often applied within context information systems understand predictors human behavior toward potential acceptance rejection technology marangunic´ granic´ theoretical models specify set constructs relationships explain phenomenon interest theoretical bct acceptance models example explain effect specified independent variables behavioral intention bi use bct dependent variable constructs defined theoretical models play role predictors mediators moderators fig examined phenomena predictors independent variables directly influence dependent variable mediators variables explain mechanism predictors influence dependent variable act intermediaries causal chain helping clarify certain effect occurs moderators variables affect strength direction relationship predictors dependent variable provide insights conditions certain effects occur variables function predictors mediators depending specific relationships examined trust blockchain technology bct measured either directly survey items like find bct trustworthy indirectly capturing data trust antecedents related indicators direct questions pose challenge leave trustworthiness open individual interpretation indicators observable variables reflect presence extent trust depend trust conceptualization chosen study see table figure overview variables relations theoretical acceptance models understanding acceptance factors relationships crucial technology adoption knowing predictors allows design targeted interventions understanding mediators provides insights adoption process e certain effect occurs example trust might mediate relationship system quality user acceptance understanding moderators allows development context specific strategies instance age gender cultural background might moderate technology adoption necessitating tailored communication support strategies different groups several theoretical acceptance models widely acknowledged literature technology acceptance model tam developed fred davis theoretical framework used understand predict user acceptance information technology davis model defines two primary predictors user acceptance perceived usefulness degree person believes using particular system would enhance job performance perceived ease use degree person believes using particular system would free effort tam2 venkatesh davis extends original model introducing concepts social influence processes subjective norm voluntariness image cognitive instrumental processes job relevance output quality result demonstrability perceived ease use key drivers user acceptance unified theory acceptance use technology utaut created venkatesh et al built upon tam identifies four predictors acceptance performance expectancy effort expectancy social influence facilitating conditions four factors influenced four moderators age gender experience voluntariness use result possible gaps intentions use technology actual use technology task performance fit ttf model goodhue thompson theoretical framework examines well technology matches tasks intended support fit impacts performance technology adoption technology organization environment toe baker framework defines factors influence organization decision adopt new technology divided three contexts technological organizational environmental acceptance predictors theoretical models show importance combining technical factors social factors related user personality context use trust trust social construct emerges interactions individuals groups described situation subject trustor willing rely chosen actions object trust trustee rousseau et al gambetta et al mayer et al mayer davis schoorman define trust function trustee perceived ability benevolence integrity trustor propensity trust mayer et al ability defines group skills competencies characteristics enable trustee influence within specific domain benevolence defines extent trustee believed want good trustor aside egocentric profit motive integrity refers trustee moral quality sincere honest capacity willingness adhere rules principles advances technology introduce new models social business interactions artifacts take role trustee so¨llner et al trust technology reflects trustor beliefs specific technology attributes necessary perform expected given situation negative consequences possible mcknight et al meeßen et al according so¨llner et al antecedents social trust e ability benevolence integrity mayer et al poorly suited studying trust relationships users artifacts since defined fit human character traits human decision making authors mcknight et al provide framework understanding trust technology formed effects technology usage put forward performance functionality reliability factors trust specific technology digital trust defines relationships entities digital world measure confidence trustor trustee ability protect data privacy individuals pietrzak takala digital trust trust technology closely related specific properties technology solution e g security reliability availability etc digital trust focused data security privacy whereas properties considered objective measures technology trustworthiness literature murtin et al jacovi et al garry harwood rychkova ghriba gharib et al always good predictors technology acceptance users social actors always technical expertise objectively evaluate complex technical properties ground decisions subjective beliefs work examines complex nature trust blockchain effect bct adoption table provides overview trust conceptualizations factors trust blockchain adoption blockchain technology emerged potential solution cope mistrust traditional centralized institutions online intermediaries general de filippi et al blockchain defined distributed database allows users transact public pseudonymous setup without reliance intermediary central authority glaser despite popularity efficiency blockchain technology experiences challenges user adoption depending industry sector use case privacy security scalability interoperability performance considered main challenges konstantinidis et al casino et al belotti et al marengo pagano theoretical models acceptance used researchers reason factors blockchain table types trust ref theory social trust mayer et al trust technology mcknight et al digital trust pietrzak takala adoption structured way study shin shin shows impact trust security privacy factors blockchain based solution acceptance behavioral intention use following work studies jena kumar et al alazab et al extend tam utaut models trust perceived security perceived privacy authors alshamsi et al examining technology acceptance models theories influential factors bc adoption among factors identified trust common factor affecting bct adoption authors taufiq et al study influence factors bct adoption taking example payments system indonesia banking industry highlight importance non technical factors attitude subjective norm cognitive style user alashmori et al authors identify factors bct adoption factors consistent tam utaut theoretical frameworks include trust systematic literature review taherdoost confirms trust important factor bct adoption particular supply chain industry authors marengo pagano conduct systematic literature review examine factors adoption bct across different countries industries identify trust recurring factor supply chain real estate banking study presented norbu et al focuses trust primary driver bct adoption digital payment systems existing literature confirms trust important factor bct acceptance nature trust specific role discussed detail work investigate role trust within proposed theoretical models e predictor mediator moderator also analyze conceptualization trust used models analyzing trust defined measured aim determine whether researchers refer social trust digital trust trust technology theoretical frameworks understanding nature trust impact factors factors ability benevolence integrity propensity trust perceived risk performance functionality reliability propensity trust institution based trust data privacy data security confidentiality bct acceptance crucial addressing adoption process use trust conceptualization social sciences gambetta et al mayer et al technology mcknight et al pietrzak takala addressing concept broader perspective methodology study present critical review theoretical models predicting bct acceptance unlike systematic literature review approach offers reflective analysis emphasizing judgment argument exhaustiveness particularly focus interpretation critical evaluation theoretical acceptance models supported empirical data aiming uncover trends patterns conflicts literature although formal guidelines critical reviews universally established adapted systematic literature review principles kitchenham charter kitchenham et al following steps defining research questions identifying relevant studies extracting data conducting critical analysis evaluation reporting results research questions formulate following research questions review rq1 commonly used theoretical models explain blockchain acceptance rq2 trust construct addressed studies rq2 trust defined studies rq2 trust indicators used rq3 types trust associated bct acceptance rq4 trust influence bct acceptance study selection critical review selected studies explicitly integrate trust proposed theoretical models bct acceptance flow diagram adopted prisma preferred reporting items systematic reviews meta analyses presents overview source selection process fig literature search conducted using scopus database scopus com used following keywords search blockchain trust acceptance adoption model framework improve relevance terms appear title abstract key words retrieved studies according dimensions ai interest bct adoption reflected number publications topic increases exponentially since therefore study chose articles published january limit publication year obtain consistent set publications affected recent apparitions resulting query illustrated fig sources automatically identified scopus database removing non primary sources kept records screening proceeded screening metadata identified records eliminated irrelevant studies based following exclusion criteria ec1 study formalize theoretical acceptance model ec2 study provide empirical validation proposed model ec3 study consider trust among factors acceptance adoption kept records full text assessment proceeded full text reading kept relevant studies analysis conducted backward forward citation analysis eligible publications previous step called snowballing technique identified records injected process three studies eventually added data set final set studies used analysis data extraction examined selected study extracting data • theoretical bct acceptance model proposed study reference acceptance model e g tam factors affecting bct acceptance according model • conceptualization measurement trust study reference definition literature indicators e questions trust defined study • role attributed trust within proposed acceptance model hypothesis related trust results empirical validation hypothesis critical analysis extracted data presented next section results analysis extracted data addressed research questions obtained following results commonly used theoretical models explain blockchain acceptance examined studies adapted extended various theoretical acceptance models reason bct tam davis commonly used theoretical model extended studies six studies use utaut venkatesh et al ground model models used include technology organization environment toe theory planned behavior tpb studies use single theoretical model studies alazab et al kamble et al ullah et al grounded several theoretical models table provides summary trust construct addressed studies trust defined studies address research question analyze explicit definitions trust presented text well indicators used studies measure trust independent variable studies provide explicit definitions text seven studies define trust social construct grounded willingness individual take risk vulnerable actions another party queiroz et al jena khazaei hannoun et al confidence ability integrity party yu et al gil cordero et al albayati et al aligned definition gambetta figure prisma flowchart summarizing table theoretical models model studies ref tam kumar et al saputra li rijanto palos sanchez gil cordero et al et al ullah et al utaut chang et al jena queiroz hannoun et al kamble et al ullah et al study chang et al defines trust association transparency degree one believes data provided blockchain technology services error free safe transacted transparently calculation based trust grounded rational evaluation expectation benefits costs used two studies chittipaka et al liu ye studies provide explicit definition trust trust indicators used studies trust construct latent variable directly observed measured studies via trust antecedents trust related indicators used survey questionnaire indicators antecedents defined conceptualization trust e g social trust trust technology digital trust presented table nine studies use trustworthiness direct indicator trust queiroz et al kumar et al yu et al gil cordero et al saputra darma albayati et al dirsehan liu ye chang et al literature selection process adapted bct acceptance darma sciarelli et al gao et al yu et al liu ye albayati et al dirsehan kamble shrestha et al et al khazaei alazab et al et al chittipaka et al alazab et al surveys perception blockchain trustworthiness assessed affirmative statements believe blockchain trustworthy queiroz et al bct trustworthy yu et al chang et al respondents express agreement statements using likert scale relying interpretation trustworthiness studies kumar et al saputra darma albayati et al focus promise commitment bct indicator evaluates whether users believe technology prioritizes best interests studies queiroz et al gil cordero et al include questions trust legal structures surrounding blockchain cryptocurrencies referred institutional trust mcknight et al confident legal technological structures protect problems cryptocurrencies gil cordero et al underscore importance institutional trust studies liu ye kamble et al emphasize trust built upon experiences questions suggest familiarity previous interactions system service play crucial role forming trust trust measured via safety security palos sanchez et al yu et al chang et al chittipaka et al dirsehan indicators mentioned include reliability transparency integrity honesty fairness confidence capability skills analyze indicators implying user trust model constructs example palossanchez et al respondents requested express belief bct security ability act user interest survey items related indicator include devices using blockchain technology would safe external threats hacking devices using blockchain technology would safe risk data forgery alteration devices using blockchain technology would secure personal information consistent definition trust technology mcknight et al gil cordero et al following trust indicator used confidence system similarly indicators privacy information quality formulated using implicit notion trust gil cordero et al ullah et al liu ye palos sanchez et al types trust associated bct acceptance analyzing definitions trust presented text along trust indicators indicators implying user trust model constructs classified trust constructs used studies social trust trust technology digital trust table provides summary classification social trust conceptualization used nine studies studies either use explicit trust definition consistent gambetta et al mayer et al define trust indicators using factors social trust table example kumar et al respondents asked perception bct commitment best interests gives impression promise commitment keeps interest consideration property consistent predictors social trust factors trust technology found nine studies factors digital trust seven studies example indicator firm data cloud might utilized outsider without consent used chittipaka et al indicator data blockchain technology would saved securely used chang et al measure trust indicators associate trust reliability security data blockchain several studies define trust indicators based multiple conceptualizations example kumar et al definition trust provided text implicit co notated privacy security consistent digital trust whereas trust indicators defined using notion commitment consideration user best interests aka benevolence consistent social trust analysis shows social trust plays important role defining trust bct several studies social trust identified relationship built users trustors bct providers trustees social entities example albayati et al trust indicator believe service providers cryptocurrency blockchain keep best interests mind used studies technology identified qualities intrinsic social entity kumar et al saputra darma trust indicators include affirmations technology keeps interest consideration services provided wallet keep best interests mind trust technology fundamental conceptualization trust bct well provides user objective metrics assess trustworthiness reliability performance functionality digital trust conceptualization focuses specific technical properties related data security privacy digital world examined acceptance models properties often integrated perceived usefulness construct tam perceived security perceived privacy constructs specifically defined models jena shrestha et al kumar et al trust influence bct acceptance examined hypotheses made studies role trust bct acceptance validation hypotheses trust predictor bct acceptance predictors independent variables directly influence dependent variable trust → var x trust direct effect behavioral intention bi use bct according studies chittipaka et al trust positioned predictor adoption stands actual use follows bi trust defined predictor attitude towards use kumar et al albayati et al attitude towards use reflects positively negatively individual feels using technology table trust affecting study reference social trust gil cordero et al jena saputra darma noun et al albayati et trust technology gil cordero et al jena et al yu et al queiroz et al digital trust kumar et al chittipaka liu ye palos sanchez n sciarelli et al rijanto behavioral intention reflects individual readiness plan use technology often used interchangeably theories however attitude precedes bi therefore conclude studies recognize trust direct effect acceptance seven studies show significant effect trust constructs affect acceptance perceived usefulness perceived ease use performance expectancy perceived privacy table provides summary results trust mediator mediators variables explain mechanism predictors influence dependent variable act intermediaries causal chain helping clarify certain effect occurs var x → trust → var according jena trust acts mediator facilitating conditions performance expectancy bi behavioral intention use bct means facilitating conditions performance expectancy enhance users trust turn affects intention use bct according gilcordero et al trust mediates effect eworm electronic word mouth web quality perceived risk bi e wom refers positive negative statement made potential actual former customers product company made available multitude people institutions internet similarly perceived privacy shrestha et al positive effect trust turn affects intention use bct trust mediates effect perceived security kumar et al shrestha et al perceived privacy kumar et al attitude towards use bct table presents summary bct acceptance alazab et al queiroz et al kumar et al dirsehan hanal alazab et al palos sanchez liu ye ullah et al dirsehan et al gao li chang et al et al kamble et al shrestha et al results trust moderator moderators variables affect strength direction relationship predictors dependent variable provide insights conditions certain effects occur variables function predictors mediators depending specific relationships examined trust → var x ×var trust defined enhancing effects variables bi performance expectancy effort expectancy social influence facilitating conditions alazab et al subjective knowledge dirsehan according gil cordero et al trust moderates effect e worm web quality perceived risk user behavior according shrestha et al trust increases positive impact privacy attitude towards use bct according palos sanchez et al trust moderates effect perceived risk perceived easiness use means level trust user influence perceived risk impacts perception technology ease use specifically higher trust mitigate negative effects perceived risk making technology seem easier use despite potential risks conversely lower trust amplify negative impact perceived risk perceived ease use discussion analyzing theoretical models bct acceptance found social trust widely used reasoning defining measuring trust social trust factors appear indicators studies table trust direct predictor var x dependent study behavioral intention bi jena gao li ye queiroz et darma gil cordero adoption chittipaka et al attitude towards use kumar et al albayati perceived usefulness liu ye dirsehan perceived ease use albayati et al saputra performance expectancy chang et al perceived privacy palos sanchez et al table trust mediator moderator role trust var x independent facilitating conditions performance mediator expectancy eworm web quality perceived risk privacy perceived security perceived privacy performance expectancy effort expectency social influence facilitatmoderator ing conditions subjective knowledge eworm web quality perceived risk perceived privacy perceived risk abilities bct eliminate need central authority ensure transparency immutability transactions also frequently used trust indicators many studies focus technical properties blockchain co notate acceptance bct perceived security privacy jena kumar et al alazab et al also highlight important role benevolence service provider technology kumar et al albayati et al dirsehan integrity honesty bct also used trust indicator kumar et al liu ye albayati et al trust technology focuses technological properties excludes factor benevolence technology considered able act users best interests used nine stud bct acceptance summary yu et al hannoun et al liu al khazaei dirsehan saputra et al et al darma palos sanchez et al bct acceptance summary var depen study dent bi jena gil cordero et al shrestha et al attitude kumar et al shrestha et al bi alazab et al dirsehan user behavior gil cordero et al attitude shrestha et al perceived ease palos sanchez et al use ies form trust serves foundational element results suggest considering blockchain adoption users must first establish trust technology however basic trust formed focus appears shift toward digital functionalities attributes blockchain referred digital trust digital trust similar trust technology centered data privacy security confidentiality used seven studies studies incorporate multiple trust conceptualizations findings suggest trust multifaceted concept bct acceptance models different dimensions trust social technological digital playing distinct roles understanding dimensions enhance precision acceptance models improve interventions boost bct adoption another outcome study importance considering bct independently bct solution providers bct often referred trust machine excludes human factors social trust solution providers software engineers remain crucial social actors therefore trust building solution providers users must examined taken account alongside trust bct technological entity according studies trust direct impact behavioral intention attitude towards use adoption bct several studies highlight effect trust perceived usefulness perceived ease use mediating effect trust explaining effect variables bct acceptance found four studies moderating effect confirmed five studies general agreement among studies mediating moderating role trust example according jena trust mediates explains effect performance expectancy behavioral intention use bct terms expected performance leads trust turn leads acceptance however according alazab et al trust moderates effect meaning impact performance expectancy acceptance depend trust along lines kumar et al trust mediates effect perceived privacy attitude towards use bct shrestha et al considered moderator effect findings highlight critical role trust acceptance bct indicating directly indirectly shapes users attitudes intentions suggest following research questions added research agendas effective communication strategies bct solution providers build trust users organizations measure level trust bct among users accurately role trust technology provider play enhancing trust bct long term impacts early trustbuilding efforts sustained adoption bct trust bct compare trust traditional centralized systems lessons learned trust building emerging technologies applied bct users previous experiences technology influence trust bct related social trust various cultural contexts affect social trust bct solutions actions taken bct solution providers effective fostering social trust among users social trust develop time continued use bct related trust technology digital trust critical technological features affect user trust bct best practices ensuring data privacy confidentiality bct build digital trust findings identify gaps provide directions future research technology acceptance question improve trust emerging technologies including bct remains crucial incorporate concept trust technology design specific type requirement—trustworthiness requirements—has defined literature amaral et al kambilo et al studies propose adapting current design practices explicitly documenting tracing user trust concerns trustworthiness requirements clearly justifying design assumptions haley et al wang et al behind technical decisions mohammadi rambert rychkova believe understanding role trust technology acceptance crucial developing new methods approaches support technology trustworthiness design conclusion paper conducted critical review analyze role trust acceptance blockchain technology bct concept technology adoption often used interchangeably acceptance important distinguish two adoption refers actual use integration technology regular practice acceptance refers user willingness intention use technology theoretical models acceptance often identified behavioral intention use closely related attitudes towards use distinction crucial user may accept technology intend use without fully adopting consistently using practice conversely decision adopt technology without full acceptance prospective users lead important issues low utilization rates resistance potential abandonment technology understanding concepts helps designing better strategies promoting initial acceptance sustained use blockchain technology examined scientific publications de fine theoretical bct acceptance models extend well known technology acceptance model tam davis analysis focused trust conceptualized measured integrated proposed models identifying types trust roles trust plays bct acceptance findings provide nuanced understanding trust multifaceted role guiding future research incorporate various dimensions trust refine survey instruments accurate measurement advances theoretical development practical application field technology acceptance",
  "2025-LR": "introduction generative pretrained transformer gpt marks significant breakthrough nlp domain revolutionizing way interact technology open ing avenues applications numerous industries chatgpt considered fastest growing consumer application history numerous concerns chal lenges related gpt adoption raised technology trustworthiness one trust social construct emerges relationships interactions individuals groups involves willingness rely others influenced factors past experience reputation social norms trust technology described situation individual user organization trustor willing rely technology trustee accomplish specific task contrast interpersonal social trust trustworthiness technology mainly identified specific technical properties e g se curity fault tolerance etc however modern technologies including gpt technical properties sufficient predictors trust users often unable objectively reason technical properties due complexity system service moreover ai assistants powered gpt technology understand communicate using language manner closely resem bles humans simulate human like behavior social interaction provoke emotional feedback comparable interpersonal relationships shows importance factors interpersonal social trust technology h li et rychkova study closely examine trust formation process context gpt services role social trust gpt services acceptance use define theoretical model trust gpt services grounded integrative model organizational trust model ex tensively applied organizational settings currently limited explicit application model studies trust chatgpt generative ai ser vices particular explore trust decision use gpt services de pend factors interpersonal trust b socio demographic characteristics user including education awareness ai provide empirical validation model conducting survey among participants study aims contribute existing literature reaffirming role trust significant predictor user engagement gpt services aligning previous research influence trust tech nology adoption expanding conceptualization trust gpt services recognizing role anthropomorphic characteristics shaping user technology rela tionship remainder paper organized follows section present foundational concepts discuss related works section present theoretical model trust gpt services detail research method ology section discuss results analysis section present conclusions background related works generative ai gpt technology artificial intelligence ai defined intelligence exhibited machines par ticularly computer systems generative ai genai ai models able generate content whether textual audio image video form genai models use neural network models usually answer prompt textual input user transformer model particular developed google allowed shorter training model recurrence worked transforming text numerical values tokens generative pretrained transformer gpt deep learning model based transformer architecture designed natural language processing tasks gpt models pretrained large corpus text data fine tuned spe cific tasks understand generate contextually relevant text makes widely used ai assistants chatbots nlp applications first gpt model introduced openai product chatgpt considered breakthrough field chatgpt takes form chatbot user given field input text service answer human natural language products microsoft bing chat github copilot deepseek etc based different implementations architectures use gpt technology backbone refer products family gpt services study understanding trust formation gpt services empirical study popularity gpt services grows still much explored capabilities limitations trustworthiness one main chal lenges gpt acceptance low trust highly capable technology would huge productivity loss whereas high trust less performant technology lead reliance misuse technology social trust trust technology research literature trust act trust often represented relationship subject trustor object trust trustee characterized trustor willingness vulnerable rely upon trustee situation risk involved outcome trust defined actual engagement interaction trustor trustee integrative model organization trust developed mayer davis schoorman provides theoretical framework understanding trust organizations individuals formed composed three factors perceived trustworthiness contribute interpersonal trust – perceived ability skills competencies characteristics enable trustee influence within specific domain – perceived benevolence extent trustee believed want good trustor aside egocentric profit motive – perceived integrity perception trustee adheres set prin ciples trustor finds acceptable factors directly affecting trust moderated trustor propensity general willingness trustor trust others explained personality experience etc perceived risk comes nature interaction authors argue dimensions trustworthiness proposed mayer poorly suited studying trust relationships users artifacts since defined fit human character traits human decision making example assess perceived benevolence artifact one assume artifact able actively decide weather act interest user trustor alternative social trust trust specific technology widely ad dressed literature mcknight et al provides framework understanding trust technology formed effects technology usage authors put forward performance functionality reliability factors trust specific technology institution based trust including situational normality structural assurance exerts mediated pos itive effect post adoption technology use according according gpt services exhibit strong resemblance human havior ability simulate human decision making character traits makes us reconsider question people rely dimensions trustworthiness deciding whether trust people compared deciding whether trust artifact debated h li et rychkova theoretical models technology acceptance empirical research theoretical models specify set constructs rela tionships explain phenomenon interest constructs play role predictors mediators moderators examined phenom ena predictors independent variables directly influence dependent variable mediators variables explain mechanism predictors influence dependent variable act intermediaries causal chain helping clarify certain effect occurs moderators variables affect strength direction relationship pre dictors dependent variable provide insights conditions certain effects occur theoretical models technology acceptance model tam extension unified theory acceptance use technology utaut often applied within context information systems understand predictors human behavior toward potential acceptance rejection technology tam defines two predictors acceptance acceptance factors perceived usefulness degree person believes using particular system would enhance job performance perceived ease use degree person believes using particular system would free effort unified theory acceptance use technology utaut created built upon tam reviewed multiple tam models identified four factors acceptance performance expectancy effort expectancy social influence facilitating conditions whereas first two factors drawn upon original tam last two elaborate role social relationships environment acceptance social influence defined perceived importance individual use new technology people facilitating conditions defined belief individual organization technical infrastructure exists support use system technology four factors influenced four moderators age gen der experience voluntariness use result possible gaps intentions use technology actual use technology acceptance predictors tam utaut show importance com bining technical factors social factors related user personality context use trust placed among second order factors accep tance authors agree without trust users unlikely engage technology adopt needs trust acceptance gpt services literature factors rapid acceptance adoption gpt services chatgpt par ticular draw lot attention research community authors use extended tam examine factors chatgpt adoption study conducted among students higher education institutions results highlight response quality user friendliness chatgpt main factors adoption study conducted among chinese uni versity students findings highlight importance trust adoption understanding trust formation gpt services empirical study process chatgpt particular study shows perceived trust mod erates relationship awareness chatgpt perceived ease use usefulness main concepts tam study reported focuses user trust influence intention actual use chatgpt reference particular theoretical model provided survey reveals trust significant direct effect intention use actual use chatgpt authors explore factors influencing acceptance use chatgpt using extended utaut model work shows performance expectancy effort expectancy hedonic motivation facilitating conditions habit positively impact behavioral intention use chat gpt trust moderates relationship behavioral intention actual use behavior findings presented reveal relative risk perception emotional factors play significant roles predicting behavioral intentions toward chatgpt studies indicate significant role trust plays acceptance chat gpt using theoretical acceptance models e tam utaut underlying theories works specifically address trust formation pro cess moreover studies trust often co notated technical aspects e g privacy security considered technology ignoring social emotional aspects earlier works examine trust ai using social conceptualization trust authors examine nature trust ai discuss model inspired interpersonal trust authors associate ai trustworthiness ai model correctness commitment contract contractual trust authors propose theoretical framework discuss determinants human trust ai study identifies tangibility transparency reliability immediacy ai technology formation cognitive trust based rational thinking users whereas ai anthropomorphism plays important role emotional trust based affection study goes one step conventional research exploring chatgpt acceptance factors designed investigate process trust formation role social predictors trust gpt services propose theoretical model trust gpt services grounded upon mayer et al extend existing body knowledge explicitly linking trust chatgpt established social factors trust ability benevolence integrity methodology theoretical model hypotheses development table summarizes theoretical models trust technology acceptance discussed previous section draw upon define trust formation process figure presents theoretical model study social factors trustworthiness predictors trust gpt ser vices perceived ability benevolence integrity main factors trust according context specify construct integrating trust h li et rychkova table summary theoretical models trust acceptance relationship subject object predictors media moderators outcome tors social trust organization organization ability benevolence propensity interaction individual individual tegrity trust perceived collabora risk tion trust organization technology performance functional propensity acceptance techn individual system ity reliability trust institution use service based trust techn accep organization technology performance expectancy age experience acceptance tance individual system effort expectancy social voluntariness use service influence facilitating use conditions fig theoretical model trust gpt services based indicators earlier works theories technology ac ceptance table perceived ability construct defined competence including technical functionality performance usability trustee gpt services case influence within specific domain closely lated perceived usefulness tam performance expectancy utaut perceived benevolence defined extent gpt services believed act interest trustor user example protecting personal data ensuring exactitude fairness objectivity provided swers digital world benevolence closely associated perceived privacy security data perceived integrity defined perception gpt services adhere set principles ethical legal trustor finds acceptable example ensuring verifiable tracable answers construct also associated credibility transparency technology h1 perceived ability significant effect trust gpt services h2 perceived benevolence significant effect trust gpt services h3 perceived integrity significant effect trust gpt services understanding trust formation gpt services empirical study trust gpt services use gpt services trust core variable model define trust gpt services willingness user rely services situation risk negative outcome possible risk taking relationship defines actual use gpt services model h4 trust significant positive effect use gpt services role technical background trust formation integrative model organizational trust defines propensity trust individual char acteristic trustor predicts interpersonal trust also moderates impact pa pb pi trust model consider role propensity trust fulfilled trustor knowledge technology suggest users exposed technology general via academic background professional experience likely rely new tech nology gpt services trust moreover suggest user strong background technology aware technical function alities characteristics gpt services constituting perceived ability benevolence integrity therefore background technology moderate effect factors trust h5 user background technology significant effect trust gpt services h6 h8 user background technology moderating effect per ceived ability benevolence integrity gpt services role specific knowledge ai trust formation consider specific knowledge ai also improve trust gpt services h9 specific knowledge ai significant effect trust gpt services measurement model use reflective latent constructs model perceived ability benevolence integrity well trust use see teble construct modeled latent measured directly study perceived ability associated perceived functionality effi ciency usefulness performance expectancy effort expectancy measured latent variable using items pa1 pa5 perceived benevolence willingness good according associated confidentiality assertion gpt services share disclose user personal data chat details also associated objectivity non bias responses per ceived integrity associated transparency traceability model constructs measured indicators pb1 pb4 pi1 pi4 see table dependent variables trust use also modeled latent variables measure trust suggesting respondents specific situation asking wether would trust gpt service situation t1 t4 indicator t5 used measure important respondents fact content produced human reverse coded measure use define items likert coded u1 respondents invited checkbox h li et rychkova gpt services know use list u2 u3 measure frequency use leisure work ordinal variables item measured using point likert scale background technology specific knowledge ai calculated categorical variables socio demographic data see table example background technology calculated degree tech x education data collection sample characteristics questionnaire designed iteratively tested small conve nience sample feedback final version questionnaire dis tributed among students bachelor master miage master program sorbonne university professional linkedin network authors non probabilistic accidental sampling data collected pe riods february april november december collected google forms data exported csv cleaned coded analysis total responses collected n table summarizes socio demographic data sample data analysis conducted data analysis using jasp open source program sta tistical analysis supported university amsterdam use structural equation modeling sem method test defined hypotheses following recommendations choose use covariance based structural equation modeling cb sem following reasons goal study test confirm well established theory explore new theory consider model consists predominantly reflective constructs indicators manifestations latent variable independent sample test mean comparison verification conducted analyze differences trust use gpt services two samples corresponding two evaluation periods survey separated nine month interval results section first evaluate measurement model determine collected data represents reliably theoretical constructs discuss hypotheses testing results measurement model assessment asses factor loadings convergent discriminant validity model factor loadings represent correlation latent variables factors measured items values factor loadings generally expected understanding trust formation gpt services empirical study table measurement model construct item measurement perceived pa1 cover letters written gpt services better wrote ability pa2 use gpt services candidate screening makes cruitment process efficient pa3 think gpt services efficient tabnine similar tool coding assistance generate review code save time pa4 think gpt services convenient tabnine similar tool coding assistance coding pa5 working gpt services easier configuring query searching engine like google scholar perceived pb1 would mind typing personal details like location di benevolence etary restriction allergies gpt service pb2 think gpt services would give restaurant recommendation less biased person pb3 gpt services candidate screening make less biased decisions human actor pb4 would use code details work project prompting gpt services help perceived pi1 gpt services transparent recruiting tool integrity human actors pi2 think sources gpt services return traceable pi3 think gpt algorithm data training transparent pi4 fact wikipedia provide references sources important reverced coding trust t1 would trust gpt service find restaurant friend meeting t2 would trust gpt service e g chatgpt conduct lit erature research text editing essay article thesis t3 would trust gpt service e g copilot help correcting bug code getting code ready production today t4 would trust gpt service e g chatbot help cv cover letter t5 fact wikipedia articles written human contrib utors important reversed coding use u1 kind gpt services use u2 often use chatgpt work u3 often use chatgpt fun personal stuff h li et rychkova table socio demographic data variable n n variable n n age education high school bachelor master phd degree yes knowledge none tech ai fairly good expert ≥ strong loading good representation factor acceptable loading model latent variables show moderate strong loading lowest value pi2 factor loadings statistically significant p value use cronbach alpha asses model reliability ≥ good reliabil ity overall reliability α shows full set items reliable even though individual constructs weak e g trust α discriminant validity measures pairwise construct distinct constructs model use heterotrait monotrait htmt ratio asses discriminant validity model construct pairs htmt validity threshold indicating sufficiently distinct however benev olence integrity htmt indicates higher correlation two factors conclude convergent validity supported model fac tor loadings high indicating indicators strongly related respective latent constructs discriminant validity partially supported high correlation benevolence integrity suggests overlap path estimates hypotheses testing significant path coefficient β p value table one primary measures evaluate causal relationship structural model figure summarises hypotheses testing results findings study provide empirical support hypotheses h1 h9 follows h1 perceived ability shows small positive effect trust gpt services β however relationship statistically significant p suggests based current data strong evidence users perception system capability directly influences trust h2 perceived benevolence significant positive effect trust gpt services β p finding suggests potential subjectivity bias confidentiality user interactions gpt services represent important concern users inhibiting trust understanding trust formation gpt services empirical study table regression coefficients outcome predictor std estimate β std err p trust ability benevolence integrity spec kn ai bgr tech int tbgr int b tbgr int tbgr use trust fig structural model hypotheses testing h3 study confirm statistically significant effect perceived integrity trust gpt services β −0 p lack statisti cal significance implies perceived integrity play decisive role shaping user trust factors may stronger influence trust formation context h4 study confirms trust significant positive effect use gpt services β p high effect size suggests trust primary determinant adoption continued use indicating users perceive gpt services reliable capable well intentioned much inclined integrate activities h5 study confirm statistically significant direct effect user background technology trust β p nevertheless able confirm moderating effect h6 user background technology significantly moderates relationship perceived ability trust β p a−t bgr suggests higher user level education technology stronger h li et rychkova impact perceived ability trust gpt services specifically users stronger technological background likely develop trust gpt services perceive system capable h7 user background technology significantly moderates relationship perceived benevolence trust β −0 p b−t bgr negative value β suggests higher user level education technology weaker impact perceived benevolence trust gpt services specifically users stronger technological background less likely rely perceived benevolence fairness objectivity confidentiality etc exchanges gpt services forming trust h8 user background technology significantly influence lationship perceived integrity trust gpt services non significant moderating effect β p suggests i−t bgr factors honesty transparency adherence ethical principles im pact trust gpt services consistently across users regardless technical background h9 specific knowledge ai significant positive effect trust gpt services β p indicating users greater ai related knowledge likely trust services finding suggests familiarity ai concepts mechanisms limitations enhances users confidence gpt systems users understand ai may better assess ca pabilities interpret outputs accurately manage expectations leading increased trust observations conducted independent samples test order evaluate whether significant difference means trust use gpt services two groups first group respondents participated survey february period second group november period results illustrated fig find significant evidence increase trust gpt services time statistics p conventional significance threshold p contrast found significant increase self reported use gpt services february november statistics p suggests factors trust e g habit formation external influences peer pressure availability new ser vices etc may driving growing use adoption gpt services conclusion study aimed provide deeper understanding social dimensions trust increasingly human like ai technologies explored user trust gpt services examining social factors influencing formation defined integrative model organizational trust study empirically validated proposed theoretical model survey participants data analysis conducted using structural equation modeling sem jasp understanding trust formation gpt services empirical study fig independent samples test trust use u findings show perceived benevolence gpt services signif icant positive effect trust gpt services h2 highlighting users concerns potential bias confidentiality interactions perceived ability perceived integrity showed small positive negative effects respec tively h1 h3 however based data effects statistically significant study confirmed trust significant positive effect use gpt services h4 role user background technology also explored direct statistically significant effect trust h5 exhibit significant moderating effects particular able confirm higher level education technology strengthens positive impact perceived ability trust h6 similarly higher level education technology weakens positive impact perceived benevolence trust h7 impact perceived integrity trust significantly moderated user technological background h8 also confirmed specific knowledge ai significant positive effect trust gpt services suggesting familiarity ai enhances user confidence h9 finally study shown self reported use gpt services significantly increased february november sig nificant increase trust period implies factors beyond trust might driving growing adoption gpt services study contributes literature reaffirming significant role trust user engagement gpt services explicitly linking trust gpt services established factors social trust future research going explore factors driving adoption gpt services delve deeper interplay social trust technical understanding context rapidly evolving ai technologies"
}