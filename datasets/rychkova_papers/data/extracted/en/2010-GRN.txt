Innovative Enterprise Architecture (EA) approaches developed by researchers and focused on the evaluation and the analysis of organizations usually require an extensive set of “measurable” input parameters. In practice, organizations often cannot provide the required data. This makes the implementation of these approaches difficult (if at all possible). In this work we specify the build-up process that represents a systematic identification, gathering, and consolidation of data required by the target EA approach. We illustrate the build- up process on the example: We present a case study where we implement the research approach to business-IT fitness measurement in the context of a real industrial project in a mass retail company: Initially, the poor quality of the input data presented a serious threat for business-IT alignment assessment using the fitness measurements. After the input parameters have been built up, the applicability of the fitness measurements was significantly improved (from 10% to 90%) and alignment assessment was accomplished successfully. We believe that using the build-up process it is possible to increase the applicability of any research approach in EA and, in spite of the initial absence of input measurable parameters, to deliver meaningful results to practitioners. design science INTRODUCTION Nowadays, numerous approaches aiming at validation, measurement, and improvement of business-IT alignment are developed by the research community (Bleistein 2005; Bodhuin, 2004; Kearns & Ledere, 2003; Campbell & Avison, 2004; Luftman, 2000; Rychkova, 2008; Simonin, 2007; Wegman, 2005; Wieringa, 2003). However, many of these approaches have difficulties in being adopted by the industrial organizations whose needs they are addressing. To identify and eliminate a malfunction in a car, a mechanic needs to know the vehicle’s technical characteristics (from the car registration book), its current state, and accident history (from the car maintenance book), and its condition of exploitation. This information represents an important input for the diagnostics and repair. Along similar lines, approaches for diagnostics and assessment of business-IT alignment strongly rely on their input data - models, specifications, and other documents that describe an organization “As-Is”. The quality of this input data is one of the main factors affecting the applicability of EA approaches. Research approaches in EA are particularly sensitive to input data quality. In practice, Problem: organizations cannot meet the high requirements that researchers define for the input data (e.g. data models, business process models, IS documentation, etc.). Often such data is incomplete or does not exist at all. This prevents the innovative research approaches from being adopted by practitioners (Fig.1). In this work we do not encourage the organizations to improve their process documentation in order to benefit from innovative research. In contrast, we claim that researchers themselves can significantly improve the applicability of their approaches. In this article we discuss the guided implementation that allows a researcher (or a group of researchers) to build up necessary input data based on the documentation and other information sources available in the organization. We believe that using the build-up process, it is possible to increase the Hypothesis: applicability of the research approach and, in spite of the initial absence of input measurable parameters, to deliver meaningful results to practitioners. The approach to measure the fitness relationship between business and IT in organizations presented in (Etien & Rolland, 2005) is an example of an EA approach developed in academia. This approach addresses the problem of business-IT alignment: it defines metrics to quantify the fit between the business of an organization and the IT systems that support it. Metrics application (the process called here and below the fitness measurement) allows organizations (i) to identify precisely the aspects of business (business goals, activities, and so on) that are not supported or ill-supported by the existing IT and (ii) to specify the strategies to improve business-IT alignment. In this work, we present a case study that validates our hypothesis on a practical Method: example. The subject of our study is the fitness measurement approach proposed in (Etien & Rolland, 2005). We apply this approach to a project of business-IT alignment assessment in a mass retailer company - the ABC-Supermarket (by the agreement with the company, its real name will not be disclosed). To increase the applicability, we define a process that builds up required measurable parameters based on the available documentation and other information sources. Our experience shows that small companies (10-50 people, up to 20 Case Evaluation: processes and applications) typically have no difficulties providing the information required for business-IT alignment assessment. Among the reasons, we can highlight the following: process and information system landscapes of such companies are not too complex and kept under control; the roles of data and process owners are well defined and can serve the trustworthy information sources. This is not always the case for the big organizations with hundreds applications and processes on place. In such organizations the problem of inconsistent or missing data becomes a serious threat for business-IT alignment assessment. Thus, the bigger an organization, the worse applicability of the fitness measurement approach can be expected. Figure 1. [The traditional implementation of a research approach for Business-IT alignment assessment] ABC-Supermarket is a mass retail company - one of the leaders on the French market. Today ABC-Supermarket counts approximately 3000 independent operators and thousands of outlets in France and internationally. This company encounters ~130 000 employees (including 700 specialists working in IT); it runs about 120 business processes supported by 220 applications. Thus, for our study, ABC-Supermarket represents a critical case: we claim that if our hypothesis is valid for ABC-Supermarket case, it is likely to be valid in many other cases. In this work we define a build-up process that consists of three main phases: (i) identification of the parameters to build up (ii) data collection, (iii) data consolidation. Each of these phases is followed by a validation. We also specify techniques that can be used in each phase. We implement the build-up process for the fitness measurement approach and illustrate it on the ABC-Supermarket case. The results of our study confirm our hypothesis: they show that the build-up process increases the applicability of the fitness measurement approach from 10% to 90%. Solely based on the data available in the ABC-Supermarket only one metric out of ten specified in (Etien & Rolland, 2005) can be applied; implementing the build-up process, we retrieve the input data for eight other metrics. This article has the following structure: In Section 2 we present the state of the art; in Section 3 we define the generic build-up process that can be customized for an arbitrary research approach in EA. In Section 4 we introduce the fitness measurement approach and identify the input parameters required by this approach. In the second part of this section we introduce a case study: the application of the fitness measurement approach to ABC-Supermarket. A gap between required input parameters and available data prevents the complete application of fitness metrics. In Section 5 we show how the build-up process is used to fill this gap and to improve the applicability. In Section 6 we present the summary of the ABC-Supermarket fitness measurement project. In Section 7 we discuss the lessons learned and present our conclusions. STATE OF THE ART The validation and the assessment of business‐IT alignment is a subject of continuous interest in research and industrial communities. For practitioners, validation of business‐IT alignment is an important part of organization government; for EA researchers, approaches to accurate alignment measurement pave the way to new theories in the field (E Chan & Reich, 2007). These approaches strongly rely on quality of their input data that represents domain­specific knowledge of an organization. Collection of domain‐specific knowledge is not a trivial task: it depends on the organization, the problem scope, and the complexity of the EA approach itself. In this section, we discuss several approaches for the validation and the assessment of business‐IT alignment and we investigate (i) the awareness of these approaches about the domain‐specific knowledge collection and (ii) the instruments of domain‐specific knowledge collection used by these approaches. Many approaches to business‐IT alignment validation and assessment are addressed in the literature. In this section, we discuss three different groups: the questionnaire‐based approaches, the framework‐based approaches and the approaches based on metrics. Questionnaire­based approaches. The approaches defined by Renner (2003), Kefi (2003) and Beeson (as cited in Etien, 2005) specify questionnaires as instruments for domain‐specific knowledge collection. They are implemented as follows: the specialist in charge of business‐IT alignment validation conducts interviews with business and IT actors in the organization. The issues addressed by the questionnaires include: “successes and failures in communication between business and IT actors”; “successes and failures in understanding of the IT domain by the business actors”; “successes and failures in understanding of the Business domain by the IT actors”; etc. Kefi (2003), for example, addresses the problem of alignment by asking the interviewees to answer the following question: “On a scale of 1 – 5, how do you rate IT alignment in your organization?” The goal of these interviews is to reveal the mutual understanding of the business and IT strategies of the organization by its actors. The approaches discussed above result in a single indicator characterizing the alignment. The approaches listed below provide more detailed analysis of the alignment in organizations: In (Bergeron, 2004), authors define an approach to assess the alignment between IT structure and IT strategy. They specify a questionnaire that addresses four issues: IT environment perception; IT strategic use; IT planning and control; IT acquisition and implementation. As a result four alignment indicators are produced. Kearns and Ledere in (Kearns & Ledere, 2003) propose another questionnaire‐based approach that evaluates 12 different aspects of business‐IT alignment in organizations: 6 aspects are related to the alignment between an organization business plan and its IT plan; and 6 other aspects are related to the alignment between the IT plan and the business plan. The common characteristic of questionnaire‐based approaches is that they are solely based on the analysis of personal experience and understanding of the situation by the actors in the organization. To make the alignment assessment results more objective, various techniques can be used. One of them is proposed in (Burn 1993, 1996): in this publication, the author defines the Organizational Culture Audit (OCA). The OCA can be considered as an instrument for alignment assessment. It addresses the following issues: the external strategy vs. the IT strategy; the internal infrastructure models for business and IT, etc. The author claims that (i) the business‐IT alignment is an ongoing process and (ii) in order to provide accurate and objective assessment results, the OCA should be applied regularly (e.g. once per year) by different managers. Framework­based approaches. Capability Maturity Model Integration (CMMI) is a framework for assessment of processes in organizations (http://www.sei.cmu.edu/cmmi/). It originates from CMM – Capability Maturity Model for software development processes. Mature processes can be characterized as transparent, reliable, flexible and agile, i.e. they are able to efficiently support any change of the organization strategy. CMMI appraises the current maturity level of processes in an organization and offers guidelines to improve these processes and to bring them to the next maturity level. SCAMPI ‐ Standard CMMI Appraisal Method for Process Improvement – is the appraisal process defined for CMMI (http://www.sei.cmu.edu/cmmi/). SCAMPI specifies three levels of formality for appraisals: Class A, B, and C. SCAMPI appraisal processes are conducted by SEI‐authorized Lead Appraisers and are based on the well‐defined process specification (SCAMPI Upgrade Team, 2006). SCAMPI can be considered as an instrument for the domain‐specific knowledge collection for CMMI. In (Luftman, 2000), the Strategic Alignment Maturity Assessment framework is defined. This framework is inspired by CMM and is used for assessing the alignment between business and IT strategies. This framework defines five maturity levels of processes based on industrial best practices: 1. Initial/Ad hoc; 2. Committed; 3. Established/focused; 4. Improved/managed; 5.Optimized. Similar to CMMI, at each maturity level, this framework offers guidelines to improve the processes and bring them to the next maturity level. An appraisal process for this framework is specified in (Luftman & Brier, 1999). This process plays a similar role as SCAMPI for CMMI – it defines and consolidates the domain‐specific knowledge and helps to prepare the organization for the actual assessment. Approaches based on metrics. These approaches address multiple aspects of alignment in organizations using various metrics. An approach presented in (Bodhuin, 2004) defines two metrics for alignment assessment: the technical coverage, which stands for a percentage of process activities adequately supported by a software system; and the technical adequacy, which refers to the quality of the IT support. Simonin (2007) proposes an approach based on Model Driven Engineering (MDE) to measure static and dynamic alignment. To our knowledge, no instrument or technique for domain‐specific knowledge collection was defined by these approaches. Except for questionnaire‐based approaches, other approaches for alignment validation and assessment often rely on domain‐specific knowledge presented in a concrete form – the form of models (data models, business process models etc.) and specifications (requirements specifications, IS specifications etc.). These models and specifications represent more objective and accurate sources of information. However, development of such models is an expensive and time‐consuming task that many organizations are not willing to do. Reich and Benbasat study the alignment in organizations based on written business plans, IT plans, self‐reports etc. (Reich & Benbasat, 1996). Authors report on the low applicability of their approach: two out of four alignment metrics were applicable. Among the reasons, they identify the following: IT and business plans often do not exist; self‐ reports are not accurate. Beats reports on the measurement of business‐IT alignment in the banking industry (Beats, 1996). The author states that IT alignment is hindered by a lack of domain‐specific knowledge among banking managers. According to (Reich & Benbasat, 2000; Baets, 1992), corporate strategy is often unknown, or unclear. Campbell (2005) argues that formal business strategies are often too ambiguous for business managers to understand. As our experience shows, research approaches in EA are particularly sensitive to the lack of mature data and process documentation in the industrial organizations: These approaches often require a complete set of specifications (business and IT). On the other hand, they are based on the assumption that all these specifications are available. Such research approaches obviously have serious applicability problems as soon as they are exposed to realistic environments. (E Chan & Reich, 2007) argues that the alignment research is mechanistic and fails to capture real life. Ciborra (1997) claims that scientific literature addressing alignment is too theoretical. He recommends a Mintzberg‐like approach, where researchers should go to the field and get insights from practitioners (Mintzberg, 1973). THE BUILD­UP PROCESS SPECIFICATION The traditional process of implementation of a research approach in EA is illustrated in Fig. 1: it includes (1) the application of the approach by a researcher using the input data provided by the organization and (2) the interpretation/validation of the results by the organization. In reality, only a part of the data required by the approach is available in the organization. The rest of input parameters are either incomplete or missing. This makes the implementation of the approach difficult (if at all possible). As practice shows, the majority of researchers are not addressing domain-specific knowledge collection in their works. We argue that explicit specification of such an activity for a given research approach can significantly improve the applicability of this approach. In this section we define the build-up process as a process of constructing measurable parameters required by a given (research) approach. Any research approach in EA that requires measurable parameters to be provided as input can potentially benefit from this build-up process. What is the Build­Up Process? The build-up process takes its roots in the design science. The design-science in IS focuses on the problems characterized by “unstable requirements and constraints based upon ill-defined environmental contexts, … by a critical dependence upon human cognitive ... [and] social abilities” etc. (Hevner et al., 2004). In this work, we investigate the problem that exhibits the similar characteristics and we propose the build-up process as a solution. “Design science addresses research through the building and evaluation of artifacts designed to meet the identified business need.” (March and Smith, 1995, Hevner et al., 2004). We take as a reference SCAMPI (SCAMPI Upgrade Team, 2006) and follow the principles of agile development methodology (http://agilemethodology.org/) in order to define the building and the evaluation activities for our build-up process. By artifacts in our case, we understand models that represent a problem domain of the organization. SCAMPI (Standard CMMI Appraisal Method for Process Improvement) defines the appraisal process for Capability Maturity Model Integration (CMMI). From SCAMPI we adopt the following phases of the build-up process: 1. Identification of the parameters for build up 2. Data collection 3. Data consolidation By definition, the build-up process represents a systematic identification, gathering, interpretation, and consolidation of the data required by a target EA approach. “Agile development methodology attempts to provide many opportunities to assess the direction of a project throughout the development lifecycle.” (http://agilemethodology.org/). Following the agile methodology principles, the extensive communication between a researcher and the domain experts in the organization – is the core of the build-up. Therefore, each phase specified above and performed by the researcher is complemented by a specific validation (or inspection) phase, where the main role is played by the domain experts: 1.a Inspection of the required data 2.a Validation of the collected data 3.a Interpretation and validation of the consolidated (built up) data Figure 2 illustrates the phases of the build-up process. Below, each phase is discussed in detail. Figure 2. [Guided implementation of a research approach for Business-IT alignment assessment: Identification of the parameters to build up, data collection, data consolidation and corresponding validation phases are introduced]. The requirements for an effective design-science research are formulated in the form of seven guidelines: design as an artifact; problem relevance; design evaluation; research contributions; research rigor; design as a search process; communication of research (Hevner et al., 2004). The vlidation of the build-up process against these guidelines is outside the scope of this paper and will be addressed in our future work. The Main Phases of the Build­Up Process Phase 1: identification of the parameters for build­up The goal of this phase is to identify what input data has to be built up. During this phase, the researcher has: To study the objectives and constraints of the target approach in order to derive the − required input parameters; To identify the available data relevant to the problem scope; − To evaluate the available data against the required input parameters; − Phase 1.a: inspection of the required parameters This phase teams up the researcher and the domain experts in the organization. The goal of this phase is: To familiarize the domain experts with the target approach terminology; − To familiarize the researcher with the vocabulary used and/or accepted in the − organization; To express the approach requirements in domain‐specific terms; − To identify the parameters that cannot be built up (should be ignored); − We focus on the last point in detail: To identify parameters that have to be ignored, the team should inspect each required parameter x answering the following question: “How the parameter x can be validated?” or “Who can approve or disapprove x in the organization?”. If there is no means to validate x – it should be ignored. The application scenario of the target approach should be modified (e.g. reduced) accordingly. As a result of phases 1 ‐1a, the researcher should be able to identify which input parameters are available in the organization, which can be built up, and which should be ignored. Phase 2: data collection This phase is based on observations and gathering of trustworthy evidence about the organization “As‐Is”. During this phase, the researcher has: To identify the relevant data sources (documents, knowledgeable individuals); − To use systematically the techniques of data collection; − By document sources we mean all available documentation (i.e. business documentation, technical documentation, intranet, and any other resources related to the problem area). Knowledgeable individuals are people in the organization (project leaders, managers, end users) whose knowledge and understanding of a problem context can contribute to the alignment assessment. Data collection techniques may include but are not limited to: interviews, questionnaires, surveys, reverse engineering, documentation studying, role playing, workshops, mind mapping, etc. Phase 2.a: validation of the collected data To guarantee that the result of the build‐up process is accurate, the collected data has to be validated by the researcher and by the domain experts in the organization. The collected data is valid if it is accurate, corroborated, and consistent. The validation process specified in SCAMPI provides the definitions for the accuracy and corroboration. We adopt these definitions for the build‐up process. The collected data is accurate if (i) it can be explicitly associated with one or several required input parameters of the target approach, (ii) it was derived from trustworthy evidence seen or heard during data collection sessions; (iii) it is clearly worded and expressed in terms used at the organizational unit. The collected data is corroborated if (i) it is derived from at least two different sources (individuals or document sources); (ii) it is collected from at least two different data gathering sessions (interviews, or meetings); (iii) it is cross‐checked with other observation results; The collected data must be consistent with other validated observations and collected data. The researcher can assure the accuracy, the corroboration, and the consistency of the collected data by setting up the collection process and by using the data collection techniques according to the indications above. Phase 3: data consolidation This phase aims at processing, restructuring, and formalizing the collected data. As a result of this phase, the researcher develops a set of models and specifications that can be directly used by the target approach for the alignment assessment. Data consolidation techniques may include but are not limited to: - Model engineering (i.e. business process modeling, goal modeling, data modeling, other modeling techniques) - Requirements engineering (requirements identification and formalization) - Process mining - Data mining - Extreme programming or rapid prototyping (when the better understanding of the processes and/or applications is required). The examples of consolidated data are: business process models, UML diagrams, business rules, requirements models, code, etc. Phase 3.a: interpretation and validation of the consolidated (built up) data The domain experts play the main role in this phase. The goal of this phase is: To familiarize the domain experts with the models and specifications obtained during − consolidation; To confirm the correctness and unambiguity of the consolidation results; − To validate the consolidation results against the collected data and to prove that no − contradictory conclusions are made. To guarantee the correctness of the built up parameters, the consolidated data must be consistent with other valid observations. In aggregate, all collected and consolidated artifacts should constitute a set of truths about the organization. CASE STUDY: MEASURING A FITNESS RELATIONSHIP IN ABC­SUPERMARKET Fitness Measurement Approach In (Etien & Rolland 2005), the authors specify ten criteria and the corresponding metrics to evaluate the fitness relationship between the business and the system supporting it. Authors use the Wand and Weber (WW) ontology (Wand & Weber, 1992) to represent the components of the system (IT) level and Soffer and Wand (SW) ontology (Soffer & Wand, 2004) - to represent business concepts. These two ontologies are adaptations of Bunge’s ontology (as cited in Etien & Rolland, 2005), which is largely recognized for its theoretical foundations. Fitness relationship is expressed in terms of relations between WW and SW ontologies. Table 1 shows the list of fitness criteria, their corresponding metrics, and the way to measure them. For example, the fitness criterion called Goal satisfaction describes how the strategic or business goals, specified within an organization, are supported by the IT systems existing in this organization. The metric defined for this criterion is a goal count. Goal count can be measured by calculating the ratio between the business goals explicitly represented by the corresponding states of the IT systems and the total amount of business goals. The measured value 0 < goal count ≤ 1 can be then analyzed: if goal count = 1, then all goals are taken into account. Definitions: Business goal (Soffer & Wand, 2004) is a set of stable states of business objects we seek to achieve. Business object is an object that represents the entities in the business domain. Business state (or business object state) is a state of a business object at a time t. It is defined by the values of all attributes of this business object. Business actor can be defined as someone or something that interacts with the business or IT system using an interface; it participates in a business process and triggers external events that result in a state transition of a business object. Business resource (Soffer & Wand, 2004) can be considered as a business object that is passive – i.e. it neither initiates actions nor causes a state change. In our case a product specification is an example of a business resource. System class (or system object) is an object that represents the entities in the IT system (by analogy with a business object). System objects are often identified with classes in the UML class diagram of the system (the reason why both terms class and object are used). System event (Soffer & Wand, 2004) is associated with a system state change. By analogy with business activities that are changing business objects’ states, we consider system events changing states of system objects (or classes). A system event e can be described by a triple of state <g, s, s’> where s is an initial state of the system, s’ is a resulting state of the system, and g(e,s)=s’ is a state transition caused by the event e. System goals describe purposes of the system (Etien, 2005). We say that a system goal maps some business goal if the states of business objects associated with this business goal are represented by the states of the corresponding system objects (or classes) in the system. System state (or system object state) is a state of a system object (or class instance) at a time t. It is defined by the values of all attributes of this object. Paths are sequences of business (or system) states. Business laws represent legal rules and principles adopted by business organizations. Business processes of an organization are implemented according to these laws. Therefore, with respect to the business laws some paths of states can be considered as legal and others – illegal. Table 1: Fitness measurement framework (Etien & Rolland, 2005) Fitness criteria Fitness metrics Measurement details Number of activities represented by system 1. Support ratio Activity count events/Number of activities 2. Goal Number of business goals represented by the system Goal count satisfaction goals/Number of business goals Number of business actors represented by the system 3. Actor presence Actor count user interfaces/Number of business actors 4. Resource Number of business resources represented by the Resource count presence system classes/Number of business resources Business Number of business objects represented by system 5. Information object/System class classes/Number of business objects completeness mapping count 6. Informational Business /System Number of business states represented by system accuracy state mapping count states/Number of business states Business The same as information completeness but for one 7. Activity object/System class given activity completeness mapping count Business/System The same as information accuracy but for one given 8. Activity state activity accuracy mapping count Number of business laws (where each business state 9. System Law-mapping count is represented by a system state and the transitions reliability between business states are represented by the transitions between the corresponding system states) /Number of business laws Number of paths (where each sequence of business 10. Dynamic states connecting initial and final state is represented Path mapping count realism by a corresponding sequence of system states)/Number of possible paths of business states. Case: Product Referencing in the ABC­Supermarket ABC-Supermarket is a mass retail company - one of the leaders on the French market. It counts approximately 3000 independent operators and thousands of outlets. This company specialises in different sectors of retail business and is well known in both food and non-food retail markets. The initial specialization of the ABC-Supermarket is food and household products. Seven years ago ABC-Supermarket integrated a new product category – textile – in its portfolio and defined a new trade name - ABC-Fashion. To provide the IT support for purchase (upstream) and retail (downstream) activities for textile products, the company decided to use an already existing information system that supports the food products. The upstream activities of ABC-Fashion include marketing, product referencing, provider referencing, outlet billing, etc. These activities are supported by the existing upstream information system (UIS) of the company. The downstream activities of ABC-Fashion address product management in the outlet stores, e.g. stock replenishment. These activities are supported by the existing downstream information system (DIS). Among the tasks listed above, the most critical one is the product referencing task performed by the Product Referencing application: this task maintains the link between the upstream and the downstream information systems. The outlets are using DIS to order products available in UIS. If a product is not referenced in UIS, it is not available for ordering. Initially, the reuse of the existing Product Referencing application for ABC-Fashion seemed justified: retail business defines similar processes and master data for food and textile products. Master data also have a lot in common: both food and textile products are characterized by their type, price, etc. However, some differences still had to be addressed. We focus on two of them: (i) from the planning perspective, food products can be divided in two categories: permanent (always on the shelf) and non-permanent. For the textile products three planning categories are specified: permanent products, collection products (e.g. summer / winter), and short-cycle products (e.g. fashionable articles, brand promotions, etc.). Each product category requires its own referencing process; (ii) food products are referenced by logistic units. A logistic unit for the product P specifies a container, a pack, or a box that contains x identical items (or x kilograms) of P (e.g. 10kg box of tomatoes). It also represents a minimum amount of P that can be ordered, delivered, or stored in a warehouse. As the items in the box are the same - there is no need to reference each product item separately. For the textile products this does not hold as each logistic unit may have multiple product variations (e.g. jeans of different sizes and colors). Thus, each item of the textile products should be referenced separately, based on its size and color. Figure 3 illustrates the difference between food and textile logistic unit contents: Figure 3. [Logistic unit for food products (on the left) and its application to the textile product (on the right)] Neither additional planning categories nor specific data attributes for textile products are supported by the existing UIS and DIS. As a solution, numerous manual fixes and workarounds have been developed after several years. As a result, the existing information system got overloaded with patches and became not efficient. The company decided to make a revision of its information systems (UIS and DIS). The main objective of this revision is to understand, whether the existing information system (considered as a whole) can sustain the textile product category in general and product referencing in particular? And if not – what improvement can be made? To answer these questions we apply the Fitness Measurement Approach. APPLICATION OF THE BUILD­UP PROCESS TO THE CASE STUDY In our case study, we are using the Fitness Measurement Approach to evaluate how well the existing Product Referencing application of the ABC-Supermarket handles the following issues: Referencing the three textile product categories: permanent, collection, short cycle. ‐ Referencing the textile products taking into account the information about product size and ‐ color. Identification of the Parameters for Build­Up Table 2 illustrates the situation encountered by the researcher in ABC-Supermarket in the beginning of the project: Column 1 presents all the parameters required for fitness metrics implementation (derived from Table 1). Part A lists all the parameters that are related to business and can specify the viewpoint of the ABC-Fashion on the product referencing activities. Part B lists the IT related parameters that characterize the existing information system support for the Product Referencing. Column 2 indicates the availability of these parameters in the organization. For available parameters the source of information is also specified. Table 2. Input parameters required by Fitness measurement approach and their availability in the beginning of the project. 1. Required measurable parameters : 2. Recognized/ Available in the organization (y/n) A. BUSINESS ARTIFACTS RELATED TO PRODUCT REFERENCING 1 List of business activities Y (from business process models) 2 List of business goals N 3 List of business actors N 4 List of business resources Y (from business process model) 5 List of business objects N 6 List of business states N 7 List of business state transitions N 8 List of business laws Ignored B. IT ARTIFACTS RELATED TO PRODUCT REFERENCING 1 List of system events Y (from user manual of the Product Referencing application ) 2 List of system goals N 3 List of system user interfaces or system classes N representing actors 4 List of system classes (representing resources) N 5 List of system classes (representing business N objects) 6 List of system states N 7 List of transitions between system states N 8 List of allowed system state sequences (paths) Ignored The fitness measurement approach requires 16 input parameters. The researcher and a group of domain experts have inspected these parameters and received the following results: Only 3 parameters out of 16 are available in the ABC-Supermarket. This allows the researcher to apply one fitness metric out of ten presented in Table 1 (the Support Ratio metric). To improve the applicability of the fitness metrics, we implement the build-up process to construct as many required parameters as possible. 13 parameters out of 16 are identified as candidates for the build-up process. Due to the lack of related data sources, 2 parameters, namely, List of business laws and List of allowed system state sequences have been excluded from the consideration. Therefore, 11 parameters will be built up. Challenges The main challenge we met during this phase was related to identification of the problem scope: The problem was not well formulated; even with the help of the domain experts it was difficult to identify relevant (and exclude irrelevant) data that will contribute to the further alignment assessment. We proceed with the build-up process as follows: 1. Data collection 1.1. We collect the three parameters, available in the organization: List of business activities (A.1 in Table 2), List of business resources (A.4), and List of system events (B.4); 1.2. We gather business and IT artifacts for the 11 parameters A.2-3, A.5-7; B.2-7 from Table 2 by studying the document data sources and conducting the interviews with business and IT actors in the organization; 1.3. We validate the collected data conducting the interviews with domain specialists in the organization; 2. Data consolidation 2.1. We consolidate the collected data (e.g. by developing necessary models and specifications) and build up the missing parameters; 2.2. We validate built up parameters conducting the interviews with domain specialists in the organization. Below we illustrate the collection and the consolidation phases on several examples. The complete summary of the build-up process implementation is presented in Table 3. Data Collection Collecting the business artifacts for the build­up process List of business goals (A.2) Sources: Business process models; ‐ Business actors (the head of marketing department of ABC-Fashion, the head of referencing ‐ department, IS users). Techniques: We studied the process specifications identifying the keywords. Based on these keywords we formulated the business goals. We conducted interviews with business actors in order (i) to complete the process specifications by adding missing activities, (ii) to develop non- existing business process specifications and (ii) to validate our definitions of the business goals. Result: 9 business goals was obtained Collected data examples: Create permanent products; Create collection products; Plan commercial operations; Manage product prices; etc. List of business objects (A.5) Sources: Business process models; ‐ Business actors (the head of the referencing department, IS users); ‐ Techniques: the initial information is collected from the business process documentation. To complete our study, we conducted interviews with business actors. Result: 15 business objects are collected. Collected data examples: Commercial operation; Collection product; Short cycle product; Permanent product; Logistic unit; etc. List of business objects states (or business states) (A.6) Sources: Business process models; ‐ Business actors (the head of the referencing department, IS users); ‐ Techniques: the initial information is collected from the business processes documentation. We have validated the derived list of states by conducting the interviews with the head of the referencing department and IS users. Result: 46 business object states are collected. Collected data examples: States of Collection product: {referenced, selected, selection validated, selection rejected, price updated, reference changed, renewed in the new season, discounted} Collecting the IT artifacts for the build­up process List of system goals (B.2) Sources: Application documentation (short description of application functionality) available in the Intranet Techniques: no special technique. Result: one system goal relevant to our study: the Reference products goal. List of System objects (classes) representing business objects (B.5) Sources: Application documentation: data dictionaries, screen shots, user manuals; ‐ IT actors (the application administrator, application designers, developers); ‐ Techniques: Testing of IS and analysis of the available documentation. To complete the collection and validate the initial findings, we also conducted interviews with the IT actors. Result: 21 system objects are identified. Collected data examples: Subsidiary; Management category; Purchase code; Season; Product file; Package content file; etc. List of system object states (or system states) (B.6) Sources: User manual for the Product Referencing application; ‐ IT actors (the application administrator); ‐ Techniques: Testing of IS and analysis of the available documentation. We have validated the derived list of states by conducting the interviews with the referencing application administrator. Result: 54 system states are collected. Collected data examples: States of the logistic unit object: {created, extended, rejected, deleted, duplicated, updated, waiting for technical validation, waiting for effective validation} Challenges During the data collection we faced the following problems: (i) The identification of data sources (documentation and knowledgeable individuals) was extremely difficult: data and process owner roles were not explicitly defined in the organization and the information was collected from various data sources; specialists involved in the data gathering process often provided contradictory information; available documentation was often outdated or incomplete. (ii) It was challenging to validate the collected data: Due to the absence of the single “truth”, it was difficult to cross-check the data and to show that it is corroborated. Data Consolidation In this phase we analyze and consolidate the row data collected in the previous phase, and create the missing measurable parameters from Table 2. In our case study, we use two consolidation techniques: the intentional modelling called map (Rolland, 1999) and UML modelling. A map is a process model that specifies a non-deterministic ordering of intentions and strategies. Here the intentions mean goals that should be achieved. The strategies represent ways to achieve these goals (Rolland, 1999). The map diagram represents a labeled directed graph with intentions as nodes and strategies as edges between intentions. Two special intentions called “Start” and “Stop” indicate respectively the beginning and the end of navigation in the map. A section in a map is the triplet <I , I , S > i j ij where I is the source intention, I is the target intention and S is the strategy connecting the i j ij source and target intentions. A section can be refined by a map. In our project, we produce two types of map diagrams for the product referencing process: Business map describing the product referencing as it is seen by ABC-Fashion 1. management (Figure 4(a) and 4(b)) System map describing the product referencing process as it is implemented by the 2. existing information systems of ABC-Supermarket; (Figure 6(a) and 6(b)) We developed a UML business class diagram that specifies the data model for the product referencing as it is defined by ABC-Fashion. Using a reverse engineering we developed a UML class diagram that specifies the data model for the Product Referencing application. Business artifacts consolidation List of business goals (A.2) Techniques: Consolidation process using business map (Fig. 4) permitted us to: Identify new business goals (that were not captured during the data collection) and add ‐ them to the list; Identify relations (subgoal-supergoal) between goals and place these goals at different ‐ levels of abstraction within map diagrams; Identify redundant goals and remove them from the list. ‐ Figure 4. [(a) The Business map for Product referencing; This map contains two goals: Plan commercial operations and Reference products. Goals are connected by arrows representing business strategies. To achieve the Reference products business goal three strategies are identified: by making short cycle offer (C3), by building collections (C4), or by selecting permanent products (C5); (b)The Business map for Collection products referencing. This map presents the refinement of the section C4 of the Product referencing - <Plan commercial operations, Reference products, by building collections>. In a similar way sections C3 and C5 can be refined]. Result: 11 business goals at 2 different hierarchical levels are defined; Examples: plan commercial operations, reference products, (for collection product) make the collection plan, select collection products, create collection products, etc. Figure 5. [A fragment of the UML business class diagram for the product referencing. The ABC- Fashion product is represented by the corresponding class that has 3 specializations: Collection_Product, Permanent_Product, Short_Cycle_Product. Each product is associated with the corresponding specialization of a Product_Management. Each product can exist in several sizes and colors: this is reflected by the Color/Size class. Different products can be aggregated into logistic units represented on the diagram by the class Logistic_Unit]. List of business objects (A.5) Techniques: the UML class diagram where business object are represented by classes is illustrated in Figure 4. This diagram describes the ABC-Fashion business in terms of required data. UML modeling allowed us to identify relations between business objects; also 6 new objects have been identified. Result: 21 new business objects are consolidated. IT Artifacts Consolidation List of system goals (B.2) Techniques: IS map Result: 2 system goals at 2 hierarchical levels: Reference products, and Create products (Fig.6) Figure 6 [(a) The IS map for Product Referencing application; This map contains one goal – Reference products. This goal can be achieved by entering data from a product sheet (where the product sheet is a file with the product information) (b) The IS map for Product Creation. This map presents the refinement of the section C1 of the Product referencing map. Create products is a sub goal of the Reference products goal. Two strategies for the product creation are identified. The arc labelled XOR specifies that these strategies are exclusive, i.e. either one or another (but not both) can be used]. We can read the map in Fig.6(b) as follows: In order to Reference products, the products must be created [in the IS] either by attaching product to commercial operation management or by attaching product to permanent product management. List of system objects (classes in UML diagram) (B.4,5 in Table 2) Techniques: To identify the system objects for the Product Referencing application we develop a UML class diagram based on the available application documentation and data dictionaries. This class diagram specifies the product data as defined by ABC-Supermarket. A fragment of this diagram is shown in Figure 7 - left side. A Product file (Figure 7 - middle) – another system object -is generated from the product database and used by the upstream information system (UIS). It contains the administrative, logistic and pricing information about the product in a package. We have also identified two system add-ons developed specifically to support referencing of the textile products in ABC-Fashion: A Package Content File is associated to the Product File. It describes the content of each • package (quantity of product items per size and color). Short Cycle Envelope File defines the list of products that will be referenced as “short cycle” • products. It is used by replenishment agents for preparing outlets’ short cycle orders. Result: 24 system objects are identified in total. Figure 7. [An overview of the Product Referencing application data model (a fragment)]. Challenges In order to familiarize the domain specialists with the produced models we set up several rounds of meetings and workshops. This required a lot of time. To validate the built up parameters, we conducted several rounds of interviews with different domain specialists in the organization. There are some examples: Business and IT goal models (maps) are validated by the project managers and process • administrator; The UML class diagram presenting the business data model is validated by the ABC- • Fashion manager; The UML class diagram presenting the system data model is validated by the head of the • product referencing department; All correspondences between business and system activities are validated by the Process • administrator; Validation revealed that the built up data is mutually consistent. Summary In our case study we implemented three phases of the build-up process and built up 11 input parameters for the Fitness measurement approach. Table 3 summarizes the results of the build-up process. Table 3. The Build-up process summary Parameter Result after Consolidation technique Result after collection consolidation A.1 List of business 32 - - activities A.2 List of business goals 9 Business map 11 A.3 List of business actors 3 UML sequence diagram 5 A.4 List of business 4 - - resources A.5 List of business objects 15 UML class diagram (for 21 Business objects) A.6 List of business states 46 UML business object state 55 diagram A.7 List of business state 30 UML business object state 31 transitions diagram A.8 ignored - - B.1 List of system events 9 - - B.2 List of system goals 1 IS map 2 B.3 List of system user 1 UML sequence diagram (for 3 interfaces or system classes referencing application) representing actors B.4-5 List of system objects 21 UML class diagram (for 24 (classes) referencing application) B.6 List of system states 54 UML system object state 40 diagram B.7 List of transitions 33 UML system object state 28 between system states diagram B.8 ignored - - PROJECT SUMMARY AND RESULTS Project summary The project was conducted by 1 researcher working 9 months part-time in the ABC-Supermarket. Approximate time distribution: 66% - build-up phase; 33% - metrics application and analysis of results. Interviews have been conducted with: the head of marketing department of the ABC-Fashion; the head of the product referencing department; UIS/DIS users; the Product Referencing application administrator, developers, IT actors (the application administrator, application designers, developers). The following documents have been at the disposal of the researcher: Business process models; Application documentation (short description of application functionality) available in the Intranet; Application data dictionaries; screen-shots; user manuals for Product Referencing application. The following documents have been produced as a result of the build-up process: Business maps describing the product referencing process as it is seen by ABC-Fashion ‐ management; System maps describing the product referencing process implemented by the existing Product ‐ Referencing application; A UML business class diagram that specifies the data model for the product referencing as it ‐ is seen by ABC-Fashion; A UML class diagram that specifies the data model for the Product Referencing application; ‐ A UML entity-relationship diagram that specifies the actors and their involvement into ‐ product referencing process; Multiple object-state diagrams have been created to identify a behavior and lifecycles of ‐ business and system objects. Project Results Application of the fitness metrics from Table 1 reveals a significant “misfit” between the Product Referencing Process defined by the ABC-Fashion and the information system of the ABC- Supermarket that supports this process. The results are summarized in Table 4. Table 4: Fitness measurement results Criterion: Measurement result: 1. Support ratio 0.21 2. Goal satisfaction 0.09 3. Actor presence 0.4 4. Resource presence 0 5. Information completeness 0.33 6. Information accuracy 0.5 7. Activity completeness Various values for different activities in range (calculated for “Create the [0..1] reference in the system”). 8. Activity accuracy Various values for different activities in range [0.4 .. 0.72] 9. System reliability 0.35 10. Dynamic realism - The build-up process implemented for the Product Reference application in ABC-Supermarket permitted us to apply 9 fitness metrics out of 10 and to assess fitness relationship. Measurement results presented in Table 4 pinpoint the sources of the misfit in two problematic areas: Referencing of three textile product categories: permanent, collection, and short cycle. ‐ Referencing textile products taking into account the information about product size and color. ‐ Based on these results, the detailed guidelines on alignment improvement have been formulated. As this work is focused on the inputs of the fitness measurement approach and the way to deliver these inputs for further measurement, we will leave the detailed discussion about the results from Table 4 (that present the outputs of the fitness measurement approach) to future work. The domain specialists in the ABC-Supermarket have verified the fitness measurement results: another study, conducted by the internal analysts in ABC-Supermarket completely confirmed the results obtained using fitness measurement approach. This demonstrates that the build-up process resulted in the meaningful and correct input data. CONCLUSION AND LESSONS LEARNED As observed, many research approaches in EA have difficulties in being adopted by industrial organizations. One of the reasons for that are their high expectations on the input data availability and completeness that organizations cannot meet. In this article we discussed how researchers themselves can act in the real world environments in order to increase the applicability of their approaches: we make a hypothesis that using the build-up process, it is possible to increase the applicability of the research approach and, despite the initial absence of the input measurable parameters, to deliver meaningful results to practitioners. The build-up process introduced in this article can be considered as an instrument for domain- specific knowledge collection: it guides researchers in creating the input parameters necessary for a target (research) approach implementation. The build-up process takes its roots in the design science (Hevner et al., 2004). It is specified based on the agile methodology principles (http://agilemanifesto.org/) and represents a set of iterations where each activity performed by a researcher followed by a validation performed by the domain specialists in the organization. We presented a case study where the fitness measurement approach defined in (Etien & Rolland, 2005) has been implemented as a part of the industrial project launched by ABC- Supermarket. The applicability of the fitness measurements solely based on the data available in the ABC-Supermarket was 10% (one metric out of ten could be applied). Implementing the build-up process, we were able to construct 11 input parameters and to apply nine fitness metrics in total. This demonstrates a significant improvement in the applicability of the fitness measurement approach (from 10% to 90%) and confirms our hypothesis. The correctness of the built up data has been also verified: the measurement results based on this data has been confirmed by another study conducted in the ABC-Supermarket independently from our study. Lessons Learned Whereas fitness measurement results have received a positive feedback from the organization (this confirmed the build-up process effectiveness), the project performance was evaluated by the ABC-Supermarket as “unsatisfactory”. The reason: the build-up process has taken too much time (approximately six months). From the practical standpoint, it is a serious drawback: all the industrial projects always run in conditions where time and resources are limited. Therefore, even if finally we were able to assess the alignment in the organization, it was done too late and could not affect a strategic decision considering the existing IS. We identify the following problems that made our build-up process so time consuming: (i) Definition of the problem scope and identification of the relevant information sources. In the big companies like ABC-Supermarket collecting of the problem-specific data is not a trivial task. The researcher has to reduce the problem scope and to capture the relevant data without drowning in many irrelevant details. Thus, to make the build-up more efficient, the researcher herself has to be a knowledgeable specialist in the domain or has to team up and to closely collaborate with such specialists in the organization. (ii) Data validity. In the big companies, problem-related knowledge is often spread among individuals; understanding of the same part of business by different individuals may vary and may be even contradictory. To verify that the collected/consolidated data is mutually consistent, the researcher has to do an extensive cross-checking: this involves setting up the environment (scheduling interviews, organizing workshops) and discussing the results with many different specialists in the organization. Thus, to increase the build-up process efficiency, the project has to gain a visibility in the organization and to receive a support from the different team leaders and senior managers. We also identify the following questions that should be answered by EA researchers developing industry-oriented approaches: (i) How much time do we need to deliver the results? How can we estimate this time? Estimated time to market is a very important characteristic of an EA project. Business-IT alignment assessment results, for example, can have a great impact on the business and/or IT strategy of the entire organization. Thus, it is important to give a realistic estimation of the project time based on the available resources. Taking into account that the build-up process strongly affects the overall project time, we consider the time to market estimation for the build- up process as our main priority in the future research. (ii) What kind of intermediate results can be delivered? When? Organizations try to protect themselves from any possible risk related to project delays, insufficient results, or changed requirements: intermediate reporting (when the decision to launch the next project stage is based on the results of the previous stage) improves the approach agility and also has a high value for a manager. For the research approaches it means specification of the independent phases and identification of the intermediate results, which could be communicated to the organization during the project. For the build-up process, it means construction of the required input parameters one by one instead of collecting and consolidating all the data in one batch. Unfortunately, this implementation of the build-up process is not always possible: as fitness metrics approach shows, required input parameters are often based on the same models or specifications and highly related. Therefore, a lot of efforts are usually required in the beginning of the build-up process, when the researcher is obliged to collect and consolidate a huge amount of data in order to build up the first parameter. As the same models are reused, the build up time for each subsequent parameter drops. For the moment of this work, we found no evidence that these and similar problems affecting the applicability and efficiency of the innovative EA research are addressed in the literature. We find this subject very important and plan to address problems mentioned above in our future work.